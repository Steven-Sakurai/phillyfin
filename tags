!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	HullWhite/HullWhite.h	/^  auto A( \/*A(T-t) from the Hull White PDE*\/$/;"	f	namespace:hullwhite
A	HullWhite/HullWhite.h	/^  auto A( \/*A(t, T) from the Hull White PDE*\/$/;"	f	namespace:hullwhite
AND_THEN	AutoDiff/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	BSImpliedVolatility/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	CharacteristicFunctions/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	CppNumericalSolvers/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	FangOost/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	FunctionalUtilities/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	GaussNewton/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	HullWhite/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	ODESolver/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	RungeKutta/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	Vasicek/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	cfdistutilities/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	cuckoo_search/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	levy-functions/src/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	nelder_mead/catch.hpp	/^#define AND_THEN(/;"	d
AND_THEN	neuralNet/catch.hpp	/^#define AND_THEN(/;"	d
AND_WHEN	AutoDiff/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	BSImpliedVolatility/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	CharacteristicFunctions/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	CppNumericalSolvers/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	FangOost/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	FunctionalUtilities/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	GaussNewton/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	HullWhite/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	ODESolver/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	RungeKutta/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	Vasicek/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	cfdistutilities/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	cuckoo_search/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	levy-functions/src/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	nelder_mead/catch.hpp	/^#define AND_WHEN(/;"	d
AND_WHEN	neuralNet/catch.hpp	/^#define AND_WHEN(/;"	d
AUTODIFF_H	AutoDiff/AutoDiff.h	/^#define AUTODIFF_H$/;"	d
AllOf	AutoDiff/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	AutoDiff/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	AutoDiff/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	AutoDiff/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	BSImpliedVolatility/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	BSImpliedVolatility/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	BSImpliedVolatility/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	BSImpliedVolatility/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	CharacteristicFunctions/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	CharacteristicFunctions/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	CharacteristicFunctions/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	CharacteristicFunctions/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	CppNumericalSolvers/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	CppNumericalSolvers/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	CppNumericalSolvers/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	CppNumericalSolvers/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	FangOost/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	FangOost/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	FangOost/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	FangOost/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	FunctionalUtilities/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	FunctionalUtilities/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	FunctionalUtilities/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	FunctionalUtilities/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	GaussNewton/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	GaussNewton/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	GaussNewton/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	GaussNewton/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	HullWhite/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	HullWhite/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	HullWhite/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	HullWhite/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	ODESolver/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	ODESolver/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	ODESolver/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	ODESolver/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	RungeKutta/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	RungeKutta/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	RungeKutta/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	RungeKutta/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	Vasicek/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	Vasicek/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	Vasicek/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	Vasicek/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	cfdistutilities/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	cfdistutilities/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	cfdistutilities/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	cfdistutilities/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	cuckoo_search/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	cuckoo_search/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	cuckoo_search/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	cuckoo_search/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	levy-functions/src/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	levy-functions/src/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	levy-functions/src/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	levy-functions/src/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	nelder_mead/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	nelder_mead/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	nelder_mead/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	nelder_mead/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AllOf	neuralNet/catch.hpp	/^            AllOf( AllOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	neuralNet/catch.hpp	/^            AllOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
AllOf	neuralNet/catch.hpp	/^        class AllOf : public MatcherImpl<AllOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AllOf	neuralNet/catch.hpp	/^    inline Impl::Generic::AllOf<ExpressionT> AllOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AlphaOrBeta	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto AlphaOrBeta(const Rho& rho, const KType& K, const HType& H, const LType& l){$/;"	f	namespace:chfunctions
AlphaOrBeta_move	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto AlphaOrBeta_move(Rho&& rho, KType&& K, HType&& H, LType&& l){$/;"	f	namespace:chfunctions
American_Payer_Swaption	HullWhite/HullWhite.h	/^  auto American_Payer_Swaption($/;"	f	namespace:hullwhite
American_Receiver_Swaption	HullWhite/HullWhite.h	/^  auto American_Receiver_Swaption($/;"	f	namespace:hullwhite
American_Swaption	HullWhite/HullWhite.h	/^  auto American_Swaption($/;"	f	namespace:hullwhite
AnyOf	AutoDiff/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	AutoDiff/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	AutoDiff/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	AutoDiff/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	BSImpliedVolatility/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	BSImpliedVolatility/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	BSImpliedVolatility/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	BSImpliedVolatility/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	CharacteristicFunctions/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	CharacteristicFunctions/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	CharacteristicFunctions/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	CharacteristicFunctions/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	CppNumericalSolvers/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	CppNumericalSolvers/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	CppNumericalSolvers/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	CppNumericalSolvers/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	FangOost/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	FangOost/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	FangOost/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	FangOost/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	FunctionalUtilities/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	FunctionalUtilities/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	FunctionalUtilities/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	FunctionalUtilities/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	GaussNewton/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	GaussNewton/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	GaussNewton/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	GaussNewton/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	HullWhite/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	HullWhite/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	HullWhite/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	HullWhite/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	ODESolver/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	ODESolver/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	ODESolver/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	ODESolver/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	RungeKutta/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	RungeKutta/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	RungeKutta/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	RungeKutta/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	Vasicek/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	Vasicek/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	Vasicek/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	Vasicek/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	cfdistutilities/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	cfdistutilities/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	cfdistutilities/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	cfdistutilities/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	cuckoo_search/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	cuckoo_search/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	cuckoo_search/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	cuckoo_search/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	levy-functions/src/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	levy-functions/src/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	levy-functions/src/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	levy-functions/src/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	nelder_mead/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	nelder_mead/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	nelder_mead/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	nelder_mead/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AnyOf	neuralNet/catch.hpp	/^            AnyOf( AnyOf const& other ) : m_matchers( other.m_matchers ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	neuralNet/catch.hpp	/^            AnyOf() {}$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
AnyOf	neuralNet/catch.hpp	/^        class AnyOf : public MatcherImpl<AnyOf<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
AnyOf	neuralNet/catch.hpp	/^    inline Impl::Generic::AnyOf<ExpressionT> AnyOf( Impl::Matcher<ExpressionT> const& m1,$/;"	f	namespace:Catch::Matchers
AssertionInfo	AutoDiff/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	AutoDiff/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	BSImpliedVolatility/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	BSImpliedVolatility/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	CharacteristicFunctions/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	CharacteristicFunctions/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	CppNumericalSolvers/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	CppNumericalSolvers/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	FangOost/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	FangOost/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	FunctionalUtilities/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	FunctionalUtilities/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	GaussNewton/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	GaussNewton/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	HullWhite/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	HullWhite/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	ODESolver/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	ODESolver/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	RungeKutta/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	RungeKutta/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	Vasicek/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	Vasicek/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	cfdistutilities/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	cfdistutilities/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	cuckoo_search/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	cuckoo_search/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	levy-functions/src/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	levy-functions/src/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	nelder_mead/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	nelder_mead/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	neuralNet/catch.hpp	/^        AssertionInfo() {}$/;"	f	struct:Catch::AssertionInfo
AssertionInfo	neuralNet/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionResult	AutoDiff/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	BSImpliedVolatility/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	CharacteristicFunctions/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	CppNumericalSolvers/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	FangOost/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	FunctionalUtilities/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	GaussNewton/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	HullWhite/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	ODESolver/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	RungeKutta/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	Vasicek/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	cfdistutilities/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	cuckoo_search/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	levy-functions/src/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	nelder_mead/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResult	neuralNet/catch.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResultData	AutoDiff/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	AutoDiff/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	BSImpliedVolatility/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	BSImpliedVolatility/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	CharacteristicFunctions/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	CharacteristicFunctions/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	CppNumericalSolvers/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	CppNumericalSolvers/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	FangOost/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	FangOost/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	FunctionalUtilities/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	FunctionalUtilities/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	GaussNewton/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	GaussNewton/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	HullWhite/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	HullWhite/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	ODESolver/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	ODESolver/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	RungeKutta/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	RungeKutta/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	Vasicek/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	Vasicek/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	cfdistutilities/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	cfdistutilities/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	cuckoo_search/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	cuckoo_search/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	levy-functions/src/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	levy-functions/src/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	nelder_mead/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	nelder_mead/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionResultData	neuralNet/catch.hpp	/^        AssertionResultData() : resultType( ResultWas::Unknown ) {}$/;"	f	struct:Catch::AssertionResultData
AssertionResultData	neuralNet/catch.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AutoDiff	AutoDiff/AutoDiff.h	/^        AutoDiff(){$/;"	f	class:AutoDiff
AutoDiff	AutoDiff/AutoDiff.h	/^        AutoDiff(const T& stnd){$/;"	f	class:AutoDiff
AutoDiff	AutoDiff/AutoDiff.h	/^        AutoDiff(const T& stnd, const T& dl){$/;"	f	class:AutoDiff
AutoDiff	AutoDiff/AutoDiff.h	/^class AutoDiff {$/;"	c
AutoReg	AutoDiff/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	AutoDiff/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	BSImpliedVolatility/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	BSImpliedVolatility/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	CharacteristicFunctions/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	CharacteristicFunctions/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	CppNumericalSolvers/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	CppNumericalSolvers/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	FangOost/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	FangOost/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	FunctionalUtilities/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	FunctionalUtilities/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	GaussNewton/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	GaussNewton/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	HullWhite/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	HullWhite/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	ODESolver/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	ODESolver/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	RungeKutta/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	RungeKutta/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	Vasicek/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	Vasicek/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	cfdistutilities/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	cfdistutilities/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	cuckoo_search/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	cuckoo_search/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	levy-functions/src/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	levy-functions/src/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	nelder_mead/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	nelder_mead/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
AutoReg	neuralNet/catch.hpp	/^    AutoReg$/;"	f	struct:Catch::AutoReg
AutoReg	neuralNet/catch.hpp	/^struct AutoReg {$/;"	s	namespace:Catch
BSCall	FFTOptionPricing/test.cpp	/^double BSCall(double S0, double discount, double k, double sigma, double T){$/;"	f
BSCallDelta	FFTOptionPricing/test.cpp	/^double BSCallDelta(double S0, double discount, double k, double sigma, double T){$/;"	f
BSCallHelper	AutoDiff/BlackScholesAutoDiff.h	/^    auto BSCall(const S &S0, const Discount &discount, const K &k, const Sigma &sigma)->decltype(BSCallHelper(S0, discount, k, sigma)){ \/\/note that sigma includes sqrt(t) term so in vanilla BS sigma is equal to volatility*sqrt(T)$/;"	f	namespace:autodiffonly
BSCallHelper	AutoDiff/BlackScholesAutoDiff.h	/^    auto BSCallHelper(const S &S0, const Discount &discount, const K &k, const Sigma &sigma){ \/\/note that sigma includes sqrt(t) term so in vanilla BS sigma is equal to volatility*sqrt(T)$/;"	f	namespace:autodiffonly
BSCallHelper	HullWhite/BlackScholes.h	/^auto BSCall(const S &S0, const Discount &discount, const K &k, const Sigma &sigma)->decltype(BSCallHelper(S0, discount, k, sigma)){ \/\/note that sigma includes sqrt(t) term so in vanilla BS sigma is equal to volatility*sqrt(T)$/;"	f
BSCallHelper	HullWhite/BlackScholes.h	/^auto BSCallHelper(const S &S0, const Discount &discount, const K &k, const Sigma &sigma){ \/\/note that sigma includes sqrt(t) term so in vanilla BS sigma is equal to volatility*sqrt(T)$/;"	f
BSCallTheta	FFTOptionPricing/test.cpp	/^double BSCallTheta(double S0, double k, double sigma, double r, double T){$/;"	f
BSGamma	FFTOptionPricing/test.cpp	/^double BSGamma(double S0, double k, double sigma, double r, double T){$/;"	f
BSPut	FFTOptionPricing/test.cpp	/^double BSPut(double S0, double discount, double k, double sigma, double T){$/;"	f
BSPutDelta	FFTOptionPricing/test.cpp	/^double BSPutDelta(double S0, double discount, double k, double sigma, double T){$/;"	f
BSPutHelper	AutoDiff/BlackScholesAutoDiff.h	/^    auto BSPut(const S &S0, const Discount &discount, const K &k, const Sigma &sigma)->decltype(BSPutHelper(S0, discount, k, sigma)){$/;"	f	namespace:autodiffonly
BSPutHelper	AutoDiff/BlackScholesAutoDiff.h	/^    auto BSPutHelper(const S &S0, const Discount &discount, const K &k, const Sigma &sigma){$/;"	f	namespace:autodiffonly
BSPutHelper	HullWhite/BlackScholes.h	/^auto BSPut(const S &S0, const Discount &discount, const K &k, const Sigma &sigma)->decltype(BSPutHelper(S0, discount, k, sigma)){$/;"	f
BSPutHelper	HullWhite/BlackScholes.h	/^auto BSPutHelper(const S &S0, const Discount &discount, const K &k, const Sigma &sigma){$/;"	f
BSPutTheta	FFTOptionPricing/test.cpp	/^double BSPutTheta(double S0, double k, double sigma, double r, double T){$/;"	f
BT	CppNumericalSolvers/neldermead2.h	/^namespace BT{$/;"	n
Black Scholes	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsubsection{Black Scholes}$/;"	b
Bond_Call	HullWhite/HullWhite.h	/^  auto Bond_Call(\/*The price of a call option on zero coupon bond under Hull White at t=0*\/$/;"	f	namespace:hullwhite
Bond_Call	HullWhite/HullWhite.h	/^  auto Bond_Call(\/*The price of a call option on zero coupon bond under Hull White*\/$/;"	f	namespace:hullwhite
Bond_Price	HullWhite/HullWhite.h	/^  auto Bond_Price(\/*The zero coupon bond price under Hull White for t=0*\/$/;"	f	namespace:hullwhite
Bond_Price	HullWhite/HullWhite.h	/^  auto Bond_Price(\/*The zero coupon bond price under Hull White*\/$/;"	f	namespace:hullwhite
Bond_Put	HullWhite/HullWhite.h	/^  auto Bond_Put(\/*The price of a Put option on zero coupon bond under Hull White at t=0*\/$/;"	f	namespace:hullwhite
Bond_Put	HullWhite/HullWhite.h	/^  auto Bond_Put(\/*The price of a Put option on zero coupon bond under Hull White*\/$/;"	f	namespace:hullwhite
BorgType	AutoDiff/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	BSImpliedVolatility/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	CharacteristicFunctions/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	CppNumericalSolvers/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	FangOost/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	FunctionalUtilities/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	GaussNewton/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	HullWhite/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	ODESolver/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	RungeKutta/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	Vasicek/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	cfdistutilities/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	cuckoo_search/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	levy-functions/src/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	nelder_mead/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
BorgType	neuralNet/catch.hpp	/^    struct BorgType {$/;"	s	namespace:Catch::Detail
C	HullWhite/HullWhite.h	/^  auto C( \/*C(t, T) from the Hull White PDE...this may require taking a reference to a yield class!*\/$/;"	f	namespace:hullwhite
CATCH_AND_THEN	AutoDiff/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	BSImpliedVolatility/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	CharacteristicFunctions/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	CppNumericalSolvers/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	FangOost/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	FunctionalUtilities/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	GaussNewton/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	HullWhite/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	ODESolver/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	RungeKutta/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	Vasicek/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	cfdistutilities/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	cuckoo_search/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	levy-functions/src/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	nelder_mead/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_THEN	neuralNet/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_WHEN	AutoDiff/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	BSImpliedVolatility/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	CharacteristicFunctions/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	CppNumericalSolvers/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	FangOost/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	FunctionalUtilities/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	GaussNewton/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	HullWhite/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	ODESolver/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	RungeKutta/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	Vasicek/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	cfdistutilities/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	cuckoo_search/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	levy-functions/src/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	nelder_mead/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_AND_WHEN	neuralNet/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_ANON_TEST_CASE	AutoDiff/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	BSImpliedVolatility/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	CharacteristicFunctions/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	CppNumericalSolvers/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	FangOost/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	FunctionalUtilities/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	GaussNewton/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	HullWhite/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	ODESolver/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	RungeKutta/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	Vasicek/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	cfdistutilities/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	cuckoo_search/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	levy-functions/src/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	nelder_mead/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	neuralNet/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ARC_ENABLED	AutoDiff/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	BSImpliedVolatility/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	CharacteristicFunctions/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	CppNumericalSolvers/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	FangOost/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	FunctionalUtilities/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	GaussNewton/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	HullWhite/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	ODESolver/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	RungeKutta/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	Vasicek/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	cfdistutilities/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	cuckoo_search/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	levy-functions/src/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	nelder_mead/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	neuralNet/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_STRONG	AutoDiff/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	AutoDiff/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	BSImpliedVolatility/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	BSImpliedVolatility/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	CharacteristicFunctions/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	CharacteristicFunctions/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	CppNumericalSolvers/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	CppNumericalSolvers/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	FangOost/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	FangOost/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	FunctionalUtilities/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	FunctionalUtilities/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	GaussNewton/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	GaussNewton/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	HullWhite/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	HullWhite/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	ODESolver/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	ODESolver/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	RungeKutta/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	RungeKutta/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	Vasicek/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	Vasicek/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	cfdistutilities/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	cfdistutilities/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	cuckoo_search/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	cuckoo_search/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	levy-functions/src/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	levy-functions/src/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	nelder_mead/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	nelder_mead/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	neuralNet/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	neuralNet/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_AUTO_PTR	AutoDiff/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	BSImpliedVolatility/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	CharacteristicFunctions/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	CppNumericalSolvers/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	FangOost/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	FunctionalUtilities/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	GaussNewton/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	HullWhite/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	ODESolver/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	RungeKutta/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	Vasicek/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	cfdistutilities/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	cuckoo_search/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	levy-functions/src/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	nelder_mead/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_AUTO_PTR	neuralNet/catch.hpp	/^#   define CATCH_AUTO_PTR(/;"	d
CATCH_BREAK_INTO_DEBUGGER	AutoDiff/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	AutoDiff/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	BSImpliedVolatility/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	BSImpliedVolatility/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	CharacteristicFunctions/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	CharacteristicFunctions/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	CppNumericalSolvers/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	CppNumericalSolvers/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	FangOost/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	FangOost/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	FunctionalUtilities/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	FunctionalUtilities/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	GaussNewton/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	GaussNewton/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	HullWhite/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	HullWhite/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	ODESolver/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	ODESolver/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	RungeKutta/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	RungeKutta/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	Vasicek/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	Vasicek/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	cfdistutilities/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	cfdistutilities/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	cuckoo_search/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	cuckoo_search/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	levy-functions/src/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	levy-functions/src/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	nelder_mead/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	nelder_mead/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	neuralNet/catch.hpp	/^            #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BREAK_INTO_DEBUGGER	neuralNet/catch.hpp	/^#define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_CAPTURE	AutoDiff/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	BSImpliedVolatility/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	CharacteristicFunctions/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	CppNumericalSolvers/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	FangOost/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	FunctionalUtilities/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	GaussNewton/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	HullWhite/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	ODESolver/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	RungeKutta/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	Vasicek/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	cfdistutilities/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	cuckoo_search/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	levy-functions/src/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	nelder_mead/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CAPTURE	neuralNet/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CHECK	AutoDiff/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	BSImpliedVolatility/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	CharacteristicFunctions/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	CppNumericalSolvers/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	FangOost/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	FunctionalUtilities/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	GaussNewton/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	HullWhite/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	ODESolver/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	RungeKutta/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	Vasicek/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	cfdistutilities/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	cuckoo_search/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	levy-functions/src/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	nelder_mead/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECK	neuralNet/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECKED_ELSE	AutoDiff/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	BSImpliedVolatility/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	CharacteristicFunctions/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	CppNumericalSolvers/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	FangOost/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	FunctionalUtilities/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	GaussNewton/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	HullWhite/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	ODESolver/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	RungeKutta/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	Vasicek/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	cfdistutilities/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	cuckoo_search/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	levy-functions/src/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	nelder_mead/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_ELSE	neuralNet/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_IF	AutoDiff/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	BSImpliedVolatility/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	CharacteristicFunctions/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	CppNumericalSolvers/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	FangOost/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	FunctionalUtilities/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	GaussNewton/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	HullWhite/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	ODESolver/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	RungeKutta/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	Vasicek/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	cfdistutilities/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	cuckoo_search/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	levy-functions/src/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	nelder_mead/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECKED_IF	neuralNet/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECK_FALSE	AutoDiff/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	BSImpliedVolatility/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	CharacteristicFunctions/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	CppNumericalSolvers/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	FangOost/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	FunctionalUtilities/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	GaussNewton/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	HullWhite/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	ODESolver/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	RungeKutta/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	Vasicek/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	cfdistutilities/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	cuckoo_search/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	levy-functions/src/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	nelder_mead/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_FALSE	neuralNet/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_NOFAIL	AutoDiff/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	BSImpliedVolatility/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	CharacteristicFunctions/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	CppNumericalSolvers/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	FangOost/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	FunctionalUtilities/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	GaussNewton/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	HullWhite/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	ODESolver/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	RungeKutta/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	Vasicek/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	cfdistutilities/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	cuckoo_search/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	levy-functions/src/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	nelder_mead/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOFAIL	neuralNet/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOTHROW	AutoDiff/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	BSImpliedVolatility/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	CharacteristicFunctions/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	CppNumericalSolvers/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	FangOost/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	FunctionalUtilities/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	GaussNewton/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	HullWhite/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	ODESolver/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	RungeKutta/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	Vasicek/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	cfdistutilities/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	cuckoo_search/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	levy-functions/src/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	nelder_mead/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_NOTHROW	neuralNet/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_THROWS	AutoDiff/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	BSImpliedVolatility/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	CharacteristicFunctions/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	CppNumericalSolvers/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	FangOost/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	FunctionalUtilities/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	GaussNewton/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	HullWhite/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	ODESolver/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	RungeKutta/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	Vasicek/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	cfdistutilities/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	cuckoo_search/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	levy-functions/src/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	nelder_mead/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS	neuralNet/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS_AS	AutoDiff/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	BSImpliedVolatility/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	CharacteristicFunctions/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	CppNumericalSolvers/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	FangOost/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	FunctionalUtilities/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	GaussNewton/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	HullWhite/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	ODESolver/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	RungeKutta/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	Vasicek/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	cfdistutilities/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	cuckoo_search/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	levy-functions/src/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	nelder_mead/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_AS	neuralNet/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_WITH	AutoDiff/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	BSImpliedVolatility/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	CharacteristicFunctions/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	CppNumericalSolvers/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	FangOost/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	FunctionalUtilities/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	GaussNewton/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	HullWhite/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	ODESolver/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	RungeKutta/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	Vasicek/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	cfdistutilities/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	cuckoo_search/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	levy-functions/src/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	nelder_mead/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CHECK_THROWS_WITH	neuralNet/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	AutoDiff/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	BSImpliedVolatility/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	CharacteristicFunctions/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	CppNumericalSolvers/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	FangOost/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	FunctionalUtilities/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	GaussNewton/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	HullWhite/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	ODESolver/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	RungeKutta/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	Vasicek/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	cfdistutilities/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	cuckoo_search/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	levy-functions/src/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	nelder_mead/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	neuralNet/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d
CATCH_CONFIG_CONSOLE_WIDTH	AutoDiff/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	BSImpliedVolatility/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	CharacteristicFunctions/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	CppNumericalSolvers/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	FangOost/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	FunctionalUtilities/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	GaussNewton/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	HullWhite/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	ODESolver/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	RungeKutta/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	Vasicek/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	cfdistutilities/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	cuckoo_search/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	levy-functions/src/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	nelder_mead/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_CONSOLE_WIDTH	neuralNet/catch.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_COUNTER	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	FangOost/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	FangOost/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_GENERATED_METHODS	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	FangOost/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_IS_ENUM	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	FangOost/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_LONG_LONG	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	FangOost/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NOEXCEPT	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	FangOost/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_NULLPTR	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	FangOost/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_OVERRIDE	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	FangOost/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_TUPLE	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_CPP11_TUPLE$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	FangOost/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_CPP11_UNIQUE_PTR	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_CONFIG_MAIN	AutoDiff/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	BSImpliedVolatility/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	CharacteristicFunctions/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	CppNumericalSolvers/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	FFTOptionPricing/generateCharts.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	FFTOptionPricing/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	FangOost/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	FunctionalUtilities/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	GaussNewton/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	HullWhite/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	ODESolver/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	RungeKutta/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	Vasicek/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	cfdistutilities/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	cuckoo_search/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	levy-functions/tests/unit/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	nelder_mead/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_MAIN	neuralNet/test.cpp	/^#define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_VARIADIC_MACROS	AutoDiff/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	BSImpliedVolatility/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	CharacteristicFunctions/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	CppNumericalSolvers/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	FangOost/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	FunctionalUtilities/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	GaussNewton/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	HullWhite/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	ODESolver/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	RungeKutta/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	Vasicek/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	cfdistutilities/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	cuckoo_search/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	levy-functions/src/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	nelder_mead/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CONFIG_VARIADIC_MACROS	neuralNet/catch.hpp	/^#   define CATCH_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_CPP11_OR_GREATER	AutoDiff/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	BSImpliedVolatility/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	CharacteristicFunctions/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	CppNumericalSolvers/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	FangOost/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	FunctionalUtilities/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	GaussNewton/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	HullWhite/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	ODESolver/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	RungeKutta/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	Vasicek/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	cfdistutilities/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	cuckoo_search/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	levy-functions/src/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	nelder_mead/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP11_OR_GREATER	neuralNet/catch.hpp	/^#    define CATCH_CPP11_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	AutoDiff/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	BSImpliedVolatility/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	CharacteristicFunctions/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	CppNumericalSolvers/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	FangOost/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	FunctionalUtilities/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	GaussNewton/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	HullWhite/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	ODESolver/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	RungeKutta/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	Vasicek/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	cfdistutilities/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	cuckoo_search/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	levy-functions/src/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	nelder_mead/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	neuralNet/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_FAIL	AutoDiff/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	BSImpliedVolatility/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	CharacteristicFunctions/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	CppNumericalSolvers/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	FangOost/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	FunctionalUtilities/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	GaussNewton/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	HullWhite/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	ODESolver/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	RungeKutta/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	Vasicek/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	cfdistutilities/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	cuckoo_search/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	levy-functions/src/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	nelder_mead/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_FAIL	neuralNet/catch.hpp	/^    #define CATCH_FAIL(/;"	d
CATCH_GENERATE	AutoDiff/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	BSImpliedVolatility/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	CharacteristicFunctions/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	CppNumericalSolvers/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	FangOost/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	FunctionalUtilities/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	GaussNewton/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	HullWhite/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	ODESolver/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	RungeKutta/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	Vasicek/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	cfdistutilities/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	cuckoo_search/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	levy-functions/src/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	nelder_mead/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GENERATE	neuralNet/catch.hpp	/^#define CATCH_GENERATE(/;"	d
CATCH_GIVEN	AutoDiff/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	BSImpliedVolatility/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	CharacteristicFunctions/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	CppNumericalSolvers/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	FangOost/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	FunctionalUtilities/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	GaussNewton/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	HullWhite/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	ODESolver/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	RungeKutta/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	Vasicek/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	cfdistutilities/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	cuckoo_search/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	levy-functions/src/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	nelder_mead/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_GIVEN	neuralNet/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_IMPL	AutoDiff/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	BSImpliedVolatility/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	CharacteristicFunctions/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	CppNumericalSolvers/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	FangOost/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	FunctionalUtilities/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	GaussNewton/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	HullWhite/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	ODESolver/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	RungeKutta/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	Vasicek/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	cfdistutilities/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	cuckoo_search/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	levy-functions/src/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	nelder_mead/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	neuralNet/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_INFO	AutoDiff/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	BSImpliedVolatility/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	CharacteristicFunctions/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	CppNumericalSolvers/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	FangOost/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	FunctionalUtilities/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	GaussNewton/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	HullWhite/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	ODESolver/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	RungeKutta/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	Vasicek/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	cfdistutilities/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	cuckoo_search/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	levy-functions/src/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	nelder_mead/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INFO	neuralNet/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	AutoDiff/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	BSImpliedVolatility/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	CharacteristicFunctions/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	CppNumericalSolvers/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	FangOost/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	FunctionalUtilities/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	GaussNewton/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	HullWhite/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	ODESolver/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	RungeKutta/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	Vasicek/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	cfdistutilities/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	cuckoo_search/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	levy-functions/src/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	nelder_mead/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	neuralNet/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	AutoDiff/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	AutoDiff/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	BSImpliedVolatility/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	BSImpliedVolatility/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	CharacteristicFunctions/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	CharacteristicFunctions/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	CppNumericalSolvers/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	CppNumericalSolvers/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	FangOost/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	FangOost/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	FunctionalUtilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	FunctionalUtilities/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	GaussNewton/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	GaussNewton/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	HullWhite/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	HullWhite/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	ODESolver/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	ODESolver/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	RungeKutta/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	RungeKutta/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	Vasicek/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	Vasicek/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	cfdistutilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	cfdistutilities/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	cuckoo_search/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	cuckoo_search/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	levy-functions/src/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	levy-functions/src/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	nelder_mead/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	nelder_mead/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	neuralNet/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	neuralNet/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	AutoDiff/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	BSImpliedVolatility/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	CharacteristicFunctions/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	CppNumericalSolvers/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	FangOost/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	FunctionalUtilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	GaussNewton/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	HullWhite/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	ODESolver/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	RungeKutta/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	Vasicek/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	cfdistutilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	cuckoo_search/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	levy-functions/src/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	nelder_mead/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM	neuralNet/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_IS_ENUM$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	AutoDiff/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	BSImpliedVolatility/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	CharacteristicFunctions/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	CppNumericalSolvers/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	FangOost/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	FunctionalUtilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	GaussNewton/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	HullWhite/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	ODESolver/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	RungeKutta/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	Vasicek/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	cfdistutilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	cuckoo_search/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	levy-functions/src/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	nelder_mead/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG	neuralNet/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_LONG_LONG$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	AutoDiff/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	AutoDiff/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	BSImpliedVolatility/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	BSImpliedVolatility/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	CharacteristicFunctions/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	CharacteristicFunctions/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	CppNumericalSolvers/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	CppNumericalSolvers/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	FangOost/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	FangOost/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	FunctionalUtilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	FunctionalUtilities/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	GaussNewton/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	GaussNewton/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	HullWhite/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	HullWhite/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	ODESolver/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	ODESolver/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	RungeKutta/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	RungeKutta/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	Vasicek/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	Vasicek/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	cfdistutilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	cfdistutilities/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	cuckoo_search/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	cuckoo_search/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	levy-functions/src/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	levy-functions/src/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	nelder_mead/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	nelder_mead/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	neuralNet/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT	neuralNet/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	AutoDiff/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	AutoDiff/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	AutoDiff/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	BSImpliedVolatility/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	BSImpliedVolatility/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	BSImpliedVolatility/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	CharacteristicFunctions/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	CharacteristicFunctions/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	CharacteristicFunctions/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	CppNumericalSolvers/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	CppNumericalSolvers/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	CppNumericalSolvers/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	FangOost/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	FangOost/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	FangOost/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	FunctionalUtilities/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	FunctionalUtilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	FunctionalUtilities/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	GaussNewton/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	GaussNewton/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	GaussNewton/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	HullWhite/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	HullWhite/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	HullWhite/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	ODESolver/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	ODESolver/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	ODESolver/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	RungeKutta/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	RungeKutta/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	RungeKutta/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	Vasicek/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	Vasicek/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	Vasicek/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	cfdistutilities/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	cfdistutilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	cfdistutilities/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	cuckoo_search/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	cuckoo_search/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	cuckoo_search/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	levy-functions/src/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	levy-functions/src/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	levy-functions/src/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	nelder_mead/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	nelder_mead/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	nelder_mead/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	neuralNet/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	neuralNet/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_NULLPTR	neuralNet/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	AutoDiff/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	BSImpliedVolatility/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	CharacteristicFunctions/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	CppNumericalSolvers/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	FangOost/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	FunctionalUtilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	GaussNewton/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	HullWhite/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	ODESolver/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	RungeKutta/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	Vasicek/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	cfdistutilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	cuckoo_search/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	levy-functions/src/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	nelder_mead/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE	neuralNet/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	AutoDiff/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	BSImpliedVolatility/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	CharacteristicFunctions/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	CppNumericalSolvers/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	FangOost/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	FunctionalUtilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	GaussNewton/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	HullWhite/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	ODESolver/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	RungeKutta/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	Vasicek/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	cfdistutilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	cuckoo_search/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	levy-functions/src/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	nelder_mead/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_TUPLE	neuralNet/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_TUPLE$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	AutoDiff/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	AutoDiff/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	BSImpliedVolatility/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	BSImpliedVolatility/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	CharacteristicFunctions/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	CharacteristicFunctions/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	CppNumericalSolvers/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	CppNumericalSolvers/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	FangOost/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	FangOost/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	FunctionalUtilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	FunctionalUtilities/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	GaussNewton/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	GaussNewton/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	HullWhite/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	HullWhite/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	ODESolver/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	ODESolver/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	RungeKutta/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	RungeKutta/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	Vasicek/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	Vasicek/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	cfdistutilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	cfdistutilities/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	cuckoo_search/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	cuckoo_search/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	levy-functions/src/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	levy-functions/src/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	nelder_mead/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	nelder_mead/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	neuralNet/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	neuralNet/catch.hpp	/^#   define CATCH_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	AutoDiff/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	AutoDiff/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	BSImpliedVolatility/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	BSImpliedVolatility/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	CharacteristicFunctions/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	CharacteristicFunctions/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	CppNumericalSolvers/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	CppNumericalSolvers/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	FangOost/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	FangOost/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	FunctionalUtilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	FunctionalUtilities/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	GaussNewton/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	GaussNewton/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	HullWhite/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	HullWhite/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	ODESolver/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	ODESolver/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	RungeKutta/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	RungeKutta/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	Vasicek/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	Vasicek/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	cfdistutilities/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	cfdistutilities/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	cuckoo_search/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	cuckoo_search/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	levy-functions/src/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	levy-functions/src/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	nelder_mead/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	nelder_mead/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	neuralNet/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_CONFIG_VARIADIC_MACROS	neuralNet/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_VARIADIC_MACROS$/;"	d
CATCH_INTERNAL_ERROR	AutoDiff/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	BSImpliedVolatility/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	CharacteristicFunctions/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	CppNumericalSolvers/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	FangOost/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	FunctionalUtilities/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	GaussNewton/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	HullWhite/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	ODESolver/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	RungeKutta/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	Vasicek/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	cfdistutilities/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	cuckoo_search/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	levy-functions/src/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	nelder_mead/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_ERROR	neuralNet/catch.hpp	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_LINEINFO	AutoDiff/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	BSImpliedVolatility/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	CharacteristicFunctions/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	CppNumericalSolvers/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	FangOost/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	FunctionalUtilities/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	GaussNewton/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	HullWhite/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	ODESolver/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	RungeKutta/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	Vasicek/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	cfdistutilities/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	cuckoo_search/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	levy-functions/src/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	nelder_mead/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	neuralNet/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	AutoDiff/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	AutoDiff/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	BSImpliedVolatility/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	BSImpliedVolatility/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	CharacteristicFunctions/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	CharacteristicFunctions/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	CppNumericalSolvers/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	CppNumericalSolvers/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	FangOost/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	FangOost/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	FunctionalUtilities/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	FunctionalUtilities/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	GaussNewton/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	GaussNewton/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	HullWhite/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	HullWhite/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	ODESolver/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	ODESolver/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	RungeKutta/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	RungeKutta/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	Vasicek/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	Vasicek/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	cfdistutilities/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	cfdistutilities/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	cuckoo_search/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	cuckoo_search/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	levy-functions/src/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	levy-functions/src/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	nelder_mead/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	nelder_mead/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	neuralNet/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	neuralNet/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_METHOD_AS_TEST_CASE	AutoDiff/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	BSImpliedVolatility/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	CharacteristicFunctions/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	CppNumericalSolvers/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	FangOost/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	FunctionalUtilities/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	GaussNewton/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	HullWhite/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	ODESolver/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	RungeKutta/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	Vasicek/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	cfdistutilities/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	cuckoo_search/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	levy-functions/src/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	nelder_mead/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_METHOD_AS_TEST_CASE	neuralNet/catch.hpp	/^    #define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_NOEXCEPT	AutoDiff/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	AutoDiff/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	BSImpliedVolatility/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	BSImpliedVolatility/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	CharacteristicFunctions/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	CharacteristicFunctions/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	CppNumericalSolvers/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	CppNumericalSolvers/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	FangOost/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	FangOost/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	FunctionalUtilities/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	FunctionalUtilities/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	GaussNewton/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	GaussNewton/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	HullWhite/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	HullWhite/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	ODESolver/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	ODESolver/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	RungeKutta/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	RungeKutta/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	Vasicek/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	Vasicek/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	cfdistutilities/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	cfdistutilities/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	cuckoo_search/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	cuckoo_search/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	levy-functions/src/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	levy-functions/src/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	nelder_mead/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	nelder_mead/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT	neuralNet/catch.hpp	/^        virtual const char* what() const CATCH_NOEXCEPT;$/;"	m	class:Catch::NotImplementedException
CATCH_NOEXCEPT	neuralNet/catch.hpp	/^#  define CATCH_NOEXCEPT /;"	d
CATCH_NOEXCEPT_IS	AutoDiff/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	BSImpliedVolatility/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	CharacteristicFunctions/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	CppNumericalSolvers/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	FangOost/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	FunctionalUtilities/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	GaussNewton/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	HullWhite/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	ODESolver/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	RungeKutta/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	Vasicek/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	cfdistutilities/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	cuckoo_search/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	levy-functions/src/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	nelder_mead/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOEXCEPT_IS	neuralNet/catch.hpp	/^#  define CATCH_NOEXCEPT_IS(/;"	d
CATCH_NOT_IMPLEMENTED	AutoDiff/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	BSImpliedVolatility/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	CharacteristicFunctions/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	CppNumericalSolvers/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	FangOost/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	FunctionalUtilities/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	GaussNewton/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	HullWhite/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	ODESolver/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	RungeKutta/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	Vasicek/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	cfdistutilities/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	cuckoo_search/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	levy-functions/src/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	nelder_mead/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NOT_IMPLEMENTED	neuralNet/catch.hpp	/^#define CATCH_NOT_IMPLEMENTED /;"	d
CATCH_NULL	AutoDiff/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	BSImpliedVolatility/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	CharacteristicFunctions/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	CppNumericalSolvers/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	FangOost/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	FunctionalUtilities/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	GaussNewton/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	HullWhite/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	ODESolver/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	RungeKutta/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	Vasicek/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	cfdistutilities/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	cuckoo_search/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	levy-functions/src/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	nelder_mead/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_NULL	neuralNet/catch.hpp	/^#   define CATCH_NULL /;"	d
CATCH_OVERRIDE	AutoDiff/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	AutoDiff/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	BSImpliedVolatility/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	BSImpliedVolatility/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	CharacteristicFunctions/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	CharacteristicFunctions/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	CppNumericalSolvers/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	CppNumericalSolvers/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	FangOost/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	FangOost/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	FunctionalUtilities/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	FunctionalUtilities/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	GaussNewton/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	GaussNewton/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	HullWhite/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	HullWhite/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	ODESolver/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	ODESolver/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	RungeKutta/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	RungeKutta/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	Vasicek/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	Vasicek/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	cfdistutilities/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	cfdistutilities/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	cuckoo_search/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	cuckoo_search/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	levy-functions/src/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	levy-functions/src/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	nelder_mead/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	nelder_mead/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_OVERRIDE	neuralNet/catch.hpp	/^#   define CATCH_OVERRIDE /;"	d
CATCH_OVERRIDE	neuralNet/catch.hpp	/^#   define CATCH_OVERRIDE$/;"	d
CATCH_PLATFORM_MAC	AutoDiff/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	BSImpliedVolatility/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	CharacteristicFunctions/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	CppNumericalSolvers/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	FangOost/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	FunctionalUtilities/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	GaussNewton/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	HullWhite/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	ODESolver/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	RungeKutta/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	Vasicek/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	cfdistutilities/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	cuckoo_search/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	levy-functions/src/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	nelder_mead/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	neuralNet/catch.hpp	/^#define CATCH_PLATFORM_MAC$/;"	d
CATCH_REGISTER_LEGACY_REPORTER	AutoDiff/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	BSImpliedVolatility/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	CharacteristicFunctions/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	CppNumericalSolvers/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	FangOost/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	FunctionalUtilities/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	GaussNewton/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	HullWhite/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	ODESolver/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	RungeKutta/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	Vasicek/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	cfdistutilities/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	cuckoo_search/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	levy-functions/src/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	nelder_mead/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_LEGACY_REPORTER	neuralNet/catch.hpp	/^#define CATCH_REGISTER_LEGACY_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	AutoDiff/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	BSImpliedVolatility/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	CharacteristicFunctions/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	CppNumericalSolvers/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	FangOost/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	FunctionalUtilities/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	GaussNewton/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	HullWhite/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	ODESolver/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	RungeKutta/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	Vasicek/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	cfdistutilities/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	cuckoo_search/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	levy-functions/src/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	nelder_mead/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_REPORTER	neuralNet/catch.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_TAG_ALIAS	AutoDiff/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	BSImpliedVolatility/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	CharacteristicFunctions/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	CppNumericalSolvers/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	FangOost/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	FunctionalUtilities/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	GaussNewton/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	HullWhite/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	ODESolver/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	RungeKutta/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	Vasicek/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	cfdistutilities/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	cuckoo_search/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	levy-functions/src/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	nelder_mead/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	neuralNet/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TEST_CASE	AutoDiff/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	BSImpliedVolatility/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	CharacteristicFunctions/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	CppNumericalSolvers/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	FangOost/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	FunctionalUtilities/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	GaussNewton/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	HullWhite/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	ODESolver/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	RungeKutta/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	Vasicek/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	cfdistutilities/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	cuckoo_search/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	levy-functions/src/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	nelder_mead/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REGISTER_TEST_CASE	neuralNet/catch.hpp	/^    #define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REQUIRE	AutoDiff/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	BSImpliedVolatility/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	CharacteristicFunctions/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	CppNumericalSolvers/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	FangOost/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	FunctionalUtilities/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	GaussNewton/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	HullWhite/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	ODESolver/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	RungeKutta/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	Vasicek/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	cfdistutilities/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	cuckoo_search/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	levy-functions/src/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	nelder_mead/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE	neuralNet/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE_FALSE	AutoDiff/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	BSImpliedVolatility/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	CharacteristicFunctions/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	CppNumericalSolvers/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	FangOost/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	FunctionalUtilities/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	GaussNewton/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	HullWhite/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	ODESolver/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	RungeKutta/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	Vasicek/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	cfdistutilities/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	cuckoo_search/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	levy-functions/src/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	nelder_mead/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_FALSE	neuralNet/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_NOTHROW	AutoDiff/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	BSImpliedVolatility/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	CharacteristicFunctions/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	CppNumericalSolvers/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	FangOost/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	FunctionalUtilities/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	GaussNewton/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	HullWhite/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	ODESolver/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	RungeKutta/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	Vasicek/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	cfdistutilities/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	cuckoo_search/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	levy-functions/src/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	nelder_mead/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_NOTHROW	neuralNet/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_THAT	AutoDiff/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	BSImpliedVolatility/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	CharacteristicFunctions/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	CppNumericalSolvers/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	FangOost/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	FunctionalUtilities/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	GaussNewton/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	HullWhite/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	ODESolver/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	RungeKutta/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	Vasicek/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	cfdistutilities/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	cuckoo_search/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	levy-functions/src/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	nelder_mead/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THAT	neuralNet/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THROWS	AutoDiff/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	BSImpliedVolatility/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	CharacteristicFunctions/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	CppNumericalSolvers/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	FangOost/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	FunctionalUtilities/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	GaussNewton/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	HullWhite/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	ODESolver/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	RungeKutta/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	Vasicek/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	cfdistutilities/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	cuckoo_search/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	levy-functions/src/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	nelder_mead/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS	neuralNet/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS_AS	AutoDiff/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	BSImpliedVolatility/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	CharacteristicFunctions/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	CppNumericalSolvers/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	FangOost/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	FunctionalUtilities/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	GaussNewton/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	HullWhite/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	ODESolver/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	RungeKutta/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	Vasicek/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	cfdistutilities/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	cuckoo_search/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	levy-functions/src/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	nelder_mead/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_AS	neuralNet/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_WITH	AutoDiff/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	BSImpliedVolatility/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	CharacteristicFunctions/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	CppNumericalSolvers/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	FangOost/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	FunctionalUtilities/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	GaussNewton/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	HullWhite/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	ODESolver/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	RungeKutta/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	Vasicek/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	cfdistutilities/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	cuckoo_search/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	levy-functions/src/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	nelder_mead/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_REQUIRE_THROWS_WITH	neuralNet/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_SCENARIO	AutoDiff/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	BSImpliedVolatility/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	CharacteristicFunctions/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	CppNumericalSolvers/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	FangOost/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	FunctionalUtilities/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	GaussNewton/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	HullWhite/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	ODESolver/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	RungeKutta/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	Vasicek/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	cfdistutilities/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	cuckoo_search/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	levy-functions/src/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	nelder_mead/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO	neuralNet/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO_METHOD	AutoDiff/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	BSImpliedVolatility/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	CharacteristicFunctions/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	CppNumericalSolvers/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	FangOost/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	FunctionalUtilities/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	GaussNewton/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	HullWhite/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	ODESolver/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	RungeKutta/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	Vasicek/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	cfdistutilities/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	cuckoo_search/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	levy-functions/src/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	nelder_mead/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCENARIO_METHOD	neuralNet/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SCOPED_CAPTURE	AutoDiff/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	BSImpliedVolatility/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	CharacteristicFunctions/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	CppNumericalSolvers/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	FangOost/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	FunctionalUtilities/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	GaussNewton/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	HullWhite/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	ODESolver/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	RungeKutta/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	Vasicek/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	cfdistutilities/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	cuckoo_search/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	levy-functions/src/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	nelder_mead/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_CAPTURE	neuralNet/catch.hpp	/^#define CATCH_SCOPED_CAPTURE(/;"	d
CATCH_SCOPED_INFO	AutoDiff/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	BSImpliedVolatility/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	CharacteristicFunctions/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	CppNumericalSolvers/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	FangOost/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	FunctionalUtilities/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	GaussNewton/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	HullWhite/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	ODESolver/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	RungeKutta/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	Vasicek/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	cfdistutilities/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	cuckoo_search/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	levy-functions/src/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	nelder_mead/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SCOPED_INFO	neuralNet/catch.hpp	/^#define CATCH_SCOPED_INFO(/;"	d
CATCH_SECTION	AutoDiff/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	BSImpliedVolatility/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	CharacteristicFunctions/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	CppNumericalSolvers/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	FangOost/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	FunctionalUtilities/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	GaussNewton/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	HullWhite/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	ODESolver/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	RungeKutta/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	Vasicek/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	cfdistutilities/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	cuckoo_search/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	levy-functions/src/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	nelder_mead/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SECTION	neuralNet/catch.hpp	/^    #define CATCH_SECTION(/;"	d
CATCH_SUCCEED	AutoDiff/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	BSImpliedVolatility/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	CharacteristicFunctions/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	CppNumericalSolvers/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	FangOost/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	FunctionalUtilities/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	GaussNewton/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	HullWhite/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	ODESolver/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	RungeKutta/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	Vasicek/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	cfdistutilities/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	cuckoo_search/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	levy-functions/src/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	nelder_mead/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_SUCCEED	neuralNet/catch.hpp	/^    #define CATCH_SUCCEED(/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	AutoDiff/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	AutoDiff/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	BSImpliedVolatility/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	BSImpliedVolatility/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	CharacteristicFunctions/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	CharacteristicFunctions/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	CppNumericalSolvers/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	CppNumericalSolvers/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	FangOost/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	FangOost/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	FunctionalUtilities/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	FunctionalUtilities/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	GaussNewton/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	GaussNewton/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	HullWhite/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	HullWhite/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	ODESolver/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	ODESolver/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	RungeKutta/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	RungeKutta/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	Vasicek/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	Vasicek/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	cfdistutilities/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	cfdistutilities/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	cuckoo_search/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	cuckoo_search/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	levy-functions/src/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	levy-functions/src/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	nelder_mead/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	nelder_mead/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	neuralNet/catch.hpp	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	neuralNet/catch.hpp	/^#undef CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CATCH_TEST_CASE	AutoDiff/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	BSImpliedVolatility/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	CharacteristicFunctions/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	CppNumericalSolvers/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	FangOost/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	FunctionalUtilities/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	GaussNewton/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	HullWhite/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	ODESolver/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	RungeKutta/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	Vasicek/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	cfdistutilities/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	cuckoo_search/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	levy-functions/src/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	nelder_mead/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE	neuralNet/catch.hpp	/^    #define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE_METHOD	AutoDiff/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	BSImpliedVolatility/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	CharacteristicFunctions/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	CppNumericalSolvers/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	FangOost/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	FunctionalUtilities/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	GaussNewton/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	HullWhite/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	ODESolver/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	RungeKutta/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	Vasicek/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	cfdistutilities/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	cuckoo_search/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	levy-functions/src/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	nelder_mead/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_TEST_CASE_METHOD	neuralNet/catch.hpp	/^    #define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_THEN	AutoDiff/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	BSImpliedVolatility/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	CharacteristicFunctions/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	CppNumericalSolvers/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	FangOost/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	FunctionalUtilities/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	GaussNewton/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	HullWhite/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	ODESolver/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	RungeKutta/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	Vasicek/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	cfdistutilities/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	cuckoo_search/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	levy-functions/src/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	nelder_mead/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_THEN	neuralNet/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_TRANSLATE_EXCEPTION	AutoDiff/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	BSImpliedVolatility/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	CharacteristicFunctions/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	CppNumericalSolvers/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	FangOost/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	FunctionalUtilities/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	GaussNewton/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	HullWhite/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	ODESolver/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	RungeKutta/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	Vasicek/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	cfdistutilities/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	cuckoo_search/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	levy-functions/src/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	nelder_mead/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	neuralNet/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_UNSAFE_UNRETAINED	AutoDiff/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	AutoDiff/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	BSImpliedVolatility/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	BSImpliedVolatility/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	CharacteristicFunctions/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	CharacteristicFunctions/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	CppNumericalSolvers/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	CppNumericalSolvers/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	FangOost/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	FangOost/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	FunctionalUtilities/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	FunctionalUtilities/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	GaussNewton/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	GaussNewton/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	HullWhite/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	HullWhite/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	ODESolver/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	ODESolver/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	RungeKutta/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	RungeKutta/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	Vasicek/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	Vasicek/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	cfdistutilities/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	cfdistutilities/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	cuckoo_search/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	cuckoo_search/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	levy-functions/src/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	levy-functions/src/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	nelder_mead/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	nelder_mead/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	neuralNet/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	neuralNet/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_WARN	AutoDiff/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	BSImpliedVolatility/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	CharacteristicFunctions/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	CppNumericalSolvers/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	FangOost/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	FunctionalUtilities/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	GaussNewton/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	HullWhite/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	ODESolver/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	RungeKutta/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	Vasicek/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	cfdistutilities/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	cuckoo_search/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	levy-functions/src/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	nelder_mead/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WARN	neuralNet/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WHEN	AutoDiff/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	BSImpliedVolatility/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	CharacteristicFunctions/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	CppNumericalSolvers/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	FangOost/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	FunctionalUtilities/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	GaussNewton/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	HullWhite/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	ODESolver/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	RungeKutta/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	Vasicek/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	cfdistutilities/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	cuckoo_search/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	levy-functions/src/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	nelder_mead/catch.hpp	/^#define CATCH_WHEN(/;"	d
CATCH_WHEN	neuralNet/catch.hpp	/^#define CATCH_WHEN(/;"	d
CArray	FFTOptionPricing/fft.h	/^typedef std::vector<Complex> CArray;$/;"	t
CGMY	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsection{CGMY}$/;"	b
CGMY	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsubsection{CGMY}$/;"	b
CGMY with time change	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsection{CGMY with time change}$/;"	b
CHECK_THAT	AutoDiff/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	BSImpliedVolatility/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	CharacteristicFunctions/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	CppNumericalSolvers/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	FangOost/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	FunctionalUtilities/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	GaussNewton/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	HullWhite/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	ODESolver/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	RungeKutta/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	Vasicek/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	cfdistutilities/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	cuckoo_search/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	levy-functions/src/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	nelder_mead/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	neuralNet/catch.hpp	/^#define CHECK_THAT(/;"	d
CLARA_AUTO_PTR	AutoDiff/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	BSImpliedVolatility/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	CharacteristicFunctions/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	CppNumericalSolvers/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	FangOost/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	FunctionalUtilities/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	GaussNewton/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	HullWhite/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	ODESolver/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	RungeKutta/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	Vasicek/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	cfdistutilities/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	cuckoo_search/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	levy-functions/src/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	nelder_mead/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_AUTO_PTR	neuralNet/catch.hpp	/^#   define CLARA_AUTO_PTR(/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	AutoDiff/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	AutoDiff/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	BSImpliedVolatility/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	BSImpliedVolatility/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	CharacteristicFunctions/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	CharacteristicFunctions/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	CppNumericalSolvers/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	CppNumericalSolvers/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	FangOost/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	FangOost/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	FunctionalUtilities/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	FunctionalUtilities/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	GaussNewton/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	GaussNewton/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	HullWhite/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	HullWhite/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	ODESolver/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	ODESolver/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	RungeKutta/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	RungeKutta/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	Vasicek/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	Vasicek/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	cfdistutilities/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	cfdistutilities/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	cuckoo_search/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	cuckoo_search/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	levy-functions/src/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	levy-functions/src/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	nelder_mead/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	nelder_mead/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CONSOLE_WIDTH	neuralNet/catch.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_CONSOLE_WIDTH	neuralNet/catch.hpp	/^#undef CLARA_CONFIG_CONSOLE_WIDTH$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	AutoDiff/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	BSImpliedVolatility/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	CharacteristicFunctions/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	CppNumericalSolvers/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	FangOost/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	FunctionalUtilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	GaussNewton/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	HullWhite/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	ODESolver/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	RungeKutta/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	Vasicek/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	cfdistutilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	cuckoo_search/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	levy-functions/src/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	nelder_mead/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_GENERATED_METHODS	neuralNet/catch.hpp	/^#define CLARA_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	AutoDiff/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	BSImpliedVolatility/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	CharacteristicFunctions/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	CppNumericalSolvers/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	FangOost/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	FunctionalUtilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	GaussNewton/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	HullWhite/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	ODESolver/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	RungeKutta/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	Vasicek/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	cfdistutilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	cuckoo_search/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	levy-functions/src/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	nelder_mead/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NOEXCEPT	neuralNet/catch.hpp	/^#define CLARA_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	AutoDiff/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	BSImpliedVolatility/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	CharacteristicFunctions/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	CppNumericalSolvers/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	FangOost/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	FunctionalUtilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	GaussNewton/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	HullWhite/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	ODESolver/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	RungeKutta/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	Vasicek/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	cfdistutilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	cuckoo_search/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	levy-functions/src/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	nelder_mead/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_NULLPTR	neuralNet/catch.hpp	/^#define CLARA_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	AutoDiff/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	BSImpliedVolatility/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	CharacteristicFunctions/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	CppNumericalSolvers/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	FangOost/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	FunctionalUtilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	GaussNewton/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	HullWhite/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	ODESolver/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	RungeKutta/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	Vasicek/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	cfdistutilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	cuckoo_search/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	levy-functions/src/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	nelder_mead/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_OVERRIDE	neuralNet/catch.hpp	/^#define CLARA_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	AutoDiff/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	BSImpliedVolatility/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	CharacteristicFunctions/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	CppNumericalSolvers/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	FangOost/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	FunctionalUtilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	GaussNewton/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	HullWhite/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	ODESolver/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	RungeKutta/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	Vasicek/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	cfdistutilities/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	cuckoo_search/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	levy-functions/src/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	nelder_mead/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_CPP11_UNIQUE_PTR	neuralNet/catch.hpp	/^#define CLARA_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_CONFIG_MAIN	AutoDiff/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	AutoDiff/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	BSImpliedVolatility/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	BSImpliedVolatility/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	CharacteristicFunctions/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	CharacteristicFunctions/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	CppNumericalSolvers/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	CppNumericalSolvers/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	FangOost/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	FangOost/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	FunctionalUtilities/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	FunctionalUtilities/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	GaussNewton/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	GaussNewton/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	HullWhite/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	HullWhite/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	ODESolver/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	ODESolver/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	RungeKutta/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	RungeKutta/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	Vasicek/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	Vasicek/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	cfdistutilities/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	cfdistutilities/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	cuckoo_search/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	cuckoo_search/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	levy-functions/src/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	levy-functions/src/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	nelder_mead/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	nelder_mead/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	neuralNet/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	neuralNet/catch.hpp	/^#  undef CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	AutoDiff/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	BSImpliedVolatility/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	CharacteristicFunctions/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	CppNumericalSolvers/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	FangOost/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	FunctionalUtilities/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	GaussNewton/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	HullWhite/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	ODESolver/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	RungeKutta/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	Vasicek/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	cfdistutilities/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	cuckoo_search/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	levy-functions/src/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	nelder_mead/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	neuralNet/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CPP11_OR_GREATER	AutoDiff/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	BSImpliedVolatility/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	CharacteristicFunctions/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	CppNumericalSolvers/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	FangOost/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	FunctionalUtilities/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	GaussNewton/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	HullWhite/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	ODESolver/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	RungeKutta/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	Vasicek/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	cfdistutilities/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	cuckoo_search/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	levy-functions/src/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	nelder_mead/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_CPP11_OR_GREATER	neuralNet/catch.hpp	/^#define CLARA_CPP11_OR_GREATER$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	AutoDiff/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	BSImpliedVolatility/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	CharacteristicFunctions/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	CppNumericalSolvers/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	FangOost/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	FunctionalUtilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	GaussNewton/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	HullWhite/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	ODESolver/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	RungeKutta/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	Vasicek/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	cfdistutilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	cuckoo_search/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	levy-functions/src/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	nelder_mead/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS	neuralNet/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_GENERATED_METHODS$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	AutoDiff/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	BSImpliedVolatility/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	CharacteristicFunctions/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	CppNumericalSolvers/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	FangOost/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	FunctionalUtilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	GaussNewton/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	HullWhite/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	ODESolver/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	RungeKutta/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	Vasicek/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	cfdistutilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	cuckoo_search/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	levy-functions/src/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	nelder_mead/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT	neuralNet/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NOEXCEPT$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	AutoDiff/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	BSImpliedVolatility/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	CharacteristicFunctions/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	CppNumericalSolvers/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	FangOost/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	FunctionalUtilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	GaussNewton/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	HullWhite/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	ODESolver/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	RungeKutta/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	Vasicek/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	cfdistutilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	cuckoo_search/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	levy-functions/src/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	nelder_mead/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_NULLPTR	neuralNet/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_NULLPTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	AutoDiff/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	BSImpliedVolatility/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	CharacteristicFunctions/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	CppNumericalSolvers/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	FangOost/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	FunctionalUtilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	GaussNewton/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	HullWhite/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	ODESolver/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	RungeKutta/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	Vasicek/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	cfdistutilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	cuckoo_search/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	levy-functions/src/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	nelder_mead/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE	neuralNet/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_OVERRIDE$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	AutoDiff/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	BSImpliedVolatility/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	CharacteristicFunctions/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	CppNumericalSolvers/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	FangOost/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	FunctionalUtilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	GaussNewton/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	HullWhite/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	ODESolver/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	RungeKutta/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	Vasicek/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	cfdistutilities/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	cuckoo_search/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	levy-functions/src/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	nelder_mead/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR	neuralNet/catch.hpp	/^#define CLARA_INTERNAL_CONFIG_CPP11_UNIQUE_PTR$/;"	d
CLARA_NOEXCEPT	AutoDiff/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	BSImpliedVolatility/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	CharacteristicFunctions/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	CppNumericalSolvers/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	FangOost/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	FunctionalUtilities/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	GaussNewton/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	HullWhite/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	ODESolver/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	RungeKutta/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	Vasicek/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	cfdistutilities/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	cuckoo_search/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	levy-functions/src/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	nelder_mead/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT	neuralNet/catch.hpp	/^#define CLARA_NOEXCEPT /;"	d
CLARA_NOEXCEPT_IS	AutoDiff/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	BSImpliedVolatility/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	CharacteristicFunctions/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	CppNumericalSolvers/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	FangOost/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	FunctionalUtilities/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	GaussNewton/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	HullWhite/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	ODESolver/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	RungeKutta/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	Vasicek/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	cfdistutilities/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	cuckoo_search/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	levy-functions/src/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	nelder_mead/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NOEXCEPT_IS	neuralNet/catch.hpp	/^#  define CLARA_NOEXCEPT_IS(/;"	d
CLARA_NULL	AutoDiff/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	BSImpliedVolatility/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	CharacteristicFunctions/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	CppNumericalSolvers/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	FangOost/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	FunctionalUtilities/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	GaussNewton/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	HullWhite/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	ODESolver/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	RungeKutta/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	Vasicek/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	cfdistutilities/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	cuckoo_search/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	levy-functions/src/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	nelder_mead/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_NULL	neuralNet/catch.hpp	/^#define CLARA_NULL /;"	d
CLARA_OVERRIDE	AutoDiff/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	BSImpliedVolatility/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	CharacteristicFunctions/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	CppNumericalSolvers/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	FangOost/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	FunctionalUtilities/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	GaussNewton/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	HullWhite/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	ODESolver/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	RungeKutta/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	Vasicek/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	cfdistutilities/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	cuckoo_search/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	levy-functions/src/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	nelder_mead/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_OVERRIDE	neuralNet/catch.hpp	/^#define CLARA_OVERRIDE /;"	d
CLARA_PLATFORM_WINDOWS	AutoDiff/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	BSImpliedVolatility/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	CharacteristicFunctions/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	CppNumericalSolvers/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	FangOost/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	FunctionalUtilities/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	GaussNewton/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	HullWhite/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	ODESolver/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	RungeKutta/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	Vasicek/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	cfdistutilities/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	cuckoo_search/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	levy-functions/src/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	nelder_mead/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_PLATFORM_WINDOWS	neuralNet/catch.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	AutoDiff/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	AutoDiff/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	BSImpliedVolatility/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	BSImpliedVolatility/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	CharacteristicFunctions/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	CharacteristicFunctions/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	CppNumericalSolvers/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	CppNumericalSolvers/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	FangOost/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	FangOost/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	FunctionalUtilities/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	FunctionalUtilities/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	GaussNewton/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	GaussNewton/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	HullWhite/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	HullWhite/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	ODESolver/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	ODESolver/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	RungeKutta/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	RungeKutta/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	Vasicek/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	Vasicek/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	cfdistutilities/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	cfdistutilities/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	cuckoo_search/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	cuckoo_search/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	levy-functions/src/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	levy-functions/src/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	nelder_mead/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	nelder_mead/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	neuralNet/catch.hpp	/^#define CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE /;"	d
CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE	neuralNet/catch.hpp	/^#undef CLICHE_TBC_TEXT_FORMAT_OUTER_NAMESPACE$/;"	d
CallAug	FFTOptionPricing/OptionPricing.h	/^    auto CallAug(const Number1& v, const Number2& alpha, CF&& cf){ \/\/used for Carr-Madan approach...v is typically complex$/;"	f	namespace:optionprice
Caplet	HullWhite/HullWhite.h	/^  auto Caplet(\/*price of a caplet on simple bond yield at time t=0*\/$/;"	f	namespace:hullwhite
Caplet	HullWhite/HullWhite.h	/^  auto Caplet(\/*price of a caplet on simple bond yield*\/$/;"	f	namespace:hullwhite
CarrMadanCall	FFTOptionPricing/OptionPricing.h	/^    auto CarrMadanCall($/;"	f	namespace:optionprice
CarrMadanGeneric	FFTOptionPricing/OptionPricing.h	/^    auto CarrMadanGeneric($/;"	f	namespace:optionprice
CarrMadanPut	FFTOptionPricing/OptionPricing.h	/^    auto CarrMadanPut($/;"	f	namespace:optionprice
CaseSensitive	AutoDiff/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	BSImpliedVolatility/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	CharacteristicFunctions/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	CppNumericalSolvers/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	FangOost/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	FunctionalUtilities/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	GaussNewton/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	HullWhite/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	ODESolver/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	RungeKutta/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	Vasicek/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	cfdistutilities/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	cuckoo_search/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	levy-functions/src/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	nelder_mead/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	neuralNet/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CasedString	AutoDiff/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	AutoDiff/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	BSImpliedVolatility/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	BSImpliedVolatility/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	CharacteristicFunctions/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	CharacteristicFunctions/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	CppNumericalSolvers/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	CppNumericalSolvers/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	FangOost/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	FangOost/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	FunctionalUtilities/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	FunctionalUtilities/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	GaussNewton/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	GaussNewton/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	HullWhite/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	HullWhite/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	ODESolver/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	ODESolver/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	RungeKutta/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	RungeKutta/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	Vasicek/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	Vasicek/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	cfdistutilities/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	cfdistutilities/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	cuckoo_search/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	cuckoo_search/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	levy-functions/src/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	levy-functions/src/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	nelder_mead/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	nelder_mead/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
CasedString	neuralNet/catch.hpp	/^            CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity )$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
CasedString	neuralNet/catch.hpp	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::Impl::StdString
Catch	AutoDiff/catch.hpp	/^namespace Catch {$/;"	n
Catch	BSImpliedVolatility/catch.hpp	/^namespace Catch {$/;"	n
Catch	CharacteristicFunctions/catch.hpp	/^namespace Catch {$/;"	n
Catch	CppNumericalSolvers/catch.hpp	/^namespace Catch {$/;"	n
Catch	FangOost/catch.hpp	/^namespace Catch {$/;"	n
Catch	FunctionalUtilities/catch.hpp	/^namespace Catch {$/;"	n
Catch	GaussNewton/catch.hpp	/^namespace Catch {$/;"	n
Catch	HullWhite/catch.hpp	/^namespace Catch {$/;"	n
Catch	ODESolver/catch.hpp	/^namespace Catch {$/;"	n
Catch	RungeKutta/catch.hpp	/^namespace Catch {$/;"	n
Catch	Vasicek/catch.hpp	/^namespace Catch {$/;"	n
Catch	cfdistutilities/catch.hpp	/^namespace Catch {$/;"	n
Catch	cuckoo_search/catch.hpp	/^namespace Catch {$/;"	n
Catch	levy-functions/src/catch.hpp	/^namespace Catch {$/;"	n
Catch	nelder_mead/catch.hpp	/^namespace Catch {$/;"	n
Catch	neuralNet/catch.hpp	/^namespace Catch {$/;"	n
Choice	AutoDiff/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	BSImpliedVolatility/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	CharacteristicFunctions/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	CppNumericalSolvers/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	FangOost/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	FunctionalUtilities/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	GaussNewton/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	HullWhite/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	ODESolver/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	RungeKutta/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	Vasicek/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	cfdistutilities/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	cuckoo_search/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	levy-functions/src/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	nelder_mead/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	neuralNet/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Complex	FFTOptionPricing/fft.h	/^typedef std::complex<double> Complex;$/;"	t
Contains	AutoDiff/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	AutoDiff/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	AutoDiff/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	AutoDiff/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	AutoDiff/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	BSImpliedVolatility/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	BSImpliedVolatility/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	BSImpliedVolatility/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	BSImpliedVolatility/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	BSImpliedVolatility/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	CharacteristicFunctions/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	CharacteristicFunctions/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	CharacteristicFunctions/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	CharacteristicFunctions/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	CharacteristicFunctions/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	CppNumericalSolvers/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	CppNumericalSolvers/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	CppNumericalSolvers/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	CppNumericalSolvers/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	CppNumericalSolvers/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	FangOost/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	FangOost/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	FangOost/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	FangOost/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	FangOost/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	FunctionalUtilities/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	FunctionalUtilities/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	FunctionalUtilities/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	FunctionalUtilities/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	FunctionalUtilities/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	GaussNewton/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	GaussNewton/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	GaussNewton/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	GaussNewton/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	GaussNewton/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	HullWhite/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	HullWhite/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	HullWhite/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	HullWhite/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	HullWhite/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	ODESolver/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	ODESolver/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	ODESolver/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	ODESolver/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	ODESolver/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	RungeKutta/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	RungeKutta/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	RungeKutta/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	RungeKutta/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	RungeKutta/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	Vasicek/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	Vasicek/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	Vasicek/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	Vasicek/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	Vasicek/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	cfdistutilities/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	cfdistutilities/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	cfdistutilities/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	cfdistutilities/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	cfdistutilities/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	cuckoo_search/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	cuckoo_search/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	cuckoo_search/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	cuckoo_search/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	cuckoo_search/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	levy-functions/src/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	levy-functions/src/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	levy-functions/src/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	levy-functions/src/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	levy-functions/src/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	nelder_mead/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	nelder_mead/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	nelder_mead/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	nelder_mead/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	nelder_mead/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	neuralNet/catch.hpp	/^            Contains( Contains const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	neuralNet/catch.hpp	/^            Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
Contains	neuralNet/catch.hpp	/^        struct Contains : MatcherImpl<Contains, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Contains	neuralNet/catch.hpp	/^    inline Impl::StdString::Contains    Contains( const char* substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Contains	neuralNet/catch.hpp	/^    inline Impl::StdString::Contains    Contains( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
ContinueOnFailure	AutoDiff/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	BSImpliedVolatility/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	CharacteristicFunctions/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	CppNumericalSolvers/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	FangOost/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	FunctionalUtilities/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	GaussNewton/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	HullWhite/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	ODESolver/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	RungeKutta/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	Vasicek/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	cfdistutilities/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	cuckoo_search/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	levy-functions/src/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	nelder_mead/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	neuralNet/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
CopyableStream	AutoDiff/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	AutoDiff/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	AutoDiff/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	BSImpliedVolatility/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	BSImpliedVolatility/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	BSImpliedVolatility/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	CharacteristicFunctions/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	CharacteristicFunctions/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	CharacteristicFunctions/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	CppNumericalSolvers/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	CppNumericalSolvers/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	CppNumericalSolvers/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	FangOost/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	FangOost/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	FangOost/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	FunctionalUtilities/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	FunctionalUtilities/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	FunctionalUtilities/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	GaussNewton/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	GaussNewton/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	GaussNewton/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	HullWhite/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	HullWhite/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	HullWhite/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	ODESolver/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	ODESolver/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	ODESolver/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	RungeKutta/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	RungeKutta/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	RungeKutta/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	Vasicek/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	Vasicek/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	Vasicek/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	cfdistutilities/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	cfdistutilities/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	cfdistutilities/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	cuckoo_search/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	cuckoo_search/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	cuckoo_search/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	levy-functions/src/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	levy-functions/src/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	levy-functions/src/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	nelder_mead/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	nelder_mead/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	nelder_mead/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
CopyableStream	neuralNet/catch.hpp	/^        CopyableStream( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
CopyableStream	neuralNet/catch.hpp	/^        CopyableStream() {}$/;"	f	struct:Catch::CopyableStream
CopyableStream	neuralNet/catch.hpp	/^    struct CopyableStream {$/;"	s	namespace:Catch
Coupon_Bond_Call	HullWhite/HullWhite.h	/^  auto Coupon_Bond_Call(\/*The price of a call option on coupon bond under Hull White...uses jamshidian's trick*\/$/;"	f	namespace:hullwhite
Coupon_Bond_Price	HullWhite/HullWhite.h	/^  auto Coupon_Bond_Price(\/*The coupon bond price under Hull White at time 0*\/$/;"	f	namespace:hullwhite
Coupon_Bond_Price	HullWhite/HullWhite.h	/^  auto Coupon_Bond_Price(\/*The coupon bond price under Hull White*\/$/;"	f	namespace:hullwhite
Coupon_Bond_Put	HullWhite/HullWhite.h	/^  auto Coupon_Bond_Put(\/*The price of a call option on coupon bond under Hull White...uses jamshidian's trick*\/$/;"	f	namespace:hullwhite
DEFAULTVALUE	levy-functions/src/parse_json.h	/^constexpr int DEFAULTVALUE=1;$/;"	v
DFT	FFTOptionPricing/OptionCalibration.h	/^    auto DFT(const std::vector<ArrayU>& uArray, Fn&& fn, ApplyEachSum&& fnU, const T& xMin, const T& xMax, int N){$/;"	f	namespace:optioncal
Detail	AutoDiff/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	BSImpliedVolatility/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	CharacteristicFunctions/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	CppNumericalSolvers/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	FangOost/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	FunctionalUtilities/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	GaussNewton/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	HullWhite/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	ODESolver/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	RungeKutta/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	Vasicek/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	cfdistutilities/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	cuckoo_search/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	levy-functions/src/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	nelder_mead/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	neuralNet/catch.hpp	/^namespace Detail {$/;"	n	namespace:Catch
DidntThrowException	AutoDiff/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	BSImpliedVolatility/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	CharacteristicFunctions/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	CppNumericalSolvers/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	FangOost/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	FunctionalUtilities/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	GaussNewton/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	HullWhite/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	ODESolver/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	RungeKutta/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	Vasicek/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	cfdistutilities/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	cuckoo_search/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	levy-functions/src/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	nelder_mead/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	neuralNet/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
ERRORVAL	GaussNewton/Newton.h	/^  constexpr int ERRORVAL=1;$/;"	m	namespace:newton
ES	cfdistutilities/CFDistUtilities.h	/^    constexpr int ES=0;$/;"	m	namespace:cfdistutilities
EndsWith	AutoDiff/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	AutoDiff/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	AutoDiff/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	AutoDiff/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	AutoDiff/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	BSImpliedVolatility/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	BSImpliedVolatility/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	BSImpliedVolatility/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	BSImpliedVolatility/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	BSImpliedVolatility/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	CharacteristicFunctions/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	CharacteristicFunctions/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	CharacteristicFunctions/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	CharacteristicFunctions/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	CharacteristicFunctions/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	CppNumericalSolvers/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	CppNumericalSolvers/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	CppNumericalSolvers/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	CppNumericalSolvers/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	CppNumericalSolvers/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	FangOost/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	FangOost/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	FangOost/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	FangOost/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	FangOost/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	FunctionalUtilities/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	FunctionalUtilities/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	FunctionalUtilities/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	FunctionalUtilities/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	FunctionalUtilities/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	GaussNewton/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	GaussNewton/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	GaussNewton/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	GaussNewton/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	GaussNewton/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	HullWhite/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	HullWhite/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	HullWhite/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	HullWhite/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	HullWhite/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	ODESolver/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	ODESolver/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	ODESolver/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	ODESolver/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	ODESolver/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	RungeKutta/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	RungeKutta/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	RungeKutta/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	RungeKutta/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	RungeKutta/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	Vasicek/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	Vasicek/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	Vasicek/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	Vasicek/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	Vasicek/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	cfdistutilities/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	cfdistutilities/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	cfdistutilities/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	cfdistutilities/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	cfdistutilities/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	cuckoo_search/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	cuckoo_search/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	cuckoo_search/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	cuckoo_search/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	cuckoo_search/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	levy-functions/src/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	levy-functions/src/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	levy-functions/src/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	levy-functions/src/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	levy-functions/src/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	nelder_mead/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	nelder_mead/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	nelder_mead/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	nelder_mead/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	nelder_mead/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	neuralNet/catch.hpp	/^            EndsWith( EndsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	neuralNet/catch.hpp	/^            EndsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
EndsWith	neuralNet/catch.hpp	/^        struct EndsWith : MatcherImpl<EndsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
EndsWith	neuralNet/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
EndsWith	neuralNet/catch.hpp	/^    inline Impl::StdString::EndsWith    EndsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
EnumStringMaker	AutoDiff/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	AutoDiff/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	BSImpliedVolatility/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	BSImpliedVolatility/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	CharacteristicFunctions/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	CharacteristicFunctions/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	CppNumericalSolvers/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	CppNumericalSolvers/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	FangOost/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	FangOost/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	FunctionalUtilities/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	FunctionalUtilities/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	GaussNewton/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	GaussNewton/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	HullWhite/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	HullWhite/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	ODESolver/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	ODESolver/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	RungeKutta/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	RungeKutta/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	Vasicek/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	Vasicek/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	cfdistutilities/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	cfdistutilities/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	cuckoo_search/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	cuckoo_search/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	levy-functions/src/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	levy-functions/src/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	nelder_mead/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	nelder_mead/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
EnumStringMaker	neuralNet/catch.hpp	/^    struct EnumStringMaker$/;"	s	namespace:Catch::Detail
EnumStringMaker	neuralNet/catch.hpp	/^    struct EnumStringMaker<T,true>$/;"	s	namespace:Catch::Detail
Equals	AutoDiff/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	AutoDiff/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	AutoDiff/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	AutoDiff/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	AutoDiff/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	BSImpliedVolatility/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	BSImpliedVolatility/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	BSImpliedVolatility/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	BSImpliedVolatility/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	BSImpliedVolatility/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	CharacteristicFunctions/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	CharacteristicFunctions/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	CharacteristicFunctions/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	CharacteristicFunctions/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	CharacteristicFunctions/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	CppNumericalSolvers/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	CppNumericalSolvers/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	CppNumericalSolvers/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	CppNumericalSolvers/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	CppNumericalSolvers/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	FangOost/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	FangOost/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	FangOost/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	FangOost/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	FangOost/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	FunctionalUtilities/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	FunctionalUtilities/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	FunctionalUtilities/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	FunctionalUtilities/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	FunctionalUtilities/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	GaussNewton/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	GaussNewton/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	GaussNewton/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	GaussNewton/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	GaussNewton/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	HullWhite/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	HullWhite/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	HullWhite/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	HullWhite/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	HullWhite/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	ODESolver/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	ODESolver/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	ODESolver/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	ODESolver/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	ODESolver/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	RungeKutta/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	RungeKutta/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	RungeKutta/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	RungeKutta/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	RungeKutta/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	Vasicek/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	Vasicek/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	Vasicek/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	Vasicek/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	Vasicek/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	cfdistutilities/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	cfdistutilities/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	cfdistutilities/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	cfdistutilities/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	cfdistutilities/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	cuckoo_search/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	cuckoo_search/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	cuckoo_search/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	cuckoo_search/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	cuckoo_search/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	levy-functions/src/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	levy-functions/src/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	levy-functions/src/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	levy-functions/src/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	levy-functions/src/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	nelder_mead/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	nelder_mead/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	nelder_mead/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	nelder_mead/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	nelder_mead/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	neuralNet/catch.hpp	/^            Equals( Equals const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	neuralNet/catch.hpp	/^            Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
Equals	neuralNet/catch.hpp	/^        struct Equals : MatcherImpl<Equals, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
Equals	neuralNet/catch.hpp	/^    inline Impl::StdString::Equals      Equals( const char* str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Equals	neuralNet/catch.hpp	/^    inline Impl::StdString::Equals      Equals( std::string const& str, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes ) {$/;"	f	namespace:Catch::Matchers
Estimates	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsection{Estimates}$/;"	b
Euro_Dollar_Future	HullWhite/HullWhite.h	/^  auto Euro_Dollar_Future($/;"	f	namespace:hullwhite
Evaluator	AutoDiff/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	AutoDiff/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	AutoDiff/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	AutoDiff/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	AutoDiff/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	AutoDiff/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	AutoDiff/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	BSImpliedVolatility/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	BSImpliedVolatility/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	BSImpliedVolatility/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	BSImpliedVolatility/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	BSImpliedVolatility/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	BSImpliedVolatility/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	BSImpliedVolatility/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	CharacteristicFunctions/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	CharacteristicFunctions/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	CharacteristicFunctions/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	CharacteristicFunctions/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	CharacteristicFunctions/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	CharacteristicFunctions/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	CharacteristicFunctions/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	CppNumericalSolvers/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	CppNumericalSolvers/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	CppNumericalSolvers/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	CppNumericalSolvers/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	CppNumericalSolvers/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	CppNumericalSolvers/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	CppNumericalSolvers/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	FangOost/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	FangOost/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	FangOost/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	FangOost/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	FangOost/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	FangOost/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	FangOost/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	FunctionalUtilities/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	FunctionalUtilities/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	FunctionalUtilities/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	FunctionalUtilities/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	FunctionalUtilities/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	FunctionalUtilities/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	FunctionalUtilities/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	GaussNewton/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	GaussNewton/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	GaussNewton/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	GaussNewton/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	GaussNewton/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	GaussNewton/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	GaussNewton/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	HullWhite/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	HullWhite/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	HullWhite/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	HullWhite/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	HullWhite/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	HullWhite/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	HullWhite/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	ODESolver/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	ODESolver/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	ODESolver/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	ODESolver/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	ODESolver/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	ODESolver/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	ODESolver/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	RungeKutta/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	RungeKutta/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	RungeKutta/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	RungeKutta/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	RungeKutta/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	RungeKutta/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	RungeKutta/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	Vasicek/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	Vasicek/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	Vasicek/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	Vasicek/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	Vasicek/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	Vasicek/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	Vasicek/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	cfdistutilities/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	cfdistutilities/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	cfdistutilities/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	cfdistutilities/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	cfdistutilities/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	cfdistutilities/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	cfdistutilities/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	cuckoo_search/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	cuckoo_search/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	cuckoo_search/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	cuckoo_search/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	cuckoo_search/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	cuckoo_search/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	cuckoo_search/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	levy-functions/src/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	levy-functions/src/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	levy-functions/src/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	levy-functions/src/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	levy-functions/src/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	levy-functions/src/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	levy-functions/src/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	nelder_mead/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	nelder_mead/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	nelder_mead/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	nelder_mead/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	nelder_mead/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	nelder_mead/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	nelder_mead/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	neuralNet/catch.hpp	/^    class Evaluator{};$/;"	c	namespace:Catch::Internal
Evaluator	neuralNet/catch.hpp	/^    struct Evaluator<T1, T2, IsEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	neuralNet/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThan> {$/;"	s	namespace:Catch::Internal
Evaluator	neuralNet/catch.hpp	/^    struct Evaluator<T1, T2, IsGreaterThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	neuralNet/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThan> {$/;"	s	namespace:Catch::Internal
Evaluator	neuralNet/catch.hpp	/^    struct Evaluator<T1, T2, IsLessThanOrEqualTo> {$/;"	s	namespace:Catch::Internal
Evaluator	neuralNet/catch.hpp	/^    struct Evaluator<T1, T2, IsNotEqualTo> {$/;"	s	namespace:Catch::Internal
Exception	AutoDiff/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	BSImpliedVolatility/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	CharacteristicFunctions/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	CppNumericalSolvers/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	FangOost/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	FunctionalUtilities/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	GaussNewton/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	HullWhite/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	ODESolver/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	RungeKutta/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	Vasicek/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	cfdistutilities/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	cuckoo_search/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	levy-functions/src/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	nelder_mead/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	neuralNet/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	AutoDiff/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	BSImpliedVolatility/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	CharacteristicFunctions/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	CppNumericalSolvers/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	FangOost/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	FunctionalUtilities/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	GaussNewton/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	HullWhite/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	ODESolver/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	RungeKutta/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	Vasicek/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	cfdistutilities/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	cuckoo_search/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	levy-functions/src/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	nelder_mead/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	neuralNet/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExprComponents	AutoDiff/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	AutoDiff/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	BSImpliedVolatility/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	BSImpliedVolatility/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	CharacteristicFunctions/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	CharacteristicFunctions/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	CppNumericalSolvers/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	CppNumericalSolvers/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	FangOost/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	FangOost/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	FunctionalUtilities/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	FunctionalUtilities/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	GaussNewton/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	GaussNewton/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	HullWhite/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	HullWhite/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	ODESolver/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	ODESolver/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	RungeKutta/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	RungeKutta/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	Vasicek/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	Vasicek/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	cfdistutilities/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	cfdistutilities/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	cuckoo_search/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	cuckoo_search/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	levy-functions/src/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	levy-functions/src/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	nelder_mead/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	nelder_mead/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExprComponents	neuralNet/catch.hpp	/^            ExprComponents() : testFalse( false ) {}$/;"	f	struct:Catch::ResultBuilder::ExprComponents
ExprComponents	neuralNet/catch.hpp	/^        struct ExprComponents {$/;"	s	class:Catch::ResultBuilder
ExpressionFailed	AutoDiff/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	BSImpliedVolatility/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	CharacteristicFunctions/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	CppNumericalSolvers/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	FangOost/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	FunctionalUtilities/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	GaussNewton/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	HullWhite/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	ODESolver/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	RungeKutta/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	Vasicek/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	cfdistutilities/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	cuckoo_search/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	levy-functions/src/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	nelder_mead/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	neuralNet/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionType	AutoDiff/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	BSImpliedVolatility/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	CharacteristicFunctions/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	CppNumericalSolvers/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	FangOost/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	FunctionalUtilities/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	GaussNewton/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	HullWhite/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	ODESolver/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	RungeKutta/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	Vasicek/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	cfdistutilities/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	cuckoo_search/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	levy-functions/src/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	nelder_mead/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
ExpressionType	neuralNet/catch.hpp	/^        typedef ExpressionT ExpressionType;$/;"	t	struct:Catch::Matchers::Impl::Matcher
FANGOOST	FangOost/FangOost.h	/^#define FANGOOST$/;"	d
FSTSDelta	FFTOptionPricing/OptionPricing.h	/^    auto FSTSDelta($/;"	f	namespace:optionprice
FSTSGamma	FFTOptionPricing/OptionPricing.h	/^    auto FSTSGamma($/;"	f	namespace:optionprice
FSTSGeneric	FFTOptionPricing/OptionPricing.h	/^    auto FSTSGeneric($/;"	f	namespace:optionprice
FSTSPrice	FFTOptionPricing/OptionPricing.h	/^    auto FSTSPrice($/;"	f	namespace:optionprice
FSTSTheta	FFTOptionPricing/OptionPricing.h	/^    auto FSTSTheta($/;"	f	namespace:optionprice
FUTILITIES	FunctionalUtilities/FunctionalUtilities.h	/^#define FUTILITIES$/;"	d
FailureBit	AutoDiff/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	BSImpliedVolatility/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	CharacteristicFunctions/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	CppNumericalSolvers/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	FangOost/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	FunctionalUtilities/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	GaussNewton/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	HullWhite/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	ODESolver/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	RungeKutta/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	Vasicek/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	cfdistutilities/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	cuckoo_search/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	levy-functions/src/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	nelder_mead/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	neuralNet/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FalseTest	AutoDiff/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	BSImpliedVolatility/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	CharacteristicFunctions/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	CppNumericalSolvers/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	FangOost/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	FunctionalUtilities/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	GaussNewton/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	HullWhite/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	ODESolver/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	RungeKutta/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	Vasicek/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	cfdistutilities/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	cuckoo_search/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	levy-functions/src/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	nelder_mead/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	neuralNet/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseType	AutoDiff/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	BSImpliedVolatility/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	CharacteristicFunctions/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	CppNumericalSolvers/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	FangOost/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	FunctionalUtilities/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	GaussNewton/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	HullWhite/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	ODESolver/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	RungeKutta/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	Vasicek/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	cfdistutilities/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	cuckoo_search/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	levy-functions/src/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	nelder_mead/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FalseType	neuralNet/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	s	namespace:Catch::Detail
FangOostCallDelta	FFTOptionPricing/OptionPricing.h	/^    auto FangOostCallDelta($/;"	f	namespace:optionprice
FangOostCallGamma	FFTOptionPricing/OptionPricing.h	/^    auto FangOostCallGamma($/;"	f	namespace:optionprice
FangOostCallPrice	FFTOptionPricing/OptionPricing.h	/^    auto FangOostCallPrice($/;"	f	namespace:optionprice
FangOostCallTheta	FFTOptionPricing/OptionPricing.h	/^    auto FangOostCallTheta($/;"	f	namespace:optionprice
FangOostGeneric	FFTOptionPricing/OptionPricing.h	/^    auto FangOostGeneric($/;"	f	namespace:optionprice
FangOostPutDelta	FFTOptionPricing/OptionPricing.h	/^    auto FangOostPutDelta($/;"	f	namespace:optionprice
FangOostPutGamma	FFTOptionPricing/OptionPricing.h	/^    auto FangOostPutGamma($/;"	f	namespace:optionprice
FangOostPutPrice	FFTOptionPricing/OptionPricing.h	/^    auto FangOostPutPrice($/;"	f	namespace:optionprice
FangOostPutTheta	FFTOptionPricing/OptionPricing.h	/^    auto FangOostPutTheta($/;"	f	namespace:optionprice
FatalErrorCondition	AutoDiff/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	BSImpliedVolatility/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	CharacteristicFunctions/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	CppNumericalSolvers/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	FangOost/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	FunctionalUtilities/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	GaussNewton/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	HullWhite/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	ODESolver/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	RungeKutta/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	Vasicek/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	cfdistutilities/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	cuckoo_search/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	levy-functions/src/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	nelder_mead/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	neuralNet/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
Flags	AutoDiff/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	BSImpliedVolatility/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	CharacteristicFunctions/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	CppNumericalSolvers/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	FangOost/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	FunctionalUtilities/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	GaussNewton/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	HullWhite/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	ODESolver/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	RungeKutta/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	Vasicek/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	cfdistutilities/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	cuckoo_search/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	levy-functions/src/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	nelder_mead/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	neuralNet/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Forward_Swap_Rate	HullWhite/HullWhite.h	/^  auto Forward_Swap_Rate($/;"	f	namespace:hullwhite
GCCVAL	BSImpliedVolatility/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	BSImpliedVolatility/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	CharacteristicFunctions/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	CharacteristicFunctions/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	FFTOptionPricing/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	FFTOptionPricing/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	FangOost/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	FangOost/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	FunctionalUtilities/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	FunctionalUtilities/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	HullWhite/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	HullWhite/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	InverseTau/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	InverseTau/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	ODESolver/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	ODESolver/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	cfdistutilities/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	cfdistutilities/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	levy-functions/src/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	levy-functions/src/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	levy-functions/tests/unit/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	levy-functions/tests/unit/makefile	/^GCCVAL=g++$/;"	m
GCCVAL	neuralNet/makefile	/^	GCCVAL=g++-7$/;"	m
GCCVAL	neuralNet/makefile	/^GCCVAL=g++$/;"	m
GET_CF_LEVY_FNC	levy-functions/src/get_cf.h	/^#define GET_CF_LEVY_FNC$/;"	d
GIVEN	AutoDiff/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	BSImpliedVolatility/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	CharacteristicFunctions/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	CppNumericalSolvers/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	FangOost/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	FunctionalUtilities/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	GaussNewton/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	HullWhite/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	ODESolver/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	RungeKutta/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	Vasicek/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	cfdistutilities/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	cuckoo_search/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	levy-functions/src/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	nelder_mead/catch.hpp	/^#define GIVEN(/;"	d
GIVEN	neuralNet/catch.hpp	/^#define GIVEN(/;"	d
GRAD	GaussNewton/Newton.h	/^  constexpr int GRAD=0;$/;"	m	namespace:newton
Generic	AutoDiff/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	BSImpliedVolatility/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	CharacteristicFunctions/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	CppNumericalSolvers/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	FangOost/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	FunctionalUtilities/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	GaussNewton/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	HullWhite/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	ODESolver/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	RungeKutta/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	Vasicek/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	cfdistutilities/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	cuckoo_search/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	levy-functions/src/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	nelder_mead/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Generic	neuralNet/catch.hpp	/^    namespace Generic {$/;"	n	namespace:Catch::Matchers::Impl
Heston	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsection{Heston}$/;"	b
Heston	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsubsection{Heston}$/;"	b
IContext	AutoDiff/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	BSImpliedVolatility/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	CharacteristicFunctions/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	CppNumericalSolvers/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	FangOost/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	FunctionalUtilities/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	GaussNewton/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	HullWhite/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	ODESolver/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	RungeKutta/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	Vasicek/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	cfdistutilities/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	cuckoo_search/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	levy-functions/src/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	nelder_mead/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IContext	neuralNet/catch.hpp	/^    struct IContext$/;"	s	namespace:Catch
IGeneratorInfo	AutoDiff/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	BSImpliedVolatility/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	CharacteristicFunctions/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	CppNumericalSolvers/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	FangOost/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	FunctionalUtilities/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	GaussNewton/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	HullWhite/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	ODESolver/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	RungeKutta/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	Vasicek/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	cfdistutilities/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	cuckoo_search/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	levy-functions/src/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	nelder_mead/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorInfo	neuralNet/catch.hpp	/^    struct IGeneratorInfo {$/;"	s	namespace:Catch
IGeneratorsForTest	AutoDiff/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	BSImpliedVolatility/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	CharacteristicFunctions/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	CppNumericalSolvers/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	FangOost/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	FunctionalUtilities/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	GaussNewton/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	HullWhite/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	ODESolver/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	RungeKutta/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	Vasicek/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	cfdistutilities/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	cuckoo_search/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	levy-functions/src/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	nelder_mead/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IGeneratorsForTest	neuralNet/catch.hpp	/^    struct IGeneratorsForTest {$/;"	s	namespace:Catch
IMutableContext	AutoDiff/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	BSImpliedVolatility/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	CharacteristicFunctions/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	CppNumericalSolvers/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	FangOost/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	FunctionalUtilities/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	GaussNewton/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	HullWhite/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	ODESolver/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	RungeKutta/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	Vasicek/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	cfdistutilities/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	cuckoo_search/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	levy-functions/src/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	nelder_mead/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableContext	neuralNet/catch.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
INCLUDES	BSImpliedVolatility/makefile	/^INCLUDES=  -I ..\/FunctionalUtilities  -I ..\/HullWhite -I..\/GaussNewton -I..\/TupleUtilities -I..\/AutoDiff -I..\/nelder_mead -I ..\/levy-functions -I..\/CharacteristicFunctions -I..\/RungeKutta -I..\/FFTOptionPricing -I..\/FangOost -I..\/cuckoo_search -I..\/MonteCarlo$/;"	m
INCLUDES	CharacteristicFunctions/makefile	/^INCLUDES=-I ..\/FunctionalUtilities -I ..\/RungeKutta$/;"	m
INCLUDES	CppNumericalSolvers/makefile	/^INCLUDES= -I ..\/FunctionalUtilities $/;"	m
INCLUDES	FFTOptionPricing/makefile	/^INCLUDES=-I ..\/FunctionalUtilities -I ..\/RungeKutta -I ..\/CharacteristicFunctions -I ..\/FangOost -I ..\/MonteCarlo  -I..\/cuckoo_search $/;"	m
INCLUDES	FangOost/makefile	/^INCLUDES=-I ..\/FunctionalUtilities$/;"	m
INCLUDES	GaussNewton/makefile	/^INCLUDES=-I ..\/FunctionalUtilities -I ..\/AutoDiff -I ..\/TupleUtilities$/;"	m
INCLUDES	HullWhite/makefile	/^INCLUDES=-I..\/GaussNewton  -I..\/BinomialTree -I..\/AutoDiff -I..\/FunctionalUtilities -I..\/TupleUtilities$/;"	m
INCLUDES	InverseTau/makefile	/^INCLUDES= -I..\/FangOost -I..\/FunctionalUtilities -I..\/ODESolver $/;"	m
INCLUDES	ODESolver/makefile	/^INCLUDES=  -I..\/FunctionalUtilities$/;"	m
INCLUDES	RungeKutta/makefile	/^INCLUDES=-I ..\/FunctionalUtilities$/;"	m
INCLUDES	Vasicek/makefile	/^INCLUDES=-I ..\/FunctionalUtilities$/;"	m
INCLUDES	cfdistutilities/makefile	/^INCLUDES= -I..\/FangOost -I..\/FunctionalUtilities -I..\/GaussNewton -I..\/TupleUtilities -I..\/AutoDiff -I..\/CharacteristicFunctions -I..\/RungeKutta$/;"	m
INCLUDES	cuckoo_search/makefile	/^INCLUDES=-I ..\/FunctionalUtilities -I ..\/MonteCarlo$/;"	m
INCLUDES	levy-functions/src/makefile	/^INCLUDES=-I $(SRC)rapidjson\/include\/rapidjson -I $(SRC)cfdistutilities -I $(SRC)CharacteristicFunctions -I $(SRC)FangOost -I $(SRC)FFTOptionPricing -I $(SRC)FunctionalUtilities -I $(SRC)RungeKutta -I $(SRC)GaussNewton -I $(SRC)TupleUtilities -I $(SRC)AutoDiff  -I $(SRC)HullWhite -I $(SRC)BSImpliedVolatility -I $(SRC)nelder_mead -I $(SRC)cuckoo_search -I $(SRC)MonteCarlo $/;"	m
INCLUDES	levy-functions/tests/unit/makefile	/^INCLUDES=-I $(SRC)\/rapidjson\/include\/rapidjson -I $(SRC)\/cfdistutilities -I $(SRC)\/CharacteristicFunctions -I $(SRC)\/FangOost -I $(SRC)\/FFTOptionPricing -I $(SRC)\/FunctionalUtilities -I $(SRC)\/RungeKutta -I $(SRC)\/GaussNewton -I $(SRC)\/TupleUtilities -I $(SRC)\/AutoDiff  -I $(SRC)\/HullWhite -I $(SRC)\/BSImpliedVolatility -I $(SRC)\/nelder_mead -I $(SRC)\/cuckoo_search -I $(SRC)\/MonteCarlo -I $(SRC) $/;"	m
INCLUDES	neuralNet/makefile	/^INCLUDES=-I ..\/FunctionalUtilities -I ..\/AutoDiff $/;"	m
INCLUDES	opsRisk/makefile	/^INCLUDES=-I ..\/RungeKutta -I ..\/FangOost -I ..\/FunctionalUtilities -I ..\/CharacteristicFunctions -I ..\/rapidjson\/include\/rapidjson$/;"	m
INTERNAL_CATCH_ELSE	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	FangOost/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_ELSE	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_GENERATE	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	FangOost/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_GENERATE	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_GENERATE(/;"	d
INTERNAL_CATCH_IF	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	FangOost/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_IF	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_INFO	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	FangOost/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_INFO	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_LINESTR	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	FangOost/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_LINESTR(/;"	d
INTERNAL_CATCH_LINESTR2	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	FangOost/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_LINESTR2	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_LINESTR2(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	AutoDiff/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	BSImpliedVolatility/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	CharacteristicFunctions/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	CppNumericalSolvers/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	FangOost/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	FunctionalUtilities/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	GaussNewton/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	HullWhite/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	ODESolver/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	RungeKutta/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	Vasicek/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	cfdistutilities/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	cuckoo_search/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	levy-functions/src/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	nelder_mead/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	neuralNet/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_MSG	AutoDiff/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	BSImpliedVolatility/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	CharacteristicFunctions/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	CppNumericalSolvers/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	FangOost/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	FunctionalUtilities/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	GaussNewton/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	HullWhite/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	ODESolver/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	RungeKutta/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	Vasicek/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	cfdistutilities/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	cuckoo_search/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	levy-functions/src/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	nelder_mead/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_MSG	neuralNet/catch.hpp	/^    #define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_NO_THROW	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	FangOost/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NO_THROW	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_REACT	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	FangOost/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REACT	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	FangOost/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LEGACY_REPORTER	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LEGACY_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	FangOost/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_LISTENER	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_LISTENER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	FangOost/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_REPORTER	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_REGISTER_REPORTER(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	AutoDiff/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	BSImpliedVolatility/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	CharacteristicFunctions/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	CppNumericalSolvers/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	FangOost/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	FunctionalUtilities/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	GaussNewton/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	HullWhite/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	ODESolver/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	RungeKutta/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	Vasicek/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	cfdistutilities/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	cuckoo_search/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	levy-functions/src/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	nelder_mead/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	neuralNet/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_SECTION	AutoDiff/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	BSImpliedVolatility/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	CharacteristicFunctions/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	CppNumericalSolvers/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	FangOost/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	FunctionalUtilities/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	GaussNewton/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	HullWhite/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	ODESolver/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	RungeKutta/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	Vasicek/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	cfdistutilities/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	cuckoo_search/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	levy-functions/src/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	nelder_mead/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_SECTION	neuralNet/catch.hpp	/^    #define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_STRINGIFY	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	FangOost/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY(/;"	d
INTERNAL_CATCH_STRINGIFY2	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	FangOost/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_STRINGIFY2	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_STRINGIFY2(/;"	d
INTERNAL_CATCH_TEST	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	FangOost/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TEST	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TESTCASE	AutoDiff/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	BSImpliedVolatility/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	CharacteristicFunctions/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	CppNumericalSolvers/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	FangOost/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	FunctionalUtilities/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	GaussNewton/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	HullWhite/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	ODESolver/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	RungeKutta/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	Vasicek/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	cfdistutilities/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	cuckoo_search/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	levy-functions/src/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	nelder_mead/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	neuralNet/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE2	AutoDiff/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	BSImpliedVolatility/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	CharacteristicFunctions/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	CppNumericalSolvers/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	FangOost/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	FunctionalUtilities/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	GaussNewton/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	HullWhite/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	ODESolver/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	RungeKutta/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	Vasicek/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	cfdistutilities/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	cuckoo_search/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	levy-functions/src/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	nelder_mead/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	neuralNet/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	AutoDiff/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	BSImpliedVolatility/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	CharacteristicFunctions/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	CppNumericalSolvers/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	FangOost/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	FunctionalUtilities/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	GaussNewton/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	HullWhite/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	ODESolver/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	RungeKutta/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	Vasicek/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	cfdistutilities/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	cuckoo_search/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	levy-functions/src/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	nelder_mead/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	neuralNet/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	AutoDiff/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	BSImpliedVolatility/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	CharacteristicFunctions/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	CppNumericalSolvers/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	FangOost/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	FunctionalUtilities/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	GaussNewton/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	HullWhite/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	ODESolver/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	RungeKutta/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	Vasicek/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	cfdistutilities/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	cuckoo_search/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	levy-functions/src/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	nelder_mead/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	neuralNet/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_THROWS	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	FangOost/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS_AS	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	FangOost/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_AS	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	FangOost/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	FangOost/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	AutoDiff/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	BSImpliedVolatility/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	CharacteristicFunctions/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	CppNumericalSolvers/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	FangOost/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	FunctionalUtilities/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	GaussNewton/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	HullWhite/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	ODESolver/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	RungeKutta/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	Vasicek/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	cfdistutilities/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	cuckoo_search/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	levy-functions/src/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	nelder_mead/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	neuralNet/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	FangOost/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	AutoDiff/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	FangOost/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	GaussNewton/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	HullWhite/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	ODESolver/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	RungeKutta/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	Vasicek/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	cfdistutilities/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	cuckoo_search/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	levy-functions/src/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	nelder_mead/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	neuralNet/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CHECK_THAT	AutoDiff/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	BSImpliedVolatility/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	CharacteristicFunctions/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	CppNumericalSolvers/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	FangOost/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	FunctionalUtilities/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	GaussNewton/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	HullWhite/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	ODESolver/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	RungeKutta/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	Vasicek/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	cfdistutilities/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	cuckoo_search/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	levy-functions/src/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	nelder_mead/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_CHECK_THAT	neuralNet/catch.hpp	/^#define INTERNAL_CHECK_THAT(/;"	d
IShared	AutoDiff/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	BSImpliedVolatility/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	CharacteristicFunctions/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	CppNumericalSolvers/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	FangOost/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	FunctionalUtilities/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	GaussNewton/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	HullWhite/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	ODESolver/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	RungeKutta/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	Vasicek/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	cfdistutilities/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	cuckoo_search/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	levy-functions/src/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	nelder_mead/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
IShared	neuralNet/catch.hpp	/^    struct IShared : NonCopyable {$/;"	s	namespace:Catch
ITestCase	AutoDiff/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	BSImpliedVolatility/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	CharacteristicFunctions/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	CppNumericalSolvers/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	FangOost/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	FunctionalUtilities/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	GaussNewton/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	HullWhite/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	ODESolver/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	RungeKutta/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	Vasicek/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	cfdistutilities/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	cuckoo_search/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	levy-functions/src/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	nelder_mead/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCase	neuralNet/catch.hpp	/^    struct ITestCase : IShared {$/;"	s	namespace:Catch
ITestCaseRegistry	AutoDiff/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	BSImpliedVolatility/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	CharacteristicFunctions/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	CppNumericalSolvers/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	FangOost/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	FunctionalUtilities/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	GaussNewton/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	HullWhite/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	ODESolver/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	RungeKutta/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	Vasicek/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	cfdistutilities/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	cuckoo_search/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	levy-functions/src/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	nelder_mead/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	neuralNet/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
IV	BSImpliedVolatility/BSImpliedVolatility.h	/^namespace IV {$/;"	n
Impl	AutoDiff/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	BSImpliedVolatility/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	CharacteristicFunctions/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	CppNumericalSolvers/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	FangOost/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	FunctionalUtilities/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	GaussNewton/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	HullWhite/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	ODESolver/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	RungeKutta/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	Vasicek/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	cfdistutilities/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	cuckoo_search/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	levy-functions/src/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	nelder_mead/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	neuralNet/catch.hpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Info	AutoDiff/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	BSImpliedVolatility/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	CharacteristicFunctions/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	CppNumericalSolvers/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	FangOost/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	FunctionalUtilities/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	GaussNewton/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	HullWhite/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	ODESolver/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	RungeKutta/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	Vasicek/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	cfdistutilities/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	cuckoo_search/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	levy-functions/src/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	nelder_mead/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	neuralNet/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Internal	AutoDiff/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	BSImpliedVolatility/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	CharacteristicFunctions/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	CppNumericalSolvers/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	FangOost/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	FunctionalUtilities/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	GaussNewton/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	HullWhite/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	ODESolver/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	RungeKutta/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	Vasicek/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	cfdistutilities/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	cuckoo_search/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	levy-functions/src/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	nelder_mead/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Internal	neuralNet/catch.hpp	/^namespace Internal {$/;"	n	namespace:Catch
Introduction	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\section{Introduction}$/;"	s
IsEqualTo	AutoDiff/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	BSImpliedVolatility/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	CharacteristicFunctions/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	CppNumericalSolvers/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	FangOost/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	FunctionalUtilities/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	GaussNewton/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	HullWhite/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	ODESolver/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	RungeKutta/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	Vasicek/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	cfdistutilities/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	cuckoo_search/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	levy-functions/src/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	nelder_mead/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsEqualTo	neuralNet/catch.hpp	/^        IsEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	AutoDiff/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	BSImpliedVolatility/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	CharacteristicFunctions/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	CppNumericalSolvers/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	FangOost/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	FunctionalUtilities/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	GaussNewton/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	HullWhite/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	ODESolver/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	RungeKutta/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	Vasicek/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	cfdistutilities/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	cuckoo_search/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	levy-functions/src/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	nelder_mead/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThan	neuralNet/catch.hpp	/^        IsGreaterThan,$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	AutoDiff/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	BSImpliedVolatility/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	CharacteristicFunctions/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	CppNumericalSolvers/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	FangOost/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	FunctionalUtilities/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	GaussNewton/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	HullWhite/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	ODESolver/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	RungeKutta/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	Vasicek/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	cfdistutilities/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	cuckoo_search/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	levy-functions/src/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	nelder_mead/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsGreaterThanOrEqualTo	neuralNet/catch.hpp	/^        IsGreaterThanOrEqualTo$/;"	e	enum:Catch::Internal::Operator
IsLessThan	AutoDiff/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	BSImpliedVolatility/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	CharacteristicFunctions/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	CppNumericalSolvers/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	FangOost/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	FunctionalUtilities/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	GaussNewton/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	HullWhite/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	ODESolver/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	RungeKutta/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	Vasicek/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	cfdistutilities/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	cuckoo_search/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	levy-functions/src/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	nelder_mead/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThan	neuralNet/catch.hpp	/^        IsLessThan,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	AutoDiff/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	BSImpliedVolatility/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	CharacteristicFunctions/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	CppNumericalSolvers/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	FangOost/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	FunctionalUtilities/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	GaussNewton/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	HullWhite/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	ODESolver/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	RungeKutta/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	Vasicek/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	cfdistutilities/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	cuckoo_search/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	levy-functions/src/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	nelder_mead/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsLessThanOrEqualTo	neuralNet/catch.hpp	/^        IsLessThanOrEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	AutoDiff/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	BSImpliedVolatility/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	CharacteristicFunctions/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	CppNumericalSolvers/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	FangOost/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	FunctionalUtilities/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	GaussNewton/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	HullWhite/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	ODESolver/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	RungeKutta/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	Vasicek/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	cfdistutilities/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	cuckoo_search/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	levy-functions/src/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	nelder_mead/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsNotEqualTo	neuralNet/catch.hpp	/^        IsNotEqualTo,$/;"	e	enum:Catch::Internal::Operator
IsStreamInsertable	AutoDiff/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	BSImpliedVolatility/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	CharacteristicFunctions/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	CppNumericalSolvers/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	FangOost/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	FunctionalUtilities/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	GaussNewton/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	HullWhite/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	ODESolver/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	RungeKutta/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	Vasicek/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	cfdistutilities/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	cuckoo_search/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	levy-functions/src/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	nelder_mead/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
IsStreamInsertable	neuralNet/catch.hpp	/^    struct IsStreamInsertable {$/;"	s	namespace:Catch::Detail
Jump Diffusion with time change	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsection{Jump Diffusion with time change}$/;"	b
M_PI	AutoDiff/AutoDiff.h	/^    #define M_PI /;"	d
M_PI	FFTOptionPricing/fft.h	/^    #define M_PI /;"	d
M_PI	FangOost/FangOost.h	/^    #define M_PI /;"	d
M_PI	ODESolver/ODESolver.h	/^    #define M_PI /;"	d
M_PI	cfdistutilities/CFDistUtilities.h	/^    #define M_PI /;"	d
Matcher	AutoDiff/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	BSImpliedVolatility/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	CharacteristicFunctions/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	CppNumericalSolvers/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	FangOost/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	FunctionalUtilities/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	GaussNewton/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	HullWhite/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	ODESolver/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	RungeKutta/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	Vasicek/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	cfdistutilities/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	cuckoo_search/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	levy-functions/src/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	nelder_mead/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
Matcher	neuralNet/catch.hpp	/^    struct Matcher : SharedImpl<IShared>$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	AutoDiff/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	BSImpliedVolatility/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	CharacteristicFunctions/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	CppNumericalSolvers/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	FangOost/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	FunctionalUtilities/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	GaussNewton/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	HullWhite/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	ODESolver/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	RungeKutta/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	Vasicek/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	cfdistutilities/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	cuckoo_search/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	levy-functions/src/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	nelder_mead/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherImpl	neuralNet/catch.hpp	/^    struct MatcherImpl : Matcher<ExpressionT> {$/;"	s	namespace:Catch::Matchers::Impl
Matchers	AutoDiff/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	BSImpliedVolatility/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	CharacteristicFunctions/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	CppNumericalSolvers/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	FangOost/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	FunctionalUtilities/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	GaussNewton/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	HullWhite/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	ODESolver/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	RungeKutta/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	Vasicek/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	cfdistutilities/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	cuckoo_search/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	levy-functions/src/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	nelder_mead/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	neuralNet/catch.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Merton	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsubsection{Merton}$/;"	b
Merton Jump Diffusion	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsubsection{Merton Jump Diffusion}$/;"	b
Merton Jump Diffusion with Stochastic vol	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsubsection{Merton Jump Diffusion with Stochastic vol}$/;"	b
Merton with Time Changed Volatility	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsubsection{Merton with Time Changed Volatility}$/;"	b
Merton with Time Changed Volatility with jumps	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\subsubsection{Merton with Time Changed Volatility with jumps}$/;"	b
MethodTestCase	AutoDiff/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	AutoDiff/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	BSImpliedVolatility/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	BSImpliedVolatility/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	CharacteristicFunctions/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	CharacteristicFunctions/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	CppNumericalSolvers/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	CppNumericalSolvers/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	FangOost/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	FangOost/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	FunctionalUtilities/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	FunctionalUtilities/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	GaussNewton/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	GaussNewton/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	HullWhite/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	HullWhite/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	ODESolver/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	ODESolver/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	RungeKutta/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	RungeKutta/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	Vasicek/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	Vasicek/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	cfdistutilities/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	cfdistutilities/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	cuckoo_search/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	cuckoo_search/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	levy-functions/src/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	levy-functions/src/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	nelder_mead/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	nelder_mead/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
MethodTestCase	neuralNet/catch.hpp	/^    MethodTestCase( void (C::*method)() ) : m_method( method ) {}$/;"	f	class:Catch::MethodTestCase
MethodTestCase	neuralNet/catch.hpp	/^class MethodTestCase : public SharedImpl<ITestCase> {$/;"	c	namespace:Catch
NELDERMEADSOLVER_H_	CppNumericalSolvers/neldermead.h	/^#define NELDERMEADSOLVER_H_$/;"	d
NELDERMEADSOLVER_H_	CppNumericalSolvers/neldermeadsolver.h	/^#define NELDERMEADSOLVER_H_$/;"	d
NELDERMEAD_H_	CppNumericalSolvers/neldermead2.h	/^#define NELDERMEAD_H_$/;"	d
NELDERMEAD_H_	nelder_mead/neldermead.h	/^#define NELDERMEAD_H_$/;"	d
NNGRAPH_H	neuralNet/NeuralNetGraph.h	/^#define NNGRAPH_H$/;"	d
NOMINMAX	AutoDiff/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	BSImpliedVolatility/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	CharacteristicFunctions/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	CppNumericalSolvers/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	FangOost/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	FunctionalUtilities/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	GaussNewton/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	HullWhite/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	ODESolver/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	RungeKutta/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	Vasicek/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	cfdistutilities/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	cuckoo_search/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	levy-functions/src/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	nelder_mead/catch.hpp	/^#define NOMINMAX$/;"	d
NOMINMAX	neuralNet/catch.hpp	/^#define NOMINMAX$/;"	d
NameAndDesc	AutoDiff/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	AutoDiff/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	BSImpliedVolatility/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	BSImpliedVolatility/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	CharacteristicFunctions/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	CharacteristicFunctions/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	CppNumericalSolvers/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	CppNumericalSolvers/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	FangOost/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	FangOost/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	FunctionalUtilities/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	FunctionalUtilities/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	GaussNewton/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	GaussNewton/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	HullWhite/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	HullWhite/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	ODESolver/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	ODESolver/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	RungeKutta/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	RungeKutta/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	Vasicek/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	Vasicek/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	cfdistutilities/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	cfdistutilities/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	cuckoo_search/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	cuckoo_search/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	levy-functions/src/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	levy-functions/src/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	nelder_mead/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	nelder_mead/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
NameAndDesc	neuralNet/catch.hpp	/^    NameAndDesc( const char* _name = "", const char* _description= "" )$/;"	f	struct:Catch::NameAndDesc
NameAndDesc	neuralNet/catch.hpp	/^struct NameAndDesc {$/;"	s	namespace:Catch
No	AutoDiff/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	BSImpliedVolatility/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	CharacteristicFunctions/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	CppNumericalSolvers/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	FangOost/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	FunctionalUtilities/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	GaussNewton/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	HullWhite/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	ODESolver/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	RungeKutta/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	Vasicek/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	cfdistutilities/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	cuckoo_search/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	levy-functions/src/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	nelder_mead/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	neuralNet/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
Node	neuralNet/NeuralNetGraph.h	/^    Node(double oij_, double dA_){$/;"	f	struct:Node
Node	neuralNet/NeuralNetGraph.h	/^    Node(int numNodes){$/;"	f	struct:Node
Node	neuralNet/NeuralNetGraph.h	/^    Node(int numNodes, double oij_, double dA_){$/;"	f	struct:Node
Node	neuralNet/NeuralNetGraph.h	/^struct Node {$/;"	s
NonCopyable	AutoDiff/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	AutoDiff/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	BSImpliedVolatility/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	BSImpliedVolatility/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	CharacteristicFunctions/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	CharacteristicFunctions/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	CppNumericalSolvers/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	CppNumericalSolvers/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	FangOost/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	FangOost/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	FunctionalUtilities/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	FunctionalUtilities/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	GaussNewton/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	GaussNewton/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	HullWhite/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	HullWhite/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	ODESolver/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	ODESolver/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	RungeKutta/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	RungeKutta/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	Vasicek/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	Vasicek/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	cfdistutilities/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	cfdistutilities/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	cuckoo_search/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	cuckoo_search/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	levy-functions/src/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	levy-functions/src/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	nelder_mead/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	nelder_mead/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	neuralNet/catch.hpp	/^        NonCopyable() {}$/;"	f	class:Catch::NonCopyable
NonCopyable	neuralNet/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
Normal	AutoDiff/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	BSImpliedVolatility/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	CharacteristicFunctions/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	CppNumericalSolvers/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	FangOost/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	FunctionalUtilities/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	GaussNewton/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	HullWhite/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	ODESolver/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	RungeKutta/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	Vasicek/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	cfdistutilities/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	cuckoo_search/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	levy-functions/src/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	nelder_mead/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	neuralNet/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Not	AutoDiff/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	AutoDiff/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	AutoDiff/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	AutoDiff/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	BSImpliedVolatility/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	BSImpliedVolatility/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	BSImpliedVolatility/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	BSImpliedVolatility/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	CharacteristicFunctions/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	CharacteristicFunctions/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	CharacteristicFunctions/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	CharacteristicFunctions/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	CppNumericalSolvers/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	CppNumericalSolvers/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	CppNumericalSolvers/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	CppNumericalSolvers/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	FangOost/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	FangOost/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	FangOost/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	FangOost/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	FunctionalUtilities/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	FunctionalUtilities/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	FunctionalUtilities/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	FunctionalUtilities/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	GaussNewton/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	GaussNewton/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	GaussNewton/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	GaussNewton/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	HullWhite/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	HullWhite/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	HullWhite/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	HullWhite/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	ODESolver/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	ODESolver/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	ODESolver/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	ODESolver/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	RungeKutta/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	RungeKutta/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	RungeKutta/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	RungeKutta/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	Vasicek/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	Vasicek/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	Vasicek/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	Vasicek/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	cfdistutilities/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	cfdistutilities/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	cfdistutilities/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	cfdistutilities/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	cuckoo_search/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	cuckoo_search/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	cuckoo_search/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	cuckoo_search/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	levy-functions/src/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	levy-functions/src/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	levy-functions/src/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	levy-functions/src/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	nelder_mead/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	nelder_mead/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	nelder_mead/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	nelder_mead/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
Not	neuralNet/catch.hpp	/^            Not( Not const& other ) : m_matcher( other.m_matcher ) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	neuralNet/catch.hpp	/^            explicit Not( Matcher<ExpressionT> const& matcher ) : m_matcher(matcher.clone()) {}$/;"	f	class:Catch::Matchers::Impl::Generic::Not
Not	neuralNet/catch.hpp	/^        class Not : public MatcherImpl<Not<ExpressionT>, ExpressionT> {$/;"	c	namespace:Catch::Matchers::Impl::Generic
Not	neuralNet/catch.hpp	/^    inline Impl::Generic::Not<ExpressionT> Not( Impl::Matcher<ExpressionT> const& m ) {$/;"	f	namespace:Catch::Matchers
NotImplementedException	AutoDiff/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	AutoDiff/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	BSImpliedVolatility/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	BSImpliedVolatility/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	CharacteristicFunctions/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	CharacteristicFunctions/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	CppNumericalSolvers/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	CppNumericalSolvers/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	FangOost/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	FangOost/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	FunctionalUtilities/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	FunctionalUtilities/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	GaussNewton/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	GaussNewton/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	HullWhite/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	HullWhite/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	ODESolver/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	ODESolver/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	RungeKutta/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	RungeKutta/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	Vasicek/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	Vasicek/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	cfdistutilities/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	cfdistutilities/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	cuckoo_search/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	cuckoo_search/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	levy-functions/src/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	levy-functions/src/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	nelder_mead/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	nelder_mead/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
NotImplementedException	neuralNet/catch.hpp	/^        NotImplementedException( NotImplementedException const& ) {}$/;"	f	class:Catch::NotImplementedException
NotImplementedException	neuralNet/catch.hpp	/^    class NotImplementedException : public std::exception$/;"	c	namespace:Catch
OBJVAL	GaussNewton/Newton.h	/^  constexpr int OBJVAL=2;$/;"	m	namespace:newton
OC_TEST_CASE	AutoDiff/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	BSImpliedVolatility/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	CharacteristicFunctions/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	CppNumericalSolvers/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	FangOost/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	FunctionalUtilities/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	GaussNewton/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	HullWhite/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	ODESolver/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	RungeKutta/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	Vasicek/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	cfdistutilities/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	cuckoo_search/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	levy-functions/src/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	nelder_mead/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	neuralNet/catch.hpp	/^#define OC_TEST_CASE(/;"	d
OPTIONCALIBRATION_H	FFTOptionPricing/OptionCalibration.h	/^#define OPTIONCALIBRATION_H$/;"	d
OPTIONPRICING_H	FFTOptionPricing/OptionPricing.h	/^#define OPTIONPRICING_H$/;"	d
OfType	AutoDiff/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	BSImpliedVolatility/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	CharacteristicFunctions/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	CppNumericalSolvers/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	FangOost/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	FunctionalUtilities/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	GaussNewton/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	HullWhite/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	ODESolver/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	RungeKutta/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	Vasicek/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	cfdistutilities/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	cuckoo_search/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	levy-functions/src/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	nelder_mead/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	neuralNet/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
Ok	AutoDiff/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	BSImpliedVolatility/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	CharacteristicFunctions/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	CppNumericalSolvers/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	FangOost/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	FunctionalUtilities/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	GaussNewton/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	HullWhite/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	ODESolver/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	RungeKutta/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	Vasicek/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	cfdistutilities/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	cuckoo_search/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	levy-functions/src/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	nelder_mead/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	neuralNet/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Operator	AutoDiff/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	BSImpliedVolatility/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	CharacteristicFunctions/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	CppNumericalSolvers/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	FangOost/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	FunctionalUtilities/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	GaussNewton/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	HullWhite/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	ODESolver/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	RungeKutta/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	Vasicek/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	cfdistutilities/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	cuckoo_search/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	levy-functions/src/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	nelder_mead/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
Operator	neuralNet/catch.hpp	/^    enum Operator {$/;"	g	namespace:Catch::Internal
OperatorTraits	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	AutoDiff/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FangOost/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	FunctionalUtilities/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	GaussNewton/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	HullWhite/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	ODESolver/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	RungeKutta/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	Vasicek/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cfdistutilities/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	cuckoo_search/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	levy-functions/src/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	nelder_mead/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	s	namespace:Catch::Internal
OperatorTraits	neuralNet/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	s	namespace:Catch::Internal
PARAMPACK	GaussNewton/Newton.h	/^  constexpr int PARAMPACK=0;$/;"	m	namespace:newton
PARAMVAL	GaussNewton/Newton.h	/^  constexpr int PARAMVAL=1;$/;"	m	namespace:newton
PARSE_JSON_LEVY_FNC	levy-functions/src/parse_json.h	/^#define PARSE_JSON_LEVY_FNC$/;"	d
PayerSwaptionWithTree	HullWhite/HullWhite.h	/^  auto PayerSwaptionWithTree($/;"	f	namespace:hullwhite
Payer_Swaption	HullWhite/HullWhite.h	/^  auto Payer_Swaption($/;"	f	namespace:hullwhite
Ptr	AutoDiff/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	AutoDiff/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	AutoDiff/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	AutoDiff/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	BSImpliedVolatility/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	BSImpliedVolatility/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	BSImpliedVolatility/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	BSImpliedVolatility/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	CharacteristicFunctions/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	CharacteristicFunctions/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	CharacteristicFunctions/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	CharacteristicFunctions/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	CppNumericalSolvers/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	CppNumericalSolvers/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	CppNumericalSolvers/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	CppNumericalSolvers/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	FangOost/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	FangOost/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	FangOost/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	FangOost/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	FunctionalUtilities/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	FunctionalUtilities/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	FunctionalUtilities/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	FunctionalUtilities/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	GaussNewton/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	GaussNewton/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	GaussNewton/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	GaussNewton/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	HullWhite/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	HullWhite/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	HullWhite/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	HullWhite/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	ODESolver/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	ODESolver/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	ODESolver/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	ODESolver/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	RungeKutta/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	RungeKutta/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	RungeKutta/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	RungeKutta/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	Vasicek/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	Vasicek/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	Vasicek/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	Vasicek/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	cfdistutilities/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	cfdistutilities/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	cfdistutilities/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	cfdistutilities/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	cuckoo_search/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	cuckoo_search/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	cuckoo_search/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	cuckoo_search/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	levy-functions/src/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	levy-functions/src/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	levy-functions/src/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	levy-functions/src/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	nelder_mead/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	nelder_mead/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	nelder_mead/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	nelder_mead/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
Ptr	neuralNet/catch.hpp	/^        Ptr( Ptr const& other ) : m_p( other.m_p ){$/;"	f	class:Catch::Ptr
Ptr	neuralNet/catch.hpp	/^        Ptr( T* p ) : m_p( p ){$/;"	f	class:Catch::Ptr
Ptr	neuralNet/catch.hpp	/^        Ptr() : m_p( CATCH_NULL ){}$/;"	f	class:Catch::Ptr
Ptr	neuralNet/catch.hpp	/^    class Ptr {$/;"	c	namespace:Catch
RANGE	levy-functions/src/parse_json.h	/^constexpr int RANGE=0;$/;"	v
Real Data	FFTOptionPricing/docs/calibration/OptionCalibration.tex	/^\\section{Real Data}$/;"	s
ReceiverSwaptionWithTree	HullWhite/HullWhite.h	/^  auto ReceiverSwaptionWithTree($/;"	f	namespace:hullwhite
Receiver_Swaption	HullWhite/HullWhite.h	/^  auto Receiver_Swaption($/;"	f	namespace:hullwhite
ResultBuilder	AutoDiff/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	BSImpliedVolatility/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	CharacteristicFunctions/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	CppNumericalSolvers/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	FangOost/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	FunctionalUtilities/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	GaussNewton/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	HullWhite/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	ODESolver/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	RungeKutta/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	Vasicek/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	cfdistutilities/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	cuckoo_search/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	levy-functions/src/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	nelder_mead/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultBuilder	neuralNet/catch.hpp	/^    class ResultBuilder {$/;"	c	namespace:Catch
ResultDisposition	AutoDiff/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	BSImpliedVolatility/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	CharacteristicFunctions/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	CppNumericalSolvers/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	FangOost/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	FunctionalUtilities/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	GaussNewton/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	HullWhite/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	ODESolver/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	RungeKutta/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	Vasicek/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	cfdistutilities/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	cuckoo_search/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	levy-functions/src/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	nelder_mead/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	neuralNet/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultWas	AutoDiff/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	BSImpliedVolatility/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	CharacteristicFunctions/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	CppNumericalSolvers/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	FangOost/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	FunctionalUtilities/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	GaussNewton/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	HullWhite/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	ODESolver/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	RungeKutta/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	Vasicek/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	cfdistutilities/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	cuckoo_search/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	levy-functions/src/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	nelder_mead/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	neuralNet/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
SCENARIO	AutoDiff/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	BSImpliedVolatility/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	CharacteristicFunctions/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	CppNumericalSolvers/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	FangOost/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	FunctionalUtilities/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	GaussNewton/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	HullWhite/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	ODESolver/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	RungeKutta/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	Vasicek/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	cfdistutilities/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	cuckoo_search/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	levy-functions/src/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	nelder_mead/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO	neuralNet/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO_METHOD	AutoDiff/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	BSImpliedVolatility/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	CharacteristicFunctions/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	CppNumericalSolvers/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	FangOost/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	FunctionalUtilities/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	GaussNewton/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	HullWhite/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	ODESolver/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	RungeKutta/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	Vasicek/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	cfdistutilities/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	cuckoo_search/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	levy-functions/src/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	nelder_mead/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SCENARIO_METHOD	neuralNet/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SRC	levy-functions/src/makefile	/^SRC=.\/$/;"	m
SRC	levy-functions/tests/unit/makefile	/^SRC=..\/..\/src$/;"	m
STITCH_CLARA_CLOSE_NAMESPACE	AutoDiff/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	AutoDiff/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	BSImpliedVolatility/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	BSImpliedVolatility/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	CharacteristicFunctions/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	CharacteristicFunctions/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	CppNumericalSolvers/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	CppNumericalSolvers/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	FangOost/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	FangOost/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	FunctionalUtilities/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	FunctionalUtilities/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	GaussNewton/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	GaussNewton/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	HullWhite/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	HullWhite/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	ODESolver/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	ODESolver/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	RungeKutta/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	RungeKutta/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	Vasicek/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	Vasicek/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	cfdistutilities/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	cfdistutilities/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	cuckoo_search/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	cuckoo_search/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	levy-functions/src/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	levy-functions/src/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	nelder_mead/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	nelder_mead/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	neuralNet/catch.hpp	/^#define STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_CLOSE_NAMESPACE	neuralNet/catch.hpp	/^#undef STITCH_CLARA_CLOSE_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	AutoDiff/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	AutoDiff/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	AutoDiff/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	BSImpliedVolatility/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	BSImpliedVolatility/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	BSImpliedVolatility/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	CharacteristicFunctions/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	CharacteristicFunctions/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	CharacteristicFunctions/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	CppNumericalSolvers/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	CppNumericalSolvers/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	CppNumericalSolvers/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	FangOost/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	FangOost/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	FangOost/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	FunctionalUtilities/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	FunctionalUtilities/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	FunctionalUtilities/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	GaussNewton/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	GaussNewton/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	GaussNewton/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	HullWhite/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	HullWhite/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	HullWhite/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	ODESolver/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	ODESolver/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	ODESolver/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	RungeKutta/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	RungeKutta/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	RungeKutta/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	Vasicek/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	Vasicek/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	Vasicek/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	cfdistutilities/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	cfdistutilities/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	cfdistutilities/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	cuckoo_search/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	cuckoo_search/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	cuckoo_search/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	levy-functions/src/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	levy-functions/src/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	levy-functions/src/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	nelder_mead/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	nelder_mead/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	nelder_mead/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	neuralNet/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE /;"	d
STITCH_CLARA_OPEN_NAMESPACE	neuralNet/catch.hpp	/^#define STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_CLARA_OPEN_NAMESPACE	neuralNet/catch.hpp	/^#undef STITCH_CLARA_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	AutoDiff/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	AutoDiff/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	BSImpliedVolatility/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	BSImpliedVolatility/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	CharacteristicFunctions/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	CharacteristicFunctions/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	CppNumericalSolvers/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	CppNumericalSolvers/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	FangOost/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	FangOost/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	FunctionalUtilities/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	FunctionalUtilities/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	GaussNewton/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	GaussNewton/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	HullWhite/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	HullWhite/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	ODESolver/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	ODESolver/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	RungeKutta/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	RungeKutta/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	Vasicek/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	Vasicek/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	cfdistutilities/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	cfdistutilities/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	cuckoo_search/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	cuckoo_search/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	levy-functions/src/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	levy-functions/src/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	nelder_mead/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	nelder_mead/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	neuralNet/catch.hpp	/^#define STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE /;"	d
STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE	neuralNet/catch.hpp	/^#undef STITCH_TBC_TEXT_FORMAT_OPEN_NAMESPACE$/;"	d
SafeBool	AutoDiff/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	BSImpliedVolatility/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	CharacteristicFunctions/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	CppNumericalSolvers/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	FangOost/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	FunctionalUtilities/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	GaussNewton/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	HullWhite/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	ODESolver/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	RungeKutta/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	Vasicek/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	cfdistutilities/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	cuckoo_search/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	levy-functions/src/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	nelder_mead/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SafeBool	neuralNet/catch.hpp	/^    class SafeBool {$/;"	c	namespace:Catch
SharedImpl	AutoDiff/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	AutoDiff/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	BSImpliedVolatility/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	BSImpliedVolatility/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	CharacteristicFunctions/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	CharacteristicFunctions/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	CppNumericalSolvers/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	CppNumericalSolvers/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	FangOost/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	FangOost/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	FunctionalUtilities/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	FunctionalUtilities/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	GaussNewton/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	GaussNewton/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	HullWhite/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	HullWhite/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	ODESolver/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	ODESolver/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	RungeKutta/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	RungeKutta/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	Vasicek/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	Vasicek/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	cfdistutilities/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	cfdistutilities/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	cuckoo_search/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	cuckoo_search/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	levy-functions/src/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	levy-functions/src/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	nelder_mead/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	nelder_mead/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
SharedImpl	neuralNet/catch.hpp	/^        SharedImpl() : m_rc( 0 ){}$/;"	f	struct:Catch::SharedImpl
SharedImpl	neuralNet/catch.hpp	/^    struct SharedImpl : T {$/;"	s	namespace:Catch
Simplex	CppNumericalSolvers/neldermead2.h	/^    std::vector<D> Simplex(const OP& f,                   \/\/target function$/;"	f	namespace:BT
SourceLineInfo	AutoDiff/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	BSImpliedVolatility/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	CharacteristicFunctions/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	CppNumericalSolvers/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	FangOost/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	FunctionalUtilities/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	GaussNewton/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	HullWhite/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	ODESolver/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	RungeKutta/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	Vasicek/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	cfdistutilities/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	cuckoo_search/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	levy-functions/src/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	nelder_mead/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	neuralNet/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
StartsWith	AutoDiff/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	AutoDiff/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	AutoDiff/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	AutoDiff/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	AutoDiff/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	BSImpliedVolatility/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	BSImpliedVolatility/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	BSImpliedVolatility/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	BSImpliedVolatility/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	BSImpliedVolatility/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	CharacteristicFunctions/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	CharacteristicFunctions/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	CharacteristicFunctions/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	CharacteristicFunctions/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	CharacteristicFunctions/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	CppNumericalSolvers/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	CppNumericalSolvers/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	CppNumericalSolvers/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	CppNumericalSolvers/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	CppNumericalSolvers/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	FangOost/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	FangOost/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	FangOost/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	FangOost/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	FangOost/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	FunctionalUtilities/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	FunctionalUtilities/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	FunctionalUtilities/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	FunctionalUtilities/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	FunctionalUtilities/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	GaussNewton/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	GaussNewton/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	GaussNewton/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	GaussNewton/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	GaussNewton/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	HullWhite/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	HullWhite/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	HullWhite/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	HullWhite/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	HullWhite/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	ODESolver/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	ODESolver/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	ODESolver/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	ODESolver/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	ODESolver/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	RungeKutta/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	RungeKutta/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	RungeKutta/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	RungeKutta/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	RungeKutta/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	Vasicek/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	Vasicek/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	Vasicek/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	Vasicek/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	Vasicek/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	cfdistutilities/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	cfdistutilities/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	cfdistutilities/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	cfdistutilities/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	cfdistutilities/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	cuckoo_search/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	cuckoo_search/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	cuckoo_search/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	cuckoo_search/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	cuckoo_search/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	levy-functions/src/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	levy-functions/src/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	levy-functions/src/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	levy-functions/src/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	levy-functions/src/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	nelder_mead/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	nelder_mead/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	nelder_mead/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	nelder_mead/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	nelder_mead/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	neuralNet/catch.hpp	/^            StartsWith( StartsWith const& other ) : m_data( other.m_data ){}$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	neuralNet/catch.hpp	/^            StartsWith( std::string const& substr, CaseSensitive::Choice caseSensitivity = CaseSensitive::Yes )$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
StartsWith	neuralNet/catch.hpp	/^        struct StartsWith : MatcherImpl<StartsWith, std::string> {$/;"	s	namespace:Catch::Matchers::Impl::StdString
StartsWith	neuralNet/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( const char* substr ) {$/;"	f	namespace:Catch::Matchers
StartsWith	neuralNet/catch.hpp	/^    inline Impl::StdString::StartsWith  StartsWith( std::string const& substr ) {$/;"	f	namespace:Catch::Matchers
StdString	AutoDiff/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	BSImpliedVolatility/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	CharacteristicFunctions/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	CppNumericalSolvers/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	FangOost/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	FunctionalUtilities/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	GaussNewton/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	HullWhite/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	ODESolver/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	RungeKutta/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	Vasicek/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	cfdistutilities/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	cuckoo_search/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	levy-functions/src/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	nelder_mead/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StdString	neuralNet/catch.hpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers::Impl
StreamEndStop	AutoDiff/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	BSImpliedVolatility/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	CharacteristicFunctions/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	CppNumericalSolvers/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	FangOost/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	FunctionalUtilities/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	GaussNewton/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	HullWhite/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	ODESolver/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	RungeKutta/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	Vasicek/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	cfdistutilities/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	cuckoo_search/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	levy-functions/src/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	nelder_mead/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	neuralNet/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StringMaker	AutoDiff/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	AutoDiff/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	AutoDiff/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	BSImpliedVolatility/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	BSImpliedVolatility/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	BSImpliedVolatility/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	CharacteristicFunctions/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	CharacteristicFunctions/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	CharacteristicFunctions/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	CppNumericalSolvers/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	CppNumericalSolvers/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	CppNumericalSolvers/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	FangOost/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	FangOost/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	FangOost/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	FunctionalUtilities/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	FunctionalUtilities/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	FunctionalUtilities/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	GaussNewton/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	GaussNewton/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	GaussNewton/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	HullWhite/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	HullWhite/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	HullWhite/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	ODESolver/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	ODESolver/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	ODESolver/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	RungeKutta/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	RungeKutta/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	RungeKutta/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	Vasicek/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	Vasicek/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	Vasicek/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	cfdistutilities/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	cfdistutilities/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	cfdistutilities/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	cuckoo_search/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	cuckoo_search/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	cuckoo_search/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	levy-functions/src/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	levy-functions/src/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	levy-functions/src/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	nelder_mead/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	nelder_mead/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	nelder_mead/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	neuralNet/catch.hpp	/^struct StringMaker :$/;"	s	namespace:Catch
StringMaker	neuralNet/catch.hpp	/^struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	neuralNet/catch.hpp	/^struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMakerBase	AutoDiff/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	AutoDiff/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	BSImpliedVolatility/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	BSImpliedVolatility/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	CharacteristicFunctions/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	CharacteristicFunctions/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	CppNumericalSolvers/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	CppNumericalSolvers/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	FangOost/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	FangOost/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	FunctionalUtilities/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	FunctionalUtilities/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	GaussNewton/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	GaussNewton/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	HullWhite/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	HullWhite/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	ODESolver/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	ODESolver/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	RungeKutta/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	RungeKutta/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	Vasicek/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	Vasicek/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	cfdistutilities/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	cfdistutilities/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	cuckoo_search/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	cuckoo_search/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	levy-functions/src/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	levy-functions/src/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	nelder_mead/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	nelder_mead/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
StringMakerBase	neuralNet/catch.hpp	/^    struct StringMakerBase {$/;"	s	namespace:Catch::Detail
StringMakerBase	neuralNet/catch.hpp	/^    struct StringMakerBase<true> {$/;"	s	namespace:Catch::Detail
SuppressFail	AutoDiff/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	BSImpliedVolatility/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	CharacteristicFunctions/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	CppNumericalSolvers/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	FangOost/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	FunctionalUtilities/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	GaussNewton/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	HullWhite/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	ODESolver/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	RungeKutta/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	Vasicek/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	cfdistutilities/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	cuckoo_search/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	levy-functions/src/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	nelder_mead/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	neuralNet/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
Swap_Price	HullWhite/HullWhite.h	/^  auto Swap_Price( $/;"	f	namespace:hullwhite
Swap_Rate	HullWhite/HullWhite.h	/^  auto Swap_Rate($/;"	f	namespace:hullwhite
TBC_TEXT_FORMAT_CONSOLE_WIDTH	AutoDiff/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	BSImpliedVolatility/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	CharacteristicFunctions/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	CppNumericalSolvers/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	FangOost/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	FunctionalUtilities/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	GaussNewton/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	HullWhite/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	ODESolver/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	RungeKutta/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	Vasicek/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	cfdistutilities/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	cuckoo_search/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	levy-functions/src/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	nelder_mead/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_CONSOLE_WIDTH	neuralNet/catch.hpp	/^#define TBC_TEXT_FORMAT_CONSOLE_WIDTH /;"	d
TBC_TEXT_FORMAT_H_INCLUDED	AutoDiff/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	FangOost/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	GaussNewton/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	HullWhite/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	ODESolver/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	RungeKutta/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	Vasicek/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	nelder_mead/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
TBC_TEXT_FORMAT_H_INCLUDED	neuralNet/catch.hpp	/^#define TBC_TEXT_FORMAT_H_INCLUDED$/;"	d
THEN	AutoDiff/catch.hpp	/^#define THEN(/;"	d
THEN	BSImpliedVolatility/catch.hpp	/^#define THEN(/;"	d
THEN	CharacteristicFunctions/catch.hpp	/^#define THEN(/;"	d
THEN	CppNumericalSolvers/catch.hpp	/^#define THEN(/;"	d
THEN	FangOost/catch.hpp	/^#define THEN(/;"	d
THEN	FunctionalUtilities/catch.hpp	/^#define THEN(/;"	d
THEN	GaussNewton/catch.hpp	/^#define THEN(/;"	d
THEN	HullWhite/catch.hpp	/^#define THEN(/;"	d
THEN	ODESolver/catch.hpp	/^#define THEN(/;"	d
THEN	RungeKutta/catch.hpp	/^#define THEN(/;"	d
THEN	Vasicek/catch.hpp	/^#define THEN(/;"	d
THEN	cfdistutilities/catch.hpp	/^#define THEN(/;"	d
THEN	cuckoo_search/catch.hpp	/^#define THEN(/;"	d
THEN	levy-functions/src/catch.hpp	/^#define THEN(/;"	d
THEN	nelder_mead/catch.hpp	/^#define THEN(/;"	d
THEN	neuralNet/catch.hpp	/^#define THEN(/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_CONTEXT_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_EVALUATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_EXPRESSION_LHS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_LEGACY_REPORTER_ADAPTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_LIST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_NOTIMPLEMENTED_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_PTR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REGISTRY_HUB_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_MULTI_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_BUILDER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAMBUF_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CLARA_COMPILERS_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CLARA_H_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	AutoDiff/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	BSImpliedVolatility/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	CharacteristicFunctions/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	CppNumericalSolvers/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	FangOost/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	FunctionalUtilities/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	GaussNewton/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	HullWhite/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	ODESolver/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	RungeKutta/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	Vasicek/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	cfdistutilities/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	cuckoo_search/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	levy-functions/src/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	nelder_mead/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	neuralNet/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	AutoDiff/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	BSImpliedVolatility/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	CharacteristicFunctions/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	CppNumericalSolvers/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	FangOost/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	FunctionalUtilities/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	GaussNewton/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	HullWhite/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	ODESolver/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	RungeKutta/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	Vasicek/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	cfdistutilities/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	cuckoo_search/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	levy-functions/src/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	nelder_mead/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED	neuralNet/catch.hpp	/^#   define TWOBLUECUBES_TEXT_FORMAT_H_ALREADY_INCLUDED$/;"	d
T_Forward_Bond_Volatility	HullWhite/HullWhite.h	/^  auto T_Forward_Bond_Volatility( \/*This is the volatility of a forward bond B(t, TM)\/(B(t, T)), TM>T and can be used for zero coupon bond pricing using BS formula.  TM may equal T+delta, but must be manually added before calling this function*\/$/;"	f	namespace:hullwhite
TestFailureException	AutoDiff/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	BSImpliedVolatility/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	CharacteristicFunctions/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	CppNumericalSolvers/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	FangOost/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	FunctionalUtilities/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	GaussNewton/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	HullWhite/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	ODESolver/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	RungeKutta/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	Vasicek/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	cfdistutilities/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	cuckoo_search/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	levy-functions/src/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	nelder_mead/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	neuralNet/catch.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFunction	AutoDiff/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	BSImpliedVolatility/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	CharacteristicFunctions/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	CppNumericalSolvers/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	FangOost/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	FunctionalUtilities/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	GaussNewton/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	HullWhite/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	ODESolver/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	RungeKutta/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	Vasicek/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	cfdistutilities/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	cuckoo_search/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	levy-functions/src/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	nelder_mead/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
TestFunction	neuralNet/catch.hpp	/^typedef void(*TestFunction)();$/;"	t	namespace:Catch
ThrewException	AutoDiff/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	BSImpliedVolatility/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	CharacteristicFunctions/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	CppNumericalSolvers/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	FangOost/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	FunctionalUtilities/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	GaussNewton/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	HullWhite/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	ODESolver/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	RungeKutta/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	Vasicek/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	cfdistutilities/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	cuckoo_search/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	levy-functions/src/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	nelder_mead/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	neuralNet/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
TrueType	AutoDiff/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	BSImpliedVolatility/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	CharacteristicFunctions/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	CppNumericalSolvers/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	FangOost/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	FunctionalUtilities/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	GaussNewton/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	HullWhite/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	ODESolver/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	RungeKutta/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	Vasicek/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	cfdistutilities/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	cuckoo_search/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	levy-functions/src/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	nelder_mead/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TrueType	neuralNet/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	s	namespace:Catch::Detail
TupleDetail	AutoDiff/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	BSImpliedVolatility/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	CharacteristicFunctions/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	CppNumericalSolvers/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	FangOost/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	FunctionalUtilities/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	GaussNewton/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	HullWhite/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	ODESolver/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	RungeKutta/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	Vasicek/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	cfdistutilities/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	cuckoo_search/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	levy-functions/src/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	nelder_mead/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
TupleDetail	neuralNet/catch.hpp	/^namespace TupleDetail {$/;"	n	namespace:Catch
UNAME_S	BSImpliedVolatility/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	CharacteristicFunctions/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	FFTOptionPricing/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	FangOost/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	FunctionalUtilities/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	HullWhite/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	InverseTau/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	ODESolver/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	cfdistutilities/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	levy-functions/src/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	levy-functions/tests/unit/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	neuralNet/makefile	/^UNAME_S := $(shell uname -s)$/;"	m
Unknown	AutoDiff/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	BSImpliedVolatility/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	CharacteristicFunctions/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	CppNumericalSolvers/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	FangOost/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	FunctionalUtilities/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	GaussNewton/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	HullWhite/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	ODESolver/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	RungeKutta/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	Vasicek/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	cfdistutilities/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	cuckoo_search/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	levy-functions/src/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	nelder_mead/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	neuralNet/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
VAR	cfdistutilities/CFDistUtilities.h	/^    constexpr int VAR=1;$/;"	m	namespace:cfdistutilities
VaR	levy-functions/src/calculator.cpp	/^constexpr int VaR=18;$/;"	v
VkCDF	FangOost/test.cpp	/^auto VkCDF(const Number& x, const Number& u, const Number& a, const Number& b, const Index& k){$/;"	f
VkCDF	cfdistutilities/CFDistUtilities.h	/^    auto VkCDF(const Number& u, const X& x, const Number& a, const Number& b, const Index& k){$/;"	f	namespace:cfdistutilities
VkE	cfdistutilities/CFDistUtilities.h	/^    auto VkE(const Number& u, const Number& x, const Number& a, const Number& b, const Index& k){$/;"	f	namespace:cfdistutilities
WHEN	AutoDiff/catch.hpp	/^#define WHEN(/;"	d
WHEN	BSImpliedVolatility/catch.hpp	/^#define WHEN(/;"	d
WHEN	CharacteristicFunctions/catch.hpp	/^#define WHEN(/;"	d
WHEN	CppNumericalSolvers/catch.hpp	/^#define WHEN(/;"	d
WHEN	FangOost/catch.hpp	/^#define WHEN(/;"	d
WHEN	FunctionalUtilities/catch.hpp	/^#define WHEN(/;"	d
WHEN	GaussNewton/catch.hpp	/^#define WHEN(/;"	d
WHEN	HullWhite/catch.hpp	/^#define WHEN(/;"	d
WHEN	ODESolver/catch.hpp	/^#define WHEN(/;"	d
WHEN	RungeKutta/catch.hpp	/^#define WHEN(/;"	d
WHEN	Vasicek/catch.hpp	/^#define WHEN(/;"	d
WHEN	cfdistutilities/catch.hpp	/^#define WHEN(/;"	d
WHEN	cuckoo_search/catch.hpp	/^#define WHEN(/;"	d
WHEN	levy-functions/src/catch.hpp	/^#define WHEN(/;"	d
WHEN	nelder_mead/catch.hpp	/^#define WHEN(/;"	d
WHEN	neuralNet/catch.hpp	/^#define WHEN(/;"	d
Warning	AutoDiff/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	BSImpliedVolatility/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	CharacteristicFunctions/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	CppNumericalSolvers/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	FangOost/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	FunctionalUtilities/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	GaussNewton/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	HullWhite/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	ODESolver/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	RungeKutta/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	Vasicek/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	cfdistutilities/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	cuckoo_search/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	levy-functions/src/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	nelder_mead/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	neuralNet/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Yes	AutoDiff/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	BSImpliedVolatility/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	CharacteristicFunctions/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	CppNumericalSolvers/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	FangOost/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	FunctionalUtilities/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	GaussNewton/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	HullWhite/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	ODESolver/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	RungeKutta/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	Vasicek/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	cfdistutilities/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	cuckoo_search/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	levy-functions/src/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	nelder_mead/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	neuralNet/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
_USE_MATH_DEFINES	FFTOptionPricing/fft.h	/^#define _USE_MATH_DEFINES$/;"	d
_USE_MATH_DEFINES	FangOost/FangOost.h	/^#define _USE_MATH_DEFINES$/;"	d
_USE_MATH_DEFINES	InverseTau/main.cpp	/^#define _USE_MATH_DEFINES$/;"	d	file:
_USE_MATH_DEFINES	opsRisk/main.cpp	/^#define _USE_MATH_DEFINES$/;"	d	file:
__BLACKSCHOLES_AUTODIFFONLY_H_INCLUDED__	AutoDiff/BlackScholesAutoDiff.h	/^#define __BLACKSCHOLES_AUTODIFFONLY_H_INCLUDED__$/;"	d
__BLACKSCHOLES_H_INCLUDED__	HullWhite/BlackScholes.h	/^#define __BLACKSCHOLES_H_INCLUDED__$/;"	d
__BSIMPLIEDVOLATILITY_H_INCLUDED__	BSImpliedVolatility/BSImpliedVolatility.h	/^#define __BSIMPLIEDVOLATILITY_H_INCLUDED__$/;"	d
__CFDISTUTILITIES_H_INCLUDED__	cfdistutilities/CFDistUtilities.h	/^#define __CFDISTUTILITIES_H_INCLUDED__$/;"	d
__CHARACTERISTICFUNCTIONS_H_INCLUDED__	CharacteristicFunctions/CharacteristicFunctions.h	/^#define __CHARACTERISTICFUNCTIONS_H_INCLUDED__$/;"	d
__CUCKOO__H__	cuckoo_search/cuckoo.h	/^#define __CUCKOO__H__$/;"	d
__FFT_H_INCLUDED__	FFTOptionPricing/fft.h	/^#define __FFT_H_INCLUDED__$/;"	d
__FIREFLY_H__	cuckoo_search/firefly.h	/^#define __FIREFLY_H__$/;"	d
__HULLWHITE_H_INCLUDED__	HullWhite/HullWhite.h	/^#define __HULLWHITE_H_INCLUDED__$/;"	d
__IS_VECTOR	RungeKutta/RungeKutta.h	/^#define __IS_VECTOR$/;"	d
__MONOTONE_SPLINE_H_INCLUDED__	FFTOptionPricing/monotone_spline.h	/^#define __MONOTONE_SPLINE_H_INCLUDED__$/;"	d
__NEWTON_H_INCLUDED__	GaussNewton/Newton.h	/^#define __NEWTON_H_INCLUDED__$/;"	d
__ODE_H_INCLUDED__	ODESolver/ODESolver.h	/^#define __ODE_H_INCLUDED__$/;"	d
__RUNGEKUTTA_H_INCLUDED__	RungeKutta/RungeKutta.h	/^#define __RUNGEKUTTA_H_INCLUDED__$/;"	d
__SWARM_UTILS__	cuckoo_search/utils.h	/^#define __SWARM_UTILS__$/;"	d
__VASICEK_H_INCLUDED	Vasicek/Vasicek.h	/^#define __VASICEK_H_INCLUDED /;"	d
abs	AutoDiff/AutoDiff.h	/^auto abs(const AutoDiff<W> &val){$/;"	f
add	AutoDiff/AutoDiff.h	/^        auto add(const AutoDiff<W> &val) const{$/;"	f	class:AutoDiff
add	AutoDiff/AutoDiff.h	/^        auto add(const W& val) const{$/;"	f	class:AutoDiff
add	AutoDiff/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	AutoDiff/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	BSImpliedVolatility/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	BSImpliedVolatility/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	CharacteristicFunctions/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	CharacteristicFunctions/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	CppNumericalSolvers/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	CppNumericalSolvers/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	FangOost/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	FangOost/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	FunctionalUtilities/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	FunctionalUtilities/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	GaussNewton/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	GaussNewton/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	HullWhite/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	HullWhite/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	ODESolver/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	ODESolver/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	RungeKutta/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	RungeKutta/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	Vasicek/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	Vasicek/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	cfdistutilities/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	cfdistutilities/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	cuckoo_search/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	cuckoo_search/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	levy-functions/src/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	levy-functions/src/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	nelder_mead/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	nelder_mead/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
add	neuralNet/catch.hpp	/^            AllOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
add	neuralNet/catch.hpp	/^            AnyOf& add( Matcher<ExpressionT> const& matcher ) {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
addRef	AutoDiff/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	BSImpliedVolatility/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	CharacteristicFunctions/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	CppNumericalSolvers/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	FangOost/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	FunctionalUtilities/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	GaussNewton/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	HullWhite/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	ODESolver/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	RungeKutta/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	Vasicek/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	cfdistutilities/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	cuckoo_search/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	levy-functions/src/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	nelder_mead/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
addRef	neuralNet/catch.hpp	/^        virtual void addRef() const {$/;"	f	struct:Catch::SharedImpl
adjustString	AutoDiff/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	BSImpliedVolatility/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	CharacteristicFunctions/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	CppNumericalSolvers/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	FangOost/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	FunctionalUtilities/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	GaussNewton/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	HullWhite/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	ODESolver/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	RungeKutta/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	Vasicek/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	cfdistutilities/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	cuckoo_search/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	levy-functions/src/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	nelder_mead/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
adjustString	neuralNet/catch.hpp	/^            std::string adjustString( std::string const& str ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
alwaysFalse	AutoDiff/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	BSImpliedVolatility/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	CharacteristicFunctions/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	CppNumericalSolvers/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	FangOost/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	FunctionalUtilities/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	GaussNewton/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	HullWhite/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	ODESolver/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	RungeKutta/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	Vasicek/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	cfdistutilities/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	cuckoo_search/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	levy-functions/src/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	nelder_mead/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysFalse	neuralNet/catch.hpp	/^    inline bool alwaysFalse() { return false; }$/;"	f	namespace:Catch
alwaysTrue	AutoDiff/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	BSImpliedVolatility/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	CharacteristicFunctions/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	CppNumericalSolvers/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	FangOost/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	FunctionalUtilities/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	GaussNewton/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	HullWhite/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	ODESolver/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	RungeKutta/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	Vasicek/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	cfdistutilities/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	cuckoo_search/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	levy-functions/src/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	nelder_mead/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
alwaysTrue	neuralNet/catch.hpp	/^    inline bool alwaysTrue() { return true; }$/;"	f	namespace:Catch
applyEvaluator	AutoDiff/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	BSImpliedVolatility/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	CharacteristicFunctions/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	CppNumericalSolvers/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	FangOost/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	FunctionalUtilities/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	GaussNewton/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	HullWhite/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	ODESolver/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	RungeKutta/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	Vasicek/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	cfdistutilities/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	cuckoo_search/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	levy-functions/src/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	nelder_mead/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
applyEvaluator	neuralNet/catch.hpp	/^    bool applyEvaluator( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
arcSafeRelease	AutoDiff/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	AutoDiff/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	BSImpliedVolatility/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	BSImpliedVolatility/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	CharacteristicFunctions/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	CharacteristicFunctions/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	CppNumericalSolvers/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	CppNumericalSolvers/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	FangOost/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	FangOost/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	FunctionalUtilities/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	FunctionalUtilities/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	GaussNewton/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	GaussNewton/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	HullWhite/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	HullWhite/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	ODESolver/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	ODESolver/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	RungeKutta/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	RungeKutta/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	Vasicek/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	Vasicek/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	cfdistutilities/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	cfdistutilities/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	cuckoo_search/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	cuckoo_search/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	levy-functions/src/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	levy-functions/src/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	nelder_mead/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	nelder_mead/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
arcSafeRelease	neuralNet/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f
arcSafeRelease	neuralNet/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f
augCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto augCF(const Number& alpha, const Number& mu, const Number& beta, const Number& c){$/;"	f	namespace:chfunctions
autodiffonly	AutoDiff/BlackScholesAutoDiff.h	/^namespace autodiffonly{$/;"	n
back_prop	neuralNet/NeuralNetGraph.h	/^    auto back_prop(std::vector<std::vector<Node*> >&& holdNodes, const double& y, const Fn& costFunctionDeriv){$/;"	f	namespace:nngraph
beta	cuckoo_search/firefly.h	/^    constexpr double beta=1;$/;"	m	namespace:firefly
between_values	levy-functions/src/parse_json.h	/^T between_values(const T& val, const T& lower, const T& upper){$/;"	f
bisect	GaussNewton/Newton.h	/^  auto bisect(OBJFUNC&& objective, double begin, double end, double precision1, double precision2){$/;"	f	namespace:newton
calibrateChoice	levy-functions/src/calibrator.cpp	/^constexpr int calibrateChoice=1;$/;"	v
capturedExpression	AutoDiff/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	BSImpliedVolatility/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	CharacteristicFunctions/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	CppNumericalSolvers/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	FangOost/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	FunctionalUtilities/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	GaussNewton/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	HullWhite/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	ODESolver/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	RungeKutta/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	Vasicek/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	cfdistutilities/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	cuckoo_search/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	levy-functions/src/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	nelder_mead/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	neuralNet/catch.hpp	/^        std::string capturedExpression;$/;"	m	struct:Catch::AssertionInfo
carr_madan_call	levy-functions/src/calculator.cpp	/^void carr_madan_call(const CF& cf, int numU,  double S0, double r, double T){$/;"	f
carr_madan_put	levy-functions/src/calculator.cpp	/^void carr_madan_put(const CF& cf, int numU,  double S0, double r, double T){$/;"	f
carrmadancall	levy-functions/src/calculator.cpp	/^constexpr int carrmadancall=1;$/;"	v
carrmadanput	levy-functions/src/calculator.cpp	/^constexpr int carrmadanput=0;$/;"	v
cf	cfdistutilities/test.cpp	/^auto cf($/;"	f
cf	levy-functions/src/get_cf.h	/^auto cf($/;"	f
cfLogBase	cfdistutilities/test.cpp	/^auto cfLogBase($/;"	f
cfLogBase	levy-functions/src/get_cf.h	/^auto cfLogBase($/;"	f
cfLogGeneric	FFTOptionPricing/generateCharts.cpp	/^auto cfLogGeneric($/;"	f
cfdistutilities	cfdistutilities/CFDistUtilities.h	/^namespace cfdistutilities {$/;"	n
cgmyLogCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto cgmyLogCF(const U& u, const Number& C, const Number& G, const Number& M, const Number& Y){$/;"	f	namespace:chfunctions
cgmyLogRNCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto cgmyLogRNCF(const std::complex<T>& u, const Number& C, const Number& G, const Number& M, const Number& Y, const Number& r,  const Number& sigma){$/;"	f	namespace:chfunctions
checkPrecision	GaussNewton/Newton.h	/^  auto checkPrecision(const OptObj& optObj, const T& precision1, const T& precision2){$/;"	f	namespace:newton
chfunctions	CharacteristicFunctions/CharacteristicFunctions.h	/^namespace chfunctions { $/;"	n
chiK	FFTOptionPricing/OptionPricing.h	/^    auto chiK(const A& a, const B& b, const C& c, const D& d, const U& u){$/;"	f	namespace:optionprice
cirLogMGF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto cirLogMGF(const Psi& psi,  const A& a, const Kappa& kappa, const Sigma& sigma,const T& t, const V& v0){$/;"	f	namespace:chfunctions
cirMGF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto cirMGF(const Psi& psi,  const A& a, const Kappa& kappa, const Sigma& sigma,const T& t, const V& v0){$/;"	f	namespace:chfunctions
cleanup	neuralNet/NeuralNetGraph.h	/^    void cleanup(std::vector<std::vector<Node*> >& holdNodes){$/;"	f	namespace:nngraph
clone	AutoDiff/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	BSImpliedVolatility/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	CharacteristicFunctions/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	CppNumericalSolvers/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	FangOost/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	FunctionalUtilities/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	GaussNewton/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	HullWhite/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	ODESolver/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	RungeKutta/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	Vasicek/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	cfdistutilities/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	cuckoo_search/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	levy-functions/src/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	nelder_mead/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
clone	neuralNet/catch.hpp	/^        virtual Ptr<Matcher<ExpressionT> > clone() const {$/;"	f	struct:Catch::Matchers::Impl::MatcherImpl
cloneAndCheckout	FFTOptionPricing/package.sh	/^function cloneAndCheckout {$/;"	f
cloneAndCheckout	levy-functions/compileAndPackage.sh	/^function cloneAndCheckout {$/;"	f
cmp	FFTOptionPricing/OptionCalibration.h	/^    constexpr auto cmp=std::complex<double>(0, 1);$/;"	m	namespace:optioncal
cmp	FFTOptionPricing/fft.hpp	/^constexpr auto cmp=std::complex<double>(1.0, 0.0);$/;"	v
cmpi	FFTOptionPricing/fft.hpp	/^constexpr auto cmpi=std::complex<double>(0.0, 1.0);$/;"	v
compare	AutoDiff/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	AutoDiff/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FangOost/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	FunctionalUtilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	GaussNewton/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	HullWhite/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	ODESolver/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	RungeKutta/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	Vasicek/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cfdistutilities/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	cuckoo_search/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	levy-functions/src/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	nelder_mead/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    bool compare( T1 const& lhs, T2 const& rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op, typename T> bool compare( T* lhs, std::nullptr_t ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op, typename T> bool compare( int lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op, typename T> bool compare( long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op, typename T> bool compare( long long lhs, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op, typename T> bool compare( std::nullptr_t, T* rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( int lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned char rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned int rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( long long lhs, unsigned long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned char lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned int lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, char rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, int rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long long rhs ) {$/;"	f	namespace:Catch::Internal
compare	neuralNet/catch.hpp	/^    template<Operator Op> bool compare( unsigned long long lhs, long rhs ) {$/;"	f	namespace:Catch::Internal
computeB	opsRisk/main.cpp	/^auto computeB(double rho){$/;"	f
computeCDF	cfdistutilities/CFDistUtilities.h	/^    auto computeCDF(const Index& numXDiscrete, const Index& numU, const Number& xMin, const Number& xMax, CF&& cf){$/;"	f	namespace:cfdistutilities
computeCDF	cfdistutilities/CFDistUtilities.h	/^    auto computeCDF(const Index& numXDiscrete, const Number& xMin, const Number& xMax, CFDiscrete&& discreteCF){$/;"	f	namespace:cfdistutilities
computeCDFAtPoint	cfdistutilities/CFDistUtilities.h	/^    auto computeCDFAtPoint(const Number& xValue, const Number& xMin, const Number&xMax, CFDiscrete&& cfDiscrete){$/;"	f	namespace:cfdistutilities
computeCDFAtPoint	cfdistutilities/CFDistUtilities.h	/^    auto computeCDFAtPoint(const Number& xValue,const Index& numU, const Number& xMin, const Number&xMax, CF&& cf){$/;"	f	namespace:cfdistutilities
computeCP	FangOost/FangOost.h	/^    auto computeCP(const Number& du){$/;"	f	namespace:fangoost
computeConvolution	FangOost/FangOost.h	/^    auto computeConvolution(const Index& xDiscrete, const Number& xMin, const Number& xMax, CFArray&& discreteCF, VK&& vK){ \/\/vk as defined in fang oosterlee$/;"	f	namespace:fangoost
computeConvolutionAtPoint	FangOost/FangOost.h	/^    auto computeConvolutionAtPoint(const X& xValue, const Number& xMin, const Number& xMax, CFArray&& discreteCF, VK&& vK){ \/\/vk as defined in fang oosterlee$/;"	f	namespace:fangoost
computeConvolutionAtPointLevy	FangOost/FangOost.h	/^    auto computeConvolutionAtPointLevy(const X& xValue, const Number& xMin, const Number& xMax, CFArray&& discreteCF, VK&& vK){ \/\/vk as defined in fang oosterlee$/;"	f	namespace:fangoost
computeConvolutionLevy	FangOost/FangOost.h	/^    auto computeConvolutionLevy(const Index& xDiscrete, const Number& xMin, const Number& xMax, CFArray&& discreteCF, VK&& vK){ \/\/vk as defined in fang oosterlee$/;"	f	namespace:fangoost
computeConvolutionVector	FangOost/FangOost.h	/^    auto computeConvolutionVector(Array&& xValues, CFArray&& discreteCF, VK&& vK){ \/\/vk as defined in fang oosterlee$/;"	f	namespace:fangoost
computeConvolutionVectorLevy	FangOost/FangOost.h	/^    auto computeConvolutionVectorLevy(Array&& xValues, CFArray&& discreteCF, VK&& vK){ \/\/vk as defined in fang oosterlee$/;"	f	namespace:fangoost
computeConvolutionVectorLevy	FangOost/FangOost.h	/^    auto computeConvolutionVectorLevy(Array&& xValues, CFArray&& discreteCF, VK&& vK, ExtraFn&& extraFn){ \/\/vk as defined in fang oosterlee$/;"	f	namespace:fangoost
computeDU	FangOost/FangOost.h	/^    auto computeDU(const Number& xMin,const Number& xMax){$/;"	f	namespace:fangoost
computeDX	FangOost/FangOost.h	/^    auto computeDX(const Index& xDiscrete, const Number& xMin,const Number& xMax){$/;"	f	namespace:fangoost
computeDelta	opsRisk/main.cpp	/^auto computeDelta(double rho, double muStable, double lambda){$/;"	f
computeDiscreteCF	FangOost/FangOost.h	/^    auto computeDiscreteCF(const Number& xMin, const Number& xMax, const Index& uDiscrete, CF&& fnInv){$/;"	f	namespace:fangoost
computeDiscreteCFReal	FangOost/FangOost.h	/^    auto computeDiscreteCFReal(const Number& xMin, const Number& xMax, const Index& uDiscrete, CF&& fnInv){$/;"	f	namespace:fangoost
computeEL	cfdistutilities/CFDistUtilities.h	/^    auto computeEL(const Number& xMin, const Number& xMax, const Index& numU, CF&& cf){$/;"	f	namespace:cfdistutilities
computeELDiscrete	cfdistutilities/CFDistUtilities.h	/^    auto computeELDiscrete(const Number& xMin, const Number& xMax, CFDiscrete&& cf){$/;"	f	namespace:cfdistutilities
computeES	cfdistutilities/CFDistUtilities.h	/^    auto computeES(const Number& alpha, const Number& prec, const Number& xMin, const Number& xMax, const Index& numU, CF&& cf){$/;"	f	namespace:cfdistutilities
computeESDiscrete	cfdistutilities/CFDistUtilities.h	/^    auto computeESDiscrete(const Number& alpha, const Number& prec, const Number& xMin, const Number& xMax, CFDiscrete&& cf){$/;"	f	namespace:cfdistutilities
computeExpectation	FangOost/FangOost.h	/^    auto computeExpectation($/;"	f	namespace:fangoost
computeExpectation	Vasicek/Vasicek.h	/^    auto computeExpectation(const Array& y0, const Array& alpha, const Array& beta, const Index& sizeOfY0, const Tau& tau){$/;"	f	namespace:vasicek
computeExpectation	Vasicek/Vasicek.h	/^    auto computeExpectation(const Array& y0, const Array& alpha, const Array& beta, const Index& sizeOfY0, const Tau& tau, const GetElement& getElement){$/;"	f	namespace:vasicek
computeExpectationDiscrete	FangOost/FangOost.h	/^    auto computeExpectationDiscrete($/;"	f	namespace:fangoost
computeExpectationLevy	FangOost/FangOost.h	/^    auto computeExpectationLevy($/;"	f	namespace:fangoost
computeExpectationLevyDiscrete	FangOost/FangOost.h	/^    auto computeExpectationLevyDiscrete($/;"	f	namespace:fangoost
computeExpectationLongRunOne	Vasicek/Vasicek.h	/^    auto computeExpectationLongRunOne(const Array& y0, const Array& alpha, const Index& sizeOfY0, const Tau& tau, const GetElement& getElement){$/;"	f	namespace:vasicek
computeExpectationLongRunOne	Vasicek/Vasicek.h	/^    auto computeExpectationLongRunOne(const Array& y0, const Array& alpha, const Tau& tau){$/;"	f	namespace:vasicek
computeExpectationPoint	FangOost/FangOost.h	/^    auto computeExpectationPoint($/;"	f	namespace:fangoost
computeExpectationPointDiscrete	FangOost/FangOost.h	/^    auto computeExpectationPointDiscrete($/;"	f	namespace:fangoost
computeExpectationPointLevy	FangOost/FangOost.h	/^    auto computeExpectationPointLevy($/;"	f	namespace:fangoost
computeExpectationPointLevyDiscrete	FangOost/FangOost.h	/^    auto computeExpectationPointLevyDiscrete($/;"	f	namespace:fangoost
computeExpectationVector	FangOost/FangOost.h	/^    auto computeExpectationVector($/;"	f	namespace:fangoost
computeExpectationVectorDiscrete	FangOost/FangOost.h	/^    auto computeExpectationVectorDiscrete($/;"	f	namespace:fangoost
computeExpectationVectorLevy	FangOost/FangOost.h	/^    auto computeExpectationVectorLevy($/;"	f	namespace:fangoost
computeExpectationVectorLevyDiscrete	FangOost/FangOost.h	/^    auto computeExpectationVectorLevyDiscrete($/;"	f	namespace:fangoost
computeFunctional	RungeKutta/RungeKutta.h	/^	Number computeFunctional(const Number1& t, const Index& numSteps,  const Number& initialValues, FN&& fn){$/;"	f	namespace:rungekutta
computeFunctional	RungeKutta/RungeKutta.h	/^	Number computeFunctional(const Number1& t, const Index& numSteps,  const Number& initialValues, FN&& fn, std::false_type){$/;"	f	namespace:rungekutta
computeFunctional	RungeKutta/RungeKutta.h	/^	std::vector<Number> computeFunctional(const Number1& t, const Index& numSteps, const std::vector<Number>& initialValues, FN&& fn, std::true_type){$/;"	f	namespace:rungekutta
computeFunctional_move	RungeKutta/RungeKutta.h	/^	Number computeFunctional_move(const Number1& t, const Index& numSteps,  Number&& initialValues, FN&& fn){$/;"	f	namespace:rungekutta
computeFunctional_move	RungeKutta/RungeKutta.h	/^	Number computeFunctional_move(const Number1& t, const Index& numSteps,  Number&& initialValues, FN&& fn, std::false_type){$/;"	f	namespace:rungekutta
computeFunctional_move	RungeKutta/RungeKutta.h	/^	std::vector<Number> computeFunctional_move(const Number1& t, const Index& numSteps, std::vector<Number>&& initialValues, FN&& fn, std::true_type){$/;"	f	namespace:rungekutta
computeIntegralExpectation	Vasicek/Vasicek.h	/^    auto computeIntegralExpectation(const Array& y0, const Array& alpha, const Array& beta, const Index& sizeOfY0, const Tau& tau){$/;"	f	namespace:vasicek
computeIntegralExpectation	Vasicek/Vasicek.h	/^    auto computeIntegralExpectation(const Array& y0, const Array& alpha, const Array& beta, const Index& sizeOfY0, const Tau& tau, const GetElement& getElement){$/;"	f	namespace:vasicek
computeIntegralExpectationLongRunOne	Vasicek/Vasicek.h	/^    auto computeIntegralExpectationLongRunOne(const Array& y0, const Array& alpha, const Index& sizeOfY0, const Tau& tau){$/;"	f	namespace:vasicek
computeIntegralExpectationLongRunOne	Vasicek/Vasicek.h	/^    auto computeIntegralExpectationLongRunOne(const Array& y0, const Array& alpha, const Index& sizeOfY0, const Tau& tau, const GetElement& getElement){$/;"	f	namespace:vasicek
computeIntegralVarianceVasicek	Vasicek/Vasicek.h	/^    auto computeIntegralVarianceVasicek(const Array& alpha, const Array& sigma, Array2d&& rho, const Index& sizeOfY0, const Tau& tau, const GetElement& getElement, const Get2dElement& get2dElement){$/;"	f	namespace:vasicek
computeIntegralVarianceVasicek	Vasicek/Vasicek.h	/^    auto computeIntegralVarianceVasicek(const Array& alpha, const Array& sigma, const Array2d& rho, const Index& sizeOfY0, const Tau& tau){$/;"	f	namespace:vasicek
computeIntegralVarianceVasicek	Vasicek/Vasicek.h	/^    auto computeIntegralVarianceVasicek(const Array& alpha, const Array& sigma, const Array2d& rho, const Index& sizeOfY0, const Tau& tau, const GetElement& getElement){$/;"	f	namespace:vasicek
computeInv	FangOost/FangOost.h	/^    auto computeInv(const Index& xDiscrete, const Index& uDiscrete,  const Number& xMin, const Number& xMax, CF&& fnInv){  $/;"	f	namespace:fangoost
computeInvDiscrete	FangOost/FangOost.h	/^    auto computeInvDiscrete(const Index& xDiscrete, const Number& xMin, const Number& xMax, CF&& discreteCF){$/;"	f	namespace:fangoost
computeInvDiscreteLog	FangOost/FangOost.h	/^    auto computeInvDiscreteLog(const Index& xDiscrete, const Number& xMin, const Number& xMax, CF&& logFnInv){$/;"	f	namespace:fangoost
computeVaR	cfdistutilities/CFDistUtilities.h	/^    auto computeVaR(const Number& alpha, const Number& prec, const Number& xMin, const Number& xMax, const Index& numU, CF&& cf){$/;"	f	namespace:cfdistutilities
computeVaRDiscrete	cfdistutilities/CFDistUtilities.h	/^    auto computeVaRDiscrete(const Number& alpha, const Number& prec, const Number& xMin, const Number& xMax, CFDiscrete&& cf){$/;"	f	namespace:cfdistutilities
computeVaRHelper	cfdistutilities/CFDistUtilities.h	/^    auto computeVaRHelper(const Number& alpha, const Number& xMin, const Number& xMax, CFDiscrete&& discreteCF, const Number& prec1, const Number& prec2){$/;"	f	namespace:cfdistutilities
computeVaRNewton	cfdistutilities/CFDistUtilities.h	/^    auto computeVaRNewton(const Number& alpha, const Number& prec1, const Number& prec2, const Number& xMin, const Number& xMax, const Number& guess, const Index& numU, CF&& cf){$/;"	f	namespace:cfdistutilities
computeVaRNewtonDiscrete	cfdistutilities/CFDistUtilities.h	/^    auto computeVaRNewtonDiscrete(const Number& alpha, const Number& prec1, const Number& prec2, const Number& xMin, const Number& xMax, const Number& guess, CFDiscrete&& cf){$/;"	f	namespace:cfdistutilities
computeVaRNewtonHelper	cfdistutilities/CFDistUtilities.h	/^    auto computeVaRNewtonHelper(const Number& alpha, const Number& xMin, const Number& xMax, const Number& guess, CFDiscrete&& discreteCF, const Number& prec1, const Number& prec2){$/;"	f	namespace:cfdistutilities
computeXMax	opsRisk/main.cpp	/^auto computeXMax(double lambda, double muStable, double cStable, double t){$/;"	f
computeXRange	FangOost/FangOost.h	/^    auto computeXRange(const Index& xDiscrete, const Number& xMin, const Number& xMax){$/;"	f	namespace:fangoost
compute_efficient_2d	RungeKutta/RungeKutta.h	/^	auto compute_efficient_2d(const Number1& t, const Index& numSteps, std::vector<Number>&& initialValues, FN&& fn){$/;"	f	namespace:rungekutta
const.calculator	levy-functions/mockServer/server.js	/^    calculator:req=>{$/;"	p
const_power	FunctionalUtilities/FunctionalUtilities.h	/^    constexpr T const_power(const T& number, int N ){$/;"	f	namespace:futilities
constructKeyToIndex	levy-functions/src/parse_json.h	/^std::unordered_map<std::string, int> constructKeyToIndex(JsonVariable&& variableVar, const Array& possibleParameters ){$/;"	f
constructStaticKeyToValue	levy-functions/src/parse_json.h	/^auto constructStaticKeyToValue(JsonVariable&& staticVar, const Array& possibleParameters ){$/;"	f
convert	AutoDiff/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	AutoDiff/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	AutoDiff/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	AutoDiff/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	AutoDiff/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	AutoDiff/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	BSImpliedVolatility/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	BSImpliedVolatility/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	BSImpliedVolatility/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	BSImpliedVolatility/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	BSImpliedVolatility/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	BSImpliedVolatility/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	CharacteristicFunctions/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	CharacteristicFunctions/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	CharacteristicFunctions/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	CharacteristicFunctions/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	CharacteristicFunctions/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	CharacteristicFunctions/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	CppNumericalSolvers/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	CppNumericalSolvers/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	CppNumericalSolvers/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	CppNumericalSolvers/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	CppNumericalSolvers/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	CppNumericalSolvers/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	FangOost/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	FangOost/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	FangOost/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	FangOost/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	FangOost/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	FangOost/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	FunctionalUtilities/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	FunctionalUtilities/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	FunctionalUtilities/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	FunctionalUtilities/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	FunctionalUtilities/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	FunctionalUtilities/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	GaussNewton/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	GaussNewton/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	GaussNewton/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	GaussNewton/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	GaussNewton/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	GaussNewton/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	HullWhite/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	HullWhite/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	HullWhite/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	HullWhite/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	HullWhite/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	HullWhite/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	ODESolver/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	ODESolver/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	ODESolver/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	ODESolver/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	ODESolver/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	ODESolver/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	RungeKutta/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	RungeKutta/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	RungeKutta/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	RungeKutta/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	RungeKutta/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	RungeKutta/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	Vasicek/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	Vasicek/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	Vasicek/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	Vasicek/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	Vasicek/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	Vasicek/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	cfdistutilities/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	cfdistutilities/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	cfdistutilities/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	cfdistutilities/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	cfdistutilities/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	cfdistutilities/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	cuckoo_search/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	cuckoo_search/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	cuckoo_search/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	cuckoo_search/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	cuckoo_search/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	cuckoo_search/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	levy-functions/src/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	levy-functions/src/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	levy-functions/src/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	levy-functions/src/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	levy-functions/src/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	levy-functions/src/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	nelder_mead/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	nelder_mead/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	nelder_mead/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	nelder_mead/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	nelder_mead/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	nelder_mead/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convert	neuralNet/catch.hpp	/^        static std::string convert( T const& ) { return unprintableString; }$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	neuralNet/catch.hpp	/^        static std::string convert( T const& _value ) {$/;"	f	struct:Catch::Detail::StringMakerBase
convert	neuralNet/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::EnumStringMaker
convert	neuralNet/catch.hpp	/^        static std::string convert( T const& v )$/;"	f	struct:Catch::Detail::StringMakerBase
convert	neuralNet/catch.hpp	/^    static std::string convert( R C::* p ) {$/;"	f	struct:Catch::StringMaker
convert	neuralNet/catch.hpp	/^    static std::string convert( U* p ) {$/;"	f	struct:Catch::StringMaker
convertLogCFToRealExp	FangOost/FangOost.h	/^    auto convertLogCFToRealExp(const Number& xMin, const Number& xMax, CF&& logAndComplexCF){ $/;"	f	namespace:fangoost
convolute	FangOost/FangOost.h	/^    auto convolute(const Number& cfIncr, const X& x, const Number& u, const Index& uIndex, VK&& vK){$/;"	f	namespace:fangoost
convoluteLevy	FangOost/FangOost.h	/^    auto convoluteLevy(const Cmpl& cfIncr, const X& x, const Number& u, const Index& uIndex, VK&& vK){$/;"	f	namespace:fangoost
cos	AutoDiff/AutoDiff.h	/^auto cos(const AutoDiff<W> &val){$/;"	f
cppoptlib	CppNumericalSolvers/neldermeadsolver.h	/^namespace cppoptlib {$/;"	n
createOptimizationObject	GaussNewton/Newton.h	/^  auto createOptimizationObject(const T& functionOutput, const T& previousInput, const T& currentInput){$/;"	f	namespace:newton
crossMultiply	Vasicek/Vasicek.h	/^    auto crossMultiply(const Rho& rho, const Sigma& sigma1, const Sigma& sigma2, const Alpha& alpha1, const Alpha& alpha2){$/;"	f	namespace:vasicek
cuckoo	cuckoo_search/cuckoo.h	/^namespace cuckoo{$/;"	n
cumulative_sum	FunctionalUtilities/FunctionalUtilities.h	/^    auto cumulative_sum(Array&& array, Function&& fn){$/;"	f	namespace:futilities
cumulative_sum_copy	FunctionalUtilities/FunctionalUtilities.h	/^    auto cumulative_sum_copy(const Array& array, Function&& fn){$/;"	f	namespace:futilities
currentInputIndex	GaussNewton/Newton.h	/^  constexpr int currentInputIndex=2;$/;"	m	namespace:newton
dA	neuralNet/NeuralNetGraph.h	/^    double dA;$/;"	m	struct:Node
deleteAll	AutoDiff/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	BSImpliedVolatility/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	CharacteristicFunctions/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	CppNumericalSolvers/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	FangOost/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	FunctionalUtilities/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	GaussNewton/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	HullWhite/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	ODESolver/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	RungeKutta/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	Vasicek/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	cfdistutilities/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	cuckoo_search/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	levy-functions/src/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	nelder_mead/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAll	neuralNet/catch.hpp	/^    inline void deleteAll( ContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	AutoDiff/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	BSImpliedVolatility/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	CharacteristicFunctions/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	CppNumericalSolvers/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	FangOost/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	FunctionalUtilities/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	GaussNewton/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	HullWhite/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	ODESolver/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	RungeKutta/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	Vasicek/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	cfdistutilities/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	cuckoo_search/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	levy-functions/src/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	nelder_mead/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
deleteAllValues	neuralNet/catch.hpp	/^    inline void deleteAllValues( AssociativeContainerT& container ) {$/;"	f	namespace:Catch
density	levy-functions/src/calculator.cpp	/^constexpr int density=19;$/;"	v
description	AutoDiff/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	BSImpliedVolatility/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	CharacteristicFunctions/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	CppNumericalSolvers/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	FangOost/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	FunctionalUtilities/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	GaussNewton/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	HullWhite/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	ODESolver/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	RungeKutta/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	Vasicek/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	cfdistutilities/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	cuckoo_search/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	levy-functions/src/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	nelder_mead/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
description	neuralNet/catch.hpp	/^    const char* description;$/;"	m	struct:Catch::NameAndDesc
diffPow	cfdistutilities/CFDistUtilities.h	/^    auto diffPow(const X& x, const Number& a){$/;"	f	namespace:cfdistutilities
dual	AutoDiff/AutoDiff.h	/^        T dual;$/;"	m	class:AutoDiff
duffieODE	CharacteristicFunctions/CharacteristicFunctions.h	/^    std::vector<T > duffieODE($/;"	f	namespace:chfunctions
dw	neuralNet/NeuralNetGraph.h	/^    double dw; \/\/stores the derivative of the weight$/;"	m	struct:weights
emptyNests	cuckoo_search/cuckoo.h	/^    void emptyNests(Nest* newNest, const ObjFn& objFn, const Rand& rnd, const Array& ul, const P& p){$/;"	f	namespace:cuckoo
erf	AutoDiff/AutoDiff.h	/^auto erf(const AutoDiff<W> &val){$/;"	f
evaluate	AutoDiff/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	AutoDiff/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	BSImpliedVolatility/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	BSImpliedVolatility/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	CharacteristicFunctions/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	CharacteristicFunctions/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	CppNumericalSolvers/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	CppNumericalSolvers/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	FangOost/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	FangOost/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	FunctionalUtilities/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	FunctionalUtilities/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	GaussNewton/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	GaussNewton/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	HullWhite/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	HullWhite/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	ODESolver/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	ODESolver/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	RungeKutta/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	RungeKutta/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	Vasicek/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	Vasicek/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	cfdistutilities/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	cfdistutilities/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	cuckoo_search/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	cuckoo_search/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	levy-functions/src/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	levy-functions/src/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	nelder_mead/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	nelder_mead/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	neuralNet/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs ) {$/;"	f	struct:Catch::Internal::Evaluator
evaluate	neuralNet/catch.hpp	/^        static bool evaluate( T1 const& lhs, T2 const& rhs) {$/;"	f	struct:Catch::Internal::Evaluator
exp	AutoDiff/AutoDiff.h	/^auto exp(const AutoDiff<W> &val){$/;"	f
expAffine	CharacteristicFunctions/CharacteristicFunctions.h	/^    T expAffine(const std::vector<T>& vals, const Number& v0){$/;"	f	namespace:chfunctions
exponentialCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto exponentialCF(const Number1& u, const Number2& lambda){$/;"	f	namespace:chfunctions
exponentialCFBeta	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto exponentialCFBeta(const Number1& u, const Number2& beta){$/;"	f	namespace:chfunctions
fabs	AutoDiff/AutoDiff.h	/^auto fabs(const AutoDiff<W> &val){$/;"	f
fangoost	FangOost/FangOost.h	/^namespace fangoost{$/;"	n
fangoost_call	levy-functions/src/calculator.cpp	/^void fangoost_call(const CF& cf, Array&& strikes, int numU, double S0,  double r, double T, double xMax){$/;"	f
fangoost_call_delta	levy-functions/src/calculator.cpp	/^void fangoost_call_delta(const CF& cf, Array&& strikes, int numU, double S0, double r, double T, double xMax){$/;"	f
fangoost_call_gamma	levy-functions/src/calculator.cpp	/^void fangoost_call_gamma(const CF& cf, Array&& strikes, int numU, double S0, double r, double T, double xMax){$/;"	f
fangoost_call_theta	levy-functions/src/calculator.cpp	/^void fangoost_call_theta(const CF& cf, Array&& strikes, int numU, double S0, double r, double T, double xMax){$/;"	f
fangoost_put	levy-functions/src/calculator.cpp	/^void fangoost_put(const CF& cf, Array&& strikes, int numU, double S0, double r, double T, double xMax){$/;"	f
fangoost_put_delta	levy-functions/src/calculator.cpp	/^void fangoost_put_delta(const CF& cf, Array&& strikes, int numU, double S0, double r, double T, double xMax){$/;"	f
fangoost_put_gamma	levy-functions/src/calculator.cpp	/^void fangoost_put_gamma(const CF& cf, Array&& strikes, int numU, double S0, double r, double T, double xMax){$/;"	f
fangoost_put_theta	levy-functions/src/calculator.cpp	/^void fangoost_put_theta(const CF& cf, Array&& strikes, int numU, double S0, double r, double T, double xMax){$/;"	f
fangoostcall	levy-functions/src/calculator.cpp	/^constexpr int fangoostcall=6;$/;"	v
fangoostcalldelta	levy-functions/src/calculator.cpp	/^constexpr int fangoostcalldelta=7;$/;"	v
fangoostcallgamma	levy-functions/src/calculator.cpp	/^constexpr int fangoostcallgamma=9;$/;"	v
fangoostcalltheta	levy-functions/src/calculator.cpp	/^constexpr int fangoostcalltheta=8;$/;"	v
fangoostput	levy-functions/src/calculator.cpp	/^constexpr int fangoostput=2;$/;"	v
fangoostputdelta	levy-functions/src/calculator.cpp	/^constexpr int fangoostputdelta=3;$/;"	v
fangoostputgamma	levy-functions/src/calculator.cpp	/^constexpr int fangoostputgamma=5;$/;"	v
fangoostputtheta	levy-functions/src/calculator.cpp	/^constexpr int fangoostputtheta=4;$/;"	v
fft	FFTOptionPricing/fft.hpp	/^auto fft(CArray&& x){$/;"	f
file	AutoDiff/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	BSImpliedVolatility/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	CharacteristicFunctions/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	CppNumericalSolvers/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	FangOost/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	FunctionalUtilities/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	GaussNewton/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	HullWhite/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	ODESolver/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	RungeKutta/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	Vasicek/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	cfdistutilities/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	cuckoo_search/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	levy-functions/src/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	nelder_mead/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
file	neuralNet/catch.hpp	/^        std::string file;$/;"	m	struct:Catch::SourceLineInfo
filter	FFTOptionPricing/OptionCalibration.h	/^    auto filter(const Arr& arr, const FN1& cmp, FN2&& fv1, FN3&& fv2){$/;"	f	namespace:optioncal
firefly	cuckoo_search/firefly.h	/^namespace firefly{$/;"	n
fn	FunctionalUtilities/FunctionalUtilities.h	/^    auto recurse(const incr& n, const init& initValue, fnToApply&& fn)->decltype(fn(initValue, 0)){$/;"	f	namespace:futilities
fn	FunctionalUtilities/FunctionalUtilities.h	/^    auto recurse(const incr& n, const init& initValue, fnToApply&& fn, keepGoing&& kpg)->decltype(fn(initValue, 0)){$/;"	f	namespace:futilities
fn	FunctionalUtilities/FunctionalUtilities.h	/^    auto sum(incr begin, incr end, fnToApply&& fn)->decltype(fn(begin)){$/;"	f	namespace:futilities
fnval	cuckoo_search/utils.h	/^    constexpr int fnval=1;$/;"	m	namespace:swarm_utils
fnval	nelder_mead/neldermead.h	/^    constexpr int fnval=1;$/;"	m	namespace:neldermead
for_each	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each(Array&& array, Function&& fn){ \/\/reuse array$/;"	f	namespace:futilities
for_each_copy	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each_copy(const Array& array, Function&& fn){ $/;"	f	namespace:futilities
for_each_exclude_last	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each_exclude_last(Array&& array, Function&& fn){ \/\/reuse array$/;"	f	namespace:futilities
for_each_parallel	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each_parallel(Array&& array, Function&& fn){ \/\/reuse array$/;"	f	namespace:futilities
for_each_parallel_copy	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each_parallel_copy(const Array& array, Function&& fn){$/;"	f	namespace:futilities
for_each_parallel_exclude_last	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each_parallel_exclude_last(Array&& array, Function&& fn){ \/\/reuse array$/;"	f	namespace:futilities
for_each_parallel_generic	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each_parallel_generic(const GetInit& fnInit, const GetEnd& fnEnd, Array&& array, Function&& fn){ \/\/reuse array$/;"	f	namespace:futilities
for_each_parallel_subset	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each_parallel_subset(Array&& array, int begin, int fromEnd, Function&& fn){ \/\/reuse array$/;"	f	namespace:futilities
for_each_provide_array	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each_provide_array(Array&& array, Function&& fn){ \/\/reuse array$/;"	f	namespace:futilities
for_each_subset	FunctionalUtilities/FunctionalUtilities.h	/^    auto for_each_subset(Array&& array, int begin, int fromEnd, Function&& fn){ \/\/reuse array$/;"	f	namespace:futilities
for_emplace_back	FunctionalUtilities/FunctionalUtilities.h	/^    std::vector<Number> for_emplace_back(const Number& init, const Number& end, int n, Function&& fn){$/;"	f	namespace:futilities
formatCF	FangOost/FangOost.h	/^    auto formatCF(const U& u, const Number& xMin, const Number& cp, CF&& fnInv){$/;"	f	namespace:fangoost
formatCFReal	FangOost/FangOost.h	/^    auto formatCFReal(const U& u, const Number& xMin, const Number& cp, CF&& fnInv){$/;"	f	namespace:fangoost
forwardW	neuralNet/NeuralNetGraph.h	/^    std::vector<weights> forwardW;$/;"	m	struct:Node
forward_prop	neuralNet/NeuralNetGraph.h	/^    auto forward_prop(std::vector<std::vector<Node*> > holdNodes, const std::vector<double>& x, const Fn& activation){$/;"	f	namespace:nngraph
forward_prop_init	neuralNet/NeuralNetGraph.h	/^    auto forward_prop_init(const std::vector<int>& numNodesInLayer, const std::vector<double>& x, const Fn& activation){$/;"	f	namespace:nngraph
fsts_call	levy-functions/src/calculator.cpp	/^void fsts_call(const CF& cf, int numU, double K, double r, double T, double xMax){$/;"	f
fsts_call_delta	levy-functions/src/calculator.cpp	/^void fsts_call_delta(const CF& cf, int numU, double K, double r, double T, double xMax){$/;"	f
fsts_call_gamma	levy-functions/src/calculator.cpp	/^void fsts_call_gamma(const CF& cf, int numU, double K, double r, double T, double xMax){$/;"	f
fsts_call_theta	levy-functions/src/calculator.cpp	/^void fsts_call_theta(const CF& cf, int numU, double K, double r, double T, double xMax){$/;"	f
fsts_put	levy-functions/src/calculator.cpp	/^void fsts_put(const CF& cf, int numU,double K, double r, double T, double xMax){$/;"	f
fsts_put_delta	levy-functions/src/calculator.cpp	/^void fsts_put_delta(const CF& cf, int numU, double K, double r, double T, double xMax){$/;"	f
fsts_put_gamma	levy-functions/src/calculator.cpp	/^void fsts_put_gamma(const CF& cf, int numU, double K, double r, double T, double xMax){$/;"	f
fsts_put_theta	levy-functions/src/calculator.cpp	/^void fsts_put_theta(const CF& cf, int numU, double K, double r, double T, double xMax){$/;"	f
fstscall	levy-functions/src/calculator.cpp	/^constexpr int fstscall=14;$/;"	v
fstscalldelta	levy-functions/src/calculator.cpp	/^constexpr int fstscalldelta=15;$/;"	v
fstscallgamma	levy-functions/src/calculator.cpp	/^constexpr int fstscallgamma=17;$/;"	v
fstscalltheta	levy-functions/src/calculator.cpp	/^constexpr int fstscalltheta=16;$/;"	v
fstsput	levy-functions/src/calculator.cpp	/^constexpr int fstsput=10;$/;"	v
fstsputdelta	levy-functions/src/calculator.cpp	/^constexpr int fstsputdelta=11;$/;"	v
fstsputgamma	levy-functions/src/calculator.cpp	/^constexpr int fstsputgamma=13;$/;"	v
fstsputtheta	levy-functions/src/calculator.cpp	/^constexpr int fstsputtheta=12;$/;"	v
functionOutputIndex	GaussNewton/Newton.h	/^  constexpr int functionOutputIndex=0;$/;"	m	namespace:newton
futilities	FunctionalUtilities/FunctionalUtilities.h	/^namespace futilities{$/;"	n
gammaCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto gammaCF(const Number1& u, const Number2& a, const Number2& b){$/;"	f	namespace:chfunctions
gaussCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto gaussCF(const T& u, const Number& mu, const Number& sigma){$/;"	f	namespace:chfunctions
gaussLogCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto gaussLogCF(const T& u, const Number& mu, const Number& sigma){$/;"	f	namespace:chfunctions
generateConstParameters	levy-functions/src/calibrator.cpp	/^auto generateConstParameters($/;"	f
generateFOEstimate	FFTOptionPricing/OptionCalibration.h	/^    auto generateFOEstimate(const std::vector<Strike>& strikes, const std::vector<MarketPrice>& options,  const AssetPrice& stock, const R& r, const T& t, const Strike& minStrike, const Strike& maxStrike){$/;"	f	namespace:optioncal
generateSpline	FFTOptionPricing/monotone_spline.h	/^    auto generateSpline(Arr&& xs, Arr&& ys){$/;"	f	namespace:spline
generateSplineCurves	levy-functions/src/calibrator.cpp	/^auto generateSplineCurves($/;"	f
generateVasicek	HullWhite/HullWhite.h	/^  auto generateVasicek(const R& currVal,  const MeanRevertSpeed& a, const LongRunMean& b, const Volatility& sigma, const FirstFutureTime& nextTime, const Simul& simul){$/;"	f	namespace:hullwhite
genericCallCalibrator_cuckoo	levy-functions/src/calibrator.cpp	/^auto genericCallCalibrator_cuckoo($/;"	f
genericIntegration	FFTOptionPricing/fft.hpp	/^auto genericIntegration(double outputMin, double inputMin, double inputMax, FN&& fn, int N, Method&& f){$/;"	f
genericIntegration	FFTOptionPricing/fft.hpp	/^auto genericIntegration(double outputMin, double inputMin, double inputMax, FN&& fn, int N, Method&& f, EditOutput&& fnOutput){$/;"	f
genericfft	FFTOptionPricing/fft.hpp	/^auto genericfft(CArray&& x, Complex&& phiT, int N){$/;"	f
get	AutoDiff/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	BSImpliedVolatility/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	CharacteristicFunctions/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	CppNumericalSolvers/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	FangOost/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	FunctionalUtilities/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	GaussNewton/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	HullWhite/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	ODESolver/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	RungeKutta/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	Vasicek/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	cfdistutilities/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	cuckoo_search/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	levy-functions/src/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	nelder_mead/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
get	neuralNet/catch.hpp	/^        T* get() const{ return m_p; }$/;"	f	class:Catch::Ptr
getAllIVByAssetCall	BSImpliedVolatility/BSImpliedVolatility.h	/^    auto getAllIVByAssetCall($/;"	f	namespace:IV
getAllIVByAssetPut	BSImpliedVolatility/BSImpliedVolatility.h	/^    auto getAllIVByAssetPut($/;"	f	namespace:IV
getAllIVByStrikeCall	BSImpliedVolatility/BSImpliedVolatility.h	/^    auto getAllIVByStrikeCall($/;"	f	namespace:IV
getAllIVByStrikePut	BSImpliedVolatility/BSImpliedVolatility.h	/^    auto getAllIVByStrikePut($/;"	f	namespace:IV
getArgOrConstant	levy-functions/src/parse_json.h	/^double getArgOrConstant($/;"	f
getBestNest	cuckoo_search/cuckoo.h	/^    void getBestNest(Nest* nest, const Nest& newNest){$/;"	f	namespace:cuckoo
getCarrMadanKAtIndex	FFTOptionPricing/OptionPricing.h	/^    auto getCarrMadanKAtIndex(const Number& b, const Number& lambda, const Number& S0, const Index& index){$/;"	f	namespace:optionprice
getCarrMadanStrikes	FFTOptionPricing/OptionPricing.h	/^    auto getCarrMadanStrikes(const Number& ada, const Number& S0, const Index& numX){$/;"	f	namespace:optionprice
getColumnAsVector	CppNumericalSolvers/neldermeadsolver.h	/^  auto getColumnAsVector(const std::vector<T>& vM, int col, int numRows){$/;"	f	namespace:cppoptlib
getComplexU	FangOost/FangOost.h	/^    auto getComplexU(const Number& u){$/;"	f	namespace:fangoost
getConstraints	levy-functions/src/parse_json.h	/^std::vector<swarm_utils::upper_lower<double> > getConstraints(const RpJson& json, const Array1& possibleParameters, const Array2& fullModelConstraints, Object&& optionalConstraints ){$/;"	f
getCuckoos	cuckoo_search/cuckoo.h	/^    void getCuckoos($/;"	f	namespace:cuckoo
getCurrent	GaussNewton/Newton.h	/^  auto getCurrent(const OptObj& optObj){$/;"	f	namespace:newton
getDU	FFTOptionPricing/OptionCalibration.h	/^    auto getDU(int N, double uMax){$/;"	f	namespace:optioncal
getDX	FFTOptionPricing/OptionCalibration.h	/^    auto getDX(int N, double xMin,double xMax){$/;"	f	namespace:optioncal
getDistanceSq	cuckoo_search/firefly.h	/^    auto getDistanceSq(const Params& params1, const Params& params2){$/;"	f	namespace:firefly
getDual	AutoDiff/AutoDiff.h	/^        T getDual() const{$/;"	f	class:AutoDiff
getFangOostKAtIndex	FFTOptionPricing/OptionPricing.h	/^    auto getFangOostKAtIndex(const Number& xMin, const Number& dK, const Number& S0, const Index& index){$/;"	f	namespace:optionprice
getFangOostStrike	FFTOptionPricing/OptionPricing.h	/^    auto getFangOostStrike(const Number& xMin, const Number& xMax, const Number& S0, const Index& numX){$/;"	f	namespace:optionprice
getIVGeneric	BSImpliedVolatility/BSImpliedVolatility.h	/^    auto getIVGeneric(const S0& asset, const K& strike, const Discount& discount, const Actual& optionPrice, const Guess& guess, const OptionPriceCalc& optionPricer){$/;"	f	namespace:IV
getInitialFirefly	cuckoo_search/firefly.h	/^    auto getInitialFirefly(const Array& ul, const ObjFn& objFn, const Rand& rnd, int n){$/;"	f	namespace:firefly
getItemAt	CppNumericalSolvers/neldermead.h	/^    auto getItemAt(int row, int col, int rowLength, const std::vector<T>& vM){$/;"	f	namespace:neldermead
getItemAt	CppNumericalSolvers/neldermeadsolver.h	/^  auto getItemAt(int row, int col, int numRows, const std::vector<T>& vM){$/;"	f	namespace:cppoptlib
getKThatIsBelowOne	FFTOptionPricing/OptionCalibration.h	/^    auto getKThatIsBelowOne(const Arr& paddedStrikes){$/;"	f	namespace:optioncal
getLambda	FFTOptionPricing/OptionPricing.h	/^    auto getLambda(const Index& numSteps, const Number& b){$/;"	f	namespace:optionprice
getLevy	cuckoo_search/utils.h	/^    auto getLevy(const T& alpha, const U& rand){$/;"	f	namespace:swarm_utils
getLevyFlight	cuckoo_search/utils.h	/^    auto getLevyFlight(const T& currVal, const T& stepSize, const T& lambda, U&& rand, U&& normRand){$/;"	f	namespace:swarm_utils
getLogVasicekMFGFn	Vasicek/Vasicek.h	/^    auto getLogVasicekMFGFn(std::vector<Expectation>&& expectationtmp, std::vector< std::vector<Variance> >&& variancetmp){$/;"	f	namespace:vasicek
getMaxCoef	CppNumericalSolvers/neldermeadsolver.h	/^  T getMaxCoef(const std::vector<T>& col){$/;"	f	namespace:cppoptlib
getMaxCoefOfDiff	CppNumericalSolvers/neldermeadsolver.h	/^  T getMaxCoefOfDiff(std::vector<T>&& col1, std::vector<T>&& col2){$/;"	f	namespace:cppoptlib
getMaxK	FFTOptionPricing/OptionPricing.h	/^    auto getMaxK(const Number& ada){$/;"	f	namespace:optionprice
getName	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	AutoDiff/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	AutoDiff/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	BSImpliedVolatility/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	BSImpliedVolatility/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CharacteristicFunctions/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CharacteristicFunctions/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CppNumericalSolvers/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	CppNumericalSolvers/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FangOost/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FangOost/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FunctionalUtilities/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	FunctionalUtilities/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	GaussNewton/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	GaussNewton/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	HullWhite/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	HullWhite/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	ODESolver/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	ODESolver/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	RungeKutta/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	RungeKutta/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	Vasicek/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	Vasicek/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cfdistutilities/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cfdistutilities/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cuckoo_search/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	cuckoo_search/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	levy-functions/src/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	levy-functions/src/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	nelder_mead/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	nelder_mead/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsEqualTo>             { static const char* getName(){ return "=="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThan>         { static const char* getName(){ return ">"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsGreaterThanOrEqualTo>{ static const char* getName(){ return ">="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsLessThan>            { static const char* getName(){ return "<"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsLessThanOrEqualTo>   { static const char* getName(){ return "<="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	neuralNet/catch.hpp	/^    template<> struct OperatorTraits<IsNotEqualTo>          { static const char* getName(){ return "!="; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getName	neuralNet/catch.hpp	/^    template<Operator Op> struct OperatorTraits             { static const char* getName(){ return "*error*"; } };$/;"	f	struct:Catch::Internal::OperatorTraits
getNewNest	cuckoo_search/cuckoo.h	/^    auto getNewNest(const Array& ul, const ObjFn& objFn, const Rand& rnd, int n){$/;"	f	namespace:cuckoo
getNewParameterAndFn	cuckoo_search/utils.h	/^    auto getNewParameterAndFn(const Array& ul, const ObjFn& objFn, const Rand& rand){$/;"	f	namespace:swarm_utils
getNextDetStep	cuckoo_search/firefly.h	/^    auto getNextDetStep(const Xi& xi, const Xj& xj, double step){$/;"	f	namespace:firefly
getObjFn_arr	FFTOptionPricing/OptionCalibration.h	/^    auto getObjFn_arr(PhiHat&& phiHattmp, LogCfFN&& cfFntmp, DiscreteU&& uArraytmp){$/;"	f	namespace:optioncal
getOptionSpline	FFTOptionPricing/OptionCalibration.h	/^    auto getOptionSpline(const std::vector<Strike>& strikes, const std::vector<MarketPrice>& options,  const AssetPrice& stock, const Discount& discount, const Strike& minStrike, const Strike& maxStrike){$/;"	f	namespace:optioncal
getOutput	GaussNewton/Newton.h	/^  auto getOutput(const OptObj& optObj){$/;"	f	namespace:newton
getPA	cuckoo_search/cuckoo.h	/^    P getPA(const P& pMin, const P& pMax, const Index& index, const Index& n){$/;"	f	namespace:cuckoo
getPrevious	GaussNewton/Newton.h	/^  auto getPrevious(const OptObj& optObj){$/;"	f	namespace:newton
getRandomParameter	cuckoo_search/utils.h	/^    auto getRandomParameter(const T& lower, const T& upper, const U& rand){$/;"	f	namespace:swarm_utils
getRandomParameters	cuckoo_search/utils.h	/^    auto getRandomParameters(const Array& ul, const Rand& rand){$/;"	f	namespace:swarm_utils
getRowAsVector	CppNumericalSolvers/neldermead.h	/^    auto getRowAsVector(const std::vector<T>& vM, int col, int rowLength){$/;"	f	namespace:neldermead
getStandard	AutoDiff/AutoDiff.h	/^        T getStandard() const{$/;"	f	class:AutoDiff
getStepSize	cuckoo_search/cuckoo.h	/^    auto getStepSize(const Parm& curr, const Parm& best, const Parm& lower, const Parm& upper){$/;"	f	namespace:cuckoo
getStrikeUnderlying	FFTOptionPricing/OptionPricing.h	/^    auto getStrikeUnderlying(const Number& xMin, const Number& xMax, const Number& K, const Index& numX){$/;"	f	namespace:optionprice
getTruncatedParameter	cuckoo_search/utils.h	/^    auto getTruncatedParameter(const T& lower, const T& upper, const U& result){$/;"	f	namespace:swarm_utils
getU	FangOost/FangOost.h	/^    auto getU(const Number& du, const Index& index){$/;"	f	namespace:fangoost
getU	levy-functions/src/calibrator.cpp	/^auto getU(int N){$/;"	f
getUDomain	FFTOptionPricing/OptionPricing.h	/^    auto getUDomain(const Number& uMax, const Number& du, const Index& index){$/;"	f	namespace:optionprice
getUMax	FFTOptionPricing/OptionCalibration.h	/^    auto getUMax(int N, double xMin, double xMax){$/;"	f	namespace:optioncal
getUniform	cuckoo_search/utils.h	/^    auto getUniform(){$/;"	f	namespace:swarm_utils
getUpdate	cuckoo_search/firefly.h	/^    void getUpdate(FireFlies* fireflies, const ObjFn& objFun, const Array& ul, double beta, double gamma, double vol, const Norm& norm){$/;"	f	namespace:firefly
getVasicekMFGFn	Vasicek/Vasicek.h	/^    auto getVasicekMFGFn(std::vector<Expectation>&& expectationtmp, std::vector< std::vector<Variance> >&& variancetmp){$/;"	f	namespace:vasicek
getX	FangOost/FangOost.h	/^    auto getX(const Number& xMin, const Number& dx, const Index& index){$/;"	f	namespace:fangoost
getXFromK	FFTOptionPricing/OptionPricing.h	/^    auto getXFromK(const Number& S0, const Array& K){$/;"	f	namespace:optionprice
get_density	levy-functions/src/calculator.cpp	/^void get_density(const CF& cf, int numU, double xMax){$/;"	f
get_jump_diffusion_vol	cfdistutilities/test.cpp	/^auto get_jump_diffusion_vol(double sigma, double lambda, double muJ, double sigJ, double T){$/;"	f
get_jump_diffusion_vol	levy-functions/src/calculator.cpp	/^auto get_jump_diffusion_vol(double sigma, double lambda, double muJ, double sigJ, double T){$/;"	f
get_k_var	levy-functions/src/parse_json.h	/^vecT get_k_var(const rapidjson::Document& parms){$/;"	f
get_prices_var	levy-functions/src/parse_json.h	/^std::vector<double> get_prices_var(const rapidjson::Document& parms){$/;"	f
get_ranged_variable	levy-functions/src/parse_json.h	/^auto get_ranged_variable(const rapidjson::Document& parms, const CustomMap& defaultParameters, const std::string& key){$/;"	f
get_var	levy-functions/src/calculator.cpp	/^void get_var(const CF& cf, double quantile, int numU, double xMax){$/;"	f
gradient	GaussNewton/Newton.h	/^  auto gradient(const FNC& fnc, const T& current, const Ts&... others){$/;"	f	namespace:newton
gradientDescent	GaussNewton/Newton.h	/^  auto gradientDescent(const FNC& fnc, const Index& maxNum, const Precision& precision, const T& alpha, const Params&... params){$/;"	f	namespace:newton
gradientDescentApprox	GaussNewton/Newton.h	/^  auto gradientDescentApprox(const FNC& fnc, const Index& maxNum, const Precision& precision, const Precision& peterbation, const T& alpha, const Params&... params){$/;"	f	namespace:newton
gradientDescentGeneric	GaussNewton/Newton.h	/^  auto gradientDescentGeneric(const GFN& gradientIter, const FNC& fnc, const Index& maxNum, const Precision& precision, const T& alpha,  const Params&... params){$/;"	f	namespace:newton
gradientDescentObjective	GaussNewton/Newton.h	/^  auto gradientDescentObjective(const Theta& theta, const Alpha& alpha, const Gradient& grad){$/;"	f	namespace:newton
gradientHelper	GaussNewton/Newton.h	/^  auto gradientHelper(FNC&& fnc, std::vector<T>&& val){$/;"	f	namespace:newton
gradientHelper	GaussNewton/Newton.h	/^  auto gradientHelper(FNC&& fnc, std::vector<T>&& val, const T& current, const Ts&... others){$/;"	f	namespace:newton
gradientHelperTuple	GaussNewton/Newton.h	/^  auto gradientHelperTuple(FNC&& fnc, std::tuple<Tr...>&& myResult){$/;"	f	namespace:newton
gradientHelperTuple	GaussNewton/Newton.h	/^  auto gradientHelperTuple(FNC&& fnc, std::tuple<Tr...>&& myResult, const T& current, const Ts&... myparms){$/;"	f	namespace:newton
gradientIterate	GaussNewton/Newton.h	/^  auto gradientIterate(FNC&& fnc, const T& tuple){$/;"	f	namespace:newton
gradientIterateApprox	GaussNewton/Newton.h	/^  auto gradientIterateApprox(FNC&& fnc, const T& tuple, double perterb){$/;"	f	namespace:newton
gradientTuple	GaussNewton/Newton.h	/^  auto gradientTuple(FNC&& fnc, const Ts&... myparms){$/;"	f	namespace:newton
halfFirstIndexFn	FangOost/FangOost.h	/^    auto halfFirstIndexFn(const Number& val, const Index& index){$/;"	f	namespace:fangoost
hasAllVariables	levy-functions/src/parse_json.h	/^constexpr bool hasAllVariables(const Json& json, Arr1&& arr){$/;"	f
hasAllVariables	levy-functions/src/parse_json.h	/^constexpr bool hasAllVariables(const Json& json, Arr1&& arr, Arrs&&... arrs){$/;"	f
helpComputeMoments	Vasicek/Vasicek.h	/^    auto helpComputeMoments(const Alpha& alpha, const Tau& tau){ \/\/hleper function since called so much$/;"	f	namespace:vasicek
helperDW	neuralNet/NeuralNetGraph.h	/^    double helperDW; \/\/stores a helper function for the rest of the derivatives$/;"	m	struct:weights
hullwhite	HullWhite/HullWhite.h	/^namespace hullwhite{$/;"	n
ifft	FFTOptionPricing/fft.hpp	/^auto ifft(CArray&& x){$/;"	f
integrateFFT	FFTOptionPricing/fft.hpp	/^auto integrateFFT(double xMin, double uMin, double uMax, FN&& fn, int N){$/;"	f
integrateFFT	FFTOptionPricing/fft.hpp	/^auto integrateFFT(double xMin, double uMin, double uMax, FN&& fn, int N, EditOutput&& fnOutput){$/;"	f
integrateIFFT	FFTOptionPricing/fft.hpp	/^auto integrateIFFT(double uMin, double xMin, double xMax, FN&& fn, int N){$/;"	f
integrateIFFT	FFTOptionPricing/fft.hpp	/^auto integrateIFFT(double uMin, double xMin, double xMax, FN&& fn, int N, EditOutput&& fnOutput){$/;"	f
inverseGaussianCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto inverseGaussianCF(const Number1& u, const Number2& mu, const Number2& lambda){$/;"	f	namespace:chfunctions
invoke	AutoDiff/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	BSImpliedVolatility/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	CharacteristicFunctions/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	CppNumericalSolvers/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	FangOost/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	FunctionalUtilities/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	GaussNewton/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	HullWhite/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	ODESolver/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	RungeKutta/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	Vasicek/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	cfdistutilities/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	cuckoo_search/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	levy-functions/src/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	nelder_mead/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
invoke	neuralNet/catch.hpp	/^    virtual void invoke() const {$/;"	f	class:Catch::MethodTestCase
isEndBiggerThanBeginning	GaussNewton/Newton.h	/^  auto isEndBiggerThanBeginning(const T& x1, const S& x2){$/;"	f	namespace:newton
isFalseTest	AutoDiff/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	BSImpliedVolatility/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	CharacteristicFunctions/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	CppNumericalSolvers/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	FangOost/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	FunctionalUtilities/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	GaussNewton/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	HullWhite/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	ODESolver/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	RungeKutta/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	Vasicek/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	cfdistutilities/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	cuckoo_search/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	levy-functions/src/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	nelder_mead/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	neuralNet/catch.hpp	/^    inline bool isFalseTest( int flags )                { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isJustInfo	AutoDiff/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	BSImpliedVolatility/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	CharacteristicFunctions/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	CppNumericalSolvers/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	FangOost/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	FunctionalUtilities/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	GaussNewton/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	HullWhite/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	ODESolver/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	RungeKutta/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	Vasicek/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	cfdistutilities/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	cuckoo_search/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	levy-functions/src/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	nelder_mead/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	neuralNet/catch.hpp	/^    inline bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isOk	AutoDiff/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	BSImpliedVolatility/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	CharacteristicFunctions/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	CppNumericalSolvers/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	FangOost/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	FunctionalUtilities/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	GaussNewton/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	HullWhite/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	ODESolver/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	RungeKutta/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	Vasicek/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	cfdistutilities/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	cuckoo_search/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	levy-functions/src/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	nelder_mead/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	neuralNet/catch.hpp	/^    inline bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isSame	CharacteristicFunctions/CharacteristicFunctions.h	/^    bool isSame(const Number& num, const Compare& toCompare){$/;"	f	namespace:chfunctions
isSameSign	GaussNewton/Newton.h	/^  auto isSameSign(const T& x1, const S& x2){$/;"	f	namespace:newton
isTrue	AutoDiff/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	BSImpliedVolatility/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	CharacteristicFunctions/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	CppNumericalSolvers/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	FangOost/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	FunctionalUtilities/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	GaussNewton/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	HullWhite/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	ODESolver/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	RungeKutta/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	Vasicek/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	cfdistutilities/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	cuckoo_search/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	levy-functions/src/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	nelder_mead/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
isTrue	neuralNet/catch.hpp	/^    inline bool isTrue( bool value ){ return value; }$/;"	f	namespace:Catch
is_vector	RungeKutta/RungeKutta.h	/^template<typename T, typename A> struct is_vector<std::vector<T, A>> : public std::true_type {};$/;"	s
is_vector	RungeKutta/RungeKutta.h	/^template<typename T> struct is_vector : public std::false_type {};$/;"	s
iterateStep	GaussNewton/Newton.h	/^  auto iterateStep(Val&& val, Obj&& obj, Deriv&& deriv){$/;"	f	namespace:newton
json_print_calibrated_params	levy-functions/src/parse_json.h	/^void json_print_calibrated_params(const Array1& paramNames, TupleOfArrayAndValue&& optimResults, int totalOptions){$/;"	f
json_print_default_parameters	levy-functions/src/parse_json.h	/^void json_print_default_parameters(){$/;"	f
json_print_density	levy-functions/src/parse_json.h	/^void json_print_density(const Array1& arr1, const Array2& arr2){$/;"	f
json_print_multiple_obj	levy-functions/src/parse_json.h	/^void json_print_multiple_obj(Fns&&... fns){$/;"	f
json_print_multiple_obj_helper	levy-functions/src/parse_json.h	/^void json_print_multiple_obj_helper(Str&& key, Fn&& fn){$/;"	f
json_print_multiple_obj_helper	levy-functions/src/parse_json.h	/^void json_print_multiple_obj_helper(Str&& key, Fn&& fn, Fns&&... fns){$/;"	f
json_print_options	levy-functions/src/parse_json.h	/^void json_print_options(const Array1& arr1, const Array2& arr2, const Array3& arr3){$/;"	f
json_print_spline	levy-functions/src/parse_json.h	/^void json_print_spline(const std::vector<double>& domain, Domain&& fnDomain, Range&& fnRange){$/;"	f
json_print_spline	levy-functions/src/parse_json.h	/^void json_print_spline(int n, double min, double max, double dx, Domain&& fnDomain, Range&& fnRange){$/;"	f
json_print_var	levy-functions/src/parse_json.h	/^void json_print_var(double var, double es){$/;"	f
largeNumber	FFTOptionPricing/OptionCalibration.h	/^    constexpr double largeNumber=5000;$/;"	m	namespace:optioncal
lhs	AutoDiff/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	BSImpliedVolatility/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	CharacteristicFunctions/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	CppNumericalSolvers/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	FangOost/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	FunctionalUtilities/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	GaussNewton/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	HullWhite/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	ODESolver/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	RungeKutta/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	Vasicek/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	cfdistutilities/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	cuckoo_search/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	levy-functions/src/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	nelder_mead/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
lhs	neuralNet/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
line	AutoDiff/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	BSImpliedVolatility/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	CharacteristicFunctions/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	CppNumericalSolvers/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	FangOost/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	FunctionalUtilities/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	GaussNewton/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	HullWhite/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	ODESolver/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	RungeKutta/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	Vasicek/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	cfdistutilities/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	cuckoo_search/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	levy-functions/src/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	nelder_mead/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
line	neuralNet/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
lineInfo	AutoDiff/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	BSImpliedVolatility/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	CharacteristicFunctions/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	CppNumericalSolvers/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	FangOost/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	FunctionalUtilities/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	GaussNewton/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	HullWhite/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	ODESolver/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	RungeKutta/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	Vasicek/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	cfdistutilities/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	cuckoo_search/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	levy-functions/src/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	nelder_mead/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	neuralNet/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
localBSCall	BSImpliedVolatility/BSImpliedVolatility.h	/^    auto localBSCall=[](const auto& asset, const auto& discount, const auto& strike, const auto& sigma){$/;"	m	namespace:IV
localBSPut	BSImpliedVolatility/BSImpliedVolatility.h	/^    auto localBSPut=[](const auto& asset, const auto& discount, const auto& strike, const auto& sigma){$/;"	m	namespace:IV
log	AutoDiff/AutoDiff.h	/^auto log(const AutoDiff<W> &val){$/;"	f
logAffine	CharacteristicFunctions/CharacteristicFunctions.h	/^    T logAffine(const std::vector<T>& vals, const Number& v0){$/;"	f	namespace:chfunctions
lower	cuckoo_search/utils.h	/^        T lower;$/;"	m	struct:swarm_utils::upper_lower
m_assertionInfo	AutoDiff/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	BSImpliedVolatility/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	CharacteristicFunctions/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	CppNumericalSolvers/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	FangOost/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	FunctionalUtilities/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	GaussNewton/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	HullWhite/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	ODESolver/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	RungeKutta/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	Vasicek/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	cfdistutilities/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	cuckoo_search/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	levy-functions/src/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	nelder_mead/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_assertionInfo	neuralNet/catch.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::ResultBuilder
m_caseSensitivity	AutoDiff/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	BSImpliedVolatility/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	CharacteristicFunctions/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	CppNumericalSolvers/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	FangOost/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	FunctionalUtilities/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	GaussNewton/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	HullWhite/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	ODESolver/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	RungeKutta/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	Vasicek/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	cfdistutilities/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	cuckoo_search/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	levy-functions/src/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	nelder_mead/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_caseSensitivity	neuralNet/catch.hpp	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_count	AutoDiff/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	BSImpliedVolatility/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	CharacteristicFunctions/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	CppNumericalSolvers/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	FangOost/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	FunctionalUtilities/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	GaussNewton/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	HullWhite/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	ODESolver/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	RungeKutta/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	Vasicek/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	cfdistutilities/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	cuckoo_search/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	levy-functions/src/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	nelder_mead/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_count	neuralNet/catch.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_data	AutoDiff/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	AutoDiff/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	AutoDiff/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	AutoDiff/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	AutoDiff/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	BSImpliedVolatility/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	BSImpliedVolatility/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	BSImpliedVolatility/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	BSImpliedVolatility/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	BSImpliedVolatility/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	CharacteristicFunctions/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	CharacteristicFunctions/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	CharacteristicFunctions/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	CharacteristicFunctions/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	CharacteristicFunctions/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	CppNumericalSolvers/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	CppNumericalSolvers/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	CppNumericalSolvers/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	CppNumericalSolvers/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	CppNumericalSolvers/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	FangOost/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	FangOost/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	FangOost/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	FangOost/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	FangOost/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	FunctionalUtilities/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	FunctionalUtilities/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	FunctionalUtilities/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	FunctionalUtilities/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	FunctionalUtilities/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	GaussNewton/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	GaussNewton/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	GaussNewton/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	GaussNewton/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	GaussNewton/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	HullWhite/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	HullWhite/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	HullWhite/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	HullWhite/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	HullWhite/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	ODESolver/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	ODESolver/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	ODESolver/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	ODESolver/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	ODESolver/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	RungeKutta/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	RungeKutta/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	RungeKutta/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	RungeKutta/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	RungeKutta/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	Vasicek/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	Vasicek/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	Vasicek/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	Vasicek/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	Vasicek/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	cfdistutilities/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	cfdistutilities/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	cfdistutilities/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	cfdistutilities/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	cfdistutilities/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	cuckoo_search/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	cuckoo_search/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	cuckoo_search/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	cuckoo_search/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	cuckoo_search/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	levy-functions/src/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	levy-functions/src/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	levy-functions/src/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	levy-functions/src/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	levy-functions/src/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	nelder_mead/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	nelder_mead/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	nelder_mead/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	nelder_mead/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	nelder_mead/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_data	neuralNet/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Contains
m_data	neuralNet/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::EndsWith
m_data	neuralNet/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::Equals
m_data	neuralNet/catch.hpp	/^            CasedString m_data;$/;"	m	struct:Catch::Matchers::Impl::StdString::StartsWith
m_data	neuralNet/catch.hpp	/^        AssertionResultData m_data;$/;"	m	class:Catch::ResultBuilder
m_exprComponents	AutoDiff/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	BSImpliedVolatility/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	CharacteristicFunctions/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	CppNumericalSolvers/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	FangOost/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	FunctionalUtilities/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	GaussNewton/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	HullWhite/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	ODESolver/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	RungeKutta/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	Vasicek/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	cfdistutilities/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	cuckoo_search/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	levy-functions/src/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	nelder_mead/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_exprComponents	neuralNet/catch.hpp	/^        } m_exprComponents;$/;"	m	class:Catch::ResultBuilder	typeref:struct:Catch::ResultBuilder::ExprComponents
m_info	AutoDiff/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	BSImpliedVolatility/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	CharacteristicFunctions/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	CppNumericalSolvers/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	FangOost/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	FunctionalUtilities/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	GaussNewton/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	HullWhite/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	ODESolver/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	RungeKutta/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	Vasicek/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	cfdistutilities/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	cuckoo_search/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	levy-functions/src/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	nelder_mead/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	neuralNet/catch.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_label	AutoDiff/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	BSImpliedVolatility/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	CharacteristicFunctions/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	CppNumericalSolvers/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	FangOost/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	FunctionalUtilities/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	GaussNewton/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	HullWhite/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	ODESolver/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	RungeKutta/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	Vasicek/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	cfdistutilities/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	cuckoo_search/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	levy-functions/src/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	nelder_mead/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_label	neuralNet/catch.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
m_lineInfo	AutoDiff/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	BSImpliedVolatility/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	CharacteristicFunctions/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	CppNumericalSolvers/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	FangOost/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	FunctionalUtilities/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	GaussNewton/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	HullWhite/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	ODESolver/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	RungeKutta/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	Vasicek/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	cfdistutilities/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	cuckoo_search/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	levy-functions/src/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	nelder_mead/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_lineInfo	neuralNet/catch.hpp	/^        SourceLineInfo m_lineInfo;$/;"	m	class:Catch::NotImplementedException
m_matcher	AutoDiff/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	BSImpliedVolatility/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	CharacteristicFunctions/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	CppNumericalSolvers/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	FangOost/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	FunctionalUtilities/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	GaussNewton/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	HullWhite/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	ODESolver/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	RungeKutta/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	Vasicek/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	cfdistutilities/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	cuckoo_search/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	levy-functions/src/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	nelder_mead/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matcher	neuralNet/catch.hpp	/^            Ptr< Matcher<ExpressionT> > m_matcher;$/;"	m	class:Catch::Matchers::Impl::Generic::Not
m_matchers	AutoDiff/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	AutoDiff/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	BSImpliedVolatility/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	BSImpliedVolatility/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	CharacteristicFunctions/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	CharacteristicFunctions/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	CppNumericalSolvers/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	CppNumericalSolvers/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	FangOost/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	FangOost/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	FunctionalUtilities/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	FunctionalUtilities/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	GaussNewton/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	GaussNewton/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	HullWhite/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	HullWhite/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	ODESolver/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	ODESolver/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	RungeKutta/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	RungeKutta/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	Vasicek/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	Vasicek/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	cfdistutilities/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	cfdistutilities/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	cuckoo_search/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	cuckoo_search/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	levy-functions/src/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	levy-functions/src/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	nelder_mead/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	nelder_mead/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_matchers	neuralNet/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AllOf
m_matchers	neuralNet/catch.hpp	/^            std::vector<Ptr<Matcher<ExpressionT> > > m_matchers;$/;"	m	class:Catch::Matchers::Impl::Generic::AnyOf
m_method	AutoDiff/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	BSImpliedVolatility/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	CharacteristicFunctions/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	CppNumericalSolvers/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	FangOost/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	FunctionalUtilities/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	GaussNewton/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	HullWhite/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	ODESolver/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	RungeKutta/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	Vasicek/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	cfdistutilities/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	cuckoo_search/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	levy-functions/src/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	nelder_mead/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_method	neuralNet/catch.hpp	/^    void (C::*m_method)();$/;"	m	class:Catch::MethodTestCase
m_p	AutoDiff/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	BSImpliedVolatility/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	CharacteristicFunctions/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	CppNumericalSolvers/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	FangOost/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	FunctionalUtilities/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	GaussNewton/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	HullWhite/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	ODESolver/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	RungeKutta/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	Vasicek/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	cfdistutilities/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	cuckoo_search/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	levy-functions/src/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	nelder_mead/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_p	neuralNet/catch.hpp	/^        T* m_p;$/;"	m	class:Catch::Ptr
m_rc	AutoDiff/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	BSImpliedVolatility/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	CharacteristicFunctions/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	CppNumericalSolvers/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	FangOost/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	FunctionalUtilities/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	GaussNewton/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	HullWhite/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	ODESolver/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	RungeKutta/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	Vasicek/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	cfdistutilities/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	cuckoo_search/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	levy-functions/src/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	nelder_mead/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_rc	neuralNet/catch.hpp	/^        mutable unsigned int m_rc;$/;"	m	struct:Catch::SharedImpl
m_resultData	AutoDiff/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	BSImpliedVolatility/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	CharacteristicFunctions/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	CppNumericalSolvers/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	FangOost/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	FunctionalUtilities/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	GaussNewton/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	HullWhite/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	ODESolver/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	RungeKutta/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	Vasicek/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	cfdistutilities/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	cuckoo_search/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	levy-functions/src/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	nelder_mead/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_resultData	neuralNet/catch.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_shouldDebugBreak	AutoDiff/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	BSImpliedVolatility/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	CharacteristicFunctions/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	CppNumericalSolvers/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	FangOost/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	FunctionalUtilities/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	GaussNewton/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	HullWhite/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	ODESolver/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	RungeKutta/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	Vasicek/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	cfdistutilities/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	cuckoo_search/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	levy-functions/src/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	nelder_mead/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldDebugBreak	neuralNet/catch.hpp	/^        bool m_shouldDebugBreak;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	AutoDiff/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	BSImpliedVolatility/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	CharacteristicFunctions/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	CppNumericalSolvers/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	FangOost/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	FunctionalUtilities/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	GaussNewton/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	HullWhite/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	ODESolver/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	RungeKutta/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	Vasicek/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	cfdistutilities/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	cuckoo_search/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	levy-functions/src/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	nelder_mead/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_shouldThrow	neuralNet/catch.hpp	/^        bool m_shouldThrow;$/;"	m	class:Catch::ResultBuilder
m_str	AutoDiff/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	BSImpliedVolatility/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	CharacteristicFunctions/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	CppNumericalSolvers/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	FangOost/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	FunctionalUtilities/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	GaussNewton/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	HullWhite/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	ODESolver/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	RungeKutta/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	Vasicek/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	cfdistutilities/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	cuckoo_search/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	levy-functions/src/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	nelder_mead/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_str	neuralNet/catch.hpp	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::Impl::StdString::CasedString
m_stream	AutoDiff/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	BSImpliedVolatility/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	CharacteristicFunctions/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	CppNumericalSolvers/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	FangOost/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	FunctionalUtilities/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	GaussNewton/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	HullWhite/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	ODESolver/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	RungeKutta/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	Vasicek/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	cfdistutilities/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	cuckoo_search/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	levy-functions/src/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	nelder_mead/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_stream	neuralNet/catch.hpp	/^        CopyableStream m_stream;$/;"	m	class:Catch::ResultBuilder
m_what	AutoDiff/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	BSImpliedVolatility/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	CharacteristicFunctions/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	CppNumericalSolvers/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	FangOost/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	FunctionalUtilities/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	GaussNewton/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	HullWhite/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	ODESolver/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	RungeKutta/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	Vasicek/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	cfdistutilities/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	cuckoo_search/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	levy-functions/src/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	nelder_mead/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
m_what	neuralNet/catch.hpp	/^        std::string m_what;$/;"	m	class:Catch::NotImplementedException
macroName	AutoDiff/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	BSImpliedVolatility/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	CharacteristicFunctions/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	CppNumericalSolvers/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	FangOost/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	FunctionalUtilities/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	GaussNewton/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	HullWhite/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	ODESolver/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	RungeKutta/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	Vasicek/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	cfdistutilities/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	cuckoo_search/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	levy-functions/src/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	nelder_mead/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	neuralNet/catch.hpp	/^        std::string macroName;$/;"	m	struct:Catch::AssertionInfo
main	InverseTau/main.cpp	/^int main(){$/;"	f
main	levy-functions/src/calculator.cpp	/^int main(int argc, char* argv[]){ $/;"	f
main	levy-functions/src/calibrator.cpp	/^int main(int argc, char* argv[]){$/;"	f
main	levy-functions/src/defaultParameters.cpp	/^int main(int argc, char* argv[]){$/;"	f
main	opsRisk/main.cpp	/^int main(int argc, char* argv[]){$/;"	f
makeInitialSimplex	CppNumericalSolvers/neldermead.h	/^    std::vector<T> makeInitialSimplex(const std::vector<T> &x) { \/\/Array is std::vector...please$/;"	f	namespace:neldermead
makeInitialSimplex	CppNumericalSolvers/neldermeadsolver.h	/^  std::vector<T> makeInitialSimplex(const std::vector<T> &x) { $/;"	f	namespace:cppoptlib
makeSafe	AutoDiff/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	BSImpliedVolatility/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	CharacteristicFunctions/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	CppNumericalSolvers/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	FangOost/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	FunctionalUtilities/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	GaussNewton/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	HullWhite/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	ODESolver/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	RungeKutta/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	Vasicek/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	cfdistutilities/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	cuckoo_search/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	levy-functions/src/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	nelder_mead/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeSafe	neuralNet/catch.hpp	/^        static type makeSafe( bool value ) {$/;"	f	class:Catch::SafeBool
makeString	AutoDiff/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	AutoDiff/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	BSImpliedVolatility/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	BSImpliedVolatility/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	CharacteristicFunctions/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	CharacteristicFunctions/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	CppNumericalSolvers/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	CppNumericalSolvers/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	FangOost/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	FangOost/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	FunctionalUtilities/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	FunctionalUtilities/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	GaussNewton/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	GaussNewton/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	HullWhite/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	HullWhite/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	ODESolver/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	ODESolver/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	RungeKutta/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	RungeKutta/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	Vasicek/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	Vasicek/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	cfdistutilities/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	cfdistutilities/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	cuckoo_search/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	cuckoo_search/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	levy-functions/src/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	levy-functions/src/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	nelder_mead/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	nelder_mead/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	neuralNet/catch.hpp	/^        inline std::string makeString( const char* str ) { return str ? std::string( str ) : std::string(); }$/;"	f	namespace:Catch::Matchers::Impl::StdString
makeString	neuralNet/catch.hpp	/^        inline std::string makeString( std::string const& str ) { return str; }$/;"	f	namespace:Catch::Matchers::Impl::StdString
match	AutoDiff/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	AutoDiff/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	AutoDiff/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	AutoDiff/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	AutoDiff/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	AutoDiff/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	BSImpliedVolatility/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	BSImpliedVolatility/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	BSImpliedVolatility/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	BSImpliedVolatility/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	BSImpliedVolatility/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	BSImpliedVolatility/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	CharacteristicFunctions/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	CharacteristicFunctions/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	CharacteristicFunctions/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	CharacteristicFunctions/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	CharacteristicFunctions/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	CharacteristicFunctions/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	CppNumericalSolvers/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	CppNumericalSolvers/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	CppNumericalSolvers/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	CppNumericalSolvers/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	CppNumericalSolvers/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	CppNumericalSolvers/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	FangOost/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	FangOost/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	FangOost/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	FangOost/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	FangOost/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	FangOost/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	FunctionalUtilities/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	FunctionalUtilities/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	FunctionalUtilities/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	FunctionalUtilities/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	FunctionalUtilities/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	FunctionalUtilities/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	GaussNewton/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	GaussNewton/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	GaussNewton/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	GaussNewton/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	GaussNewton/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	GaussNewton/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	HullWhite/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	HullWhite/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	HullWhite/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	HullWhite/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	HullWhite/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	HullWhite/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	ODESolver/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	ODESolver/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	ODESolver/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	ODESolver/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	ODESolver/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	ODESolver/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	RungeKutta/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	RungeKutta/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	RungeKutta/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	RungeKutta/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	RungeKutta/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	RungeKutta/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	Vasicek/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	Vasicek/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	Vasicek/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	Vasicek/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	Vasicek/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	Vasicek/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	cfdistutilities/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	cfdistutilities/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	cfdistutilities/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	cfdistutilities/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	cfdistutilities/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	cfdistutilities/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	cuckoo_search/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	cuckoo_search/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	cuckoo_search/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	cuckoo_search/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	cuckoo_search/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	cuckoo_search/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	levy-functions/src/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	levy-functions/src/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	levy-functions/src/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	levy-functions/src/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	levy-functions/src/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	levy-functions/src/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	nelder_mead/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	nelder_mead/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	nelder_mead/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	nelder_mead/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	nelder_mead/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	nelder_mead/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
match	neuralNet/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
match	neuralNet/catch.hpp	/^            virtual bool match( ExpressionT const& expr ) const$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
match	neuralNet/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
match	neuralNet/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
match	neuralNet/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
match	neuralNet/catch.hpp	/^            virtual bool match( std::string const& expr ) const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
maxZeroOrNumber	FFTOptionPricing/OptionCalibration.h	/^    auto maxZeroOrNumber(const T& num){$/;"	f	namespace:optioncal
max_iter	HullWhite/HullWhite.h	/^constexpr int max_iter=50;$/;"	v
mertonLogCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto mertonLogCF(const T& u, const Number& lambda, const Number& muL, const Number& sigL){$/;"	f	namespace:chfunctions
mertonLogRNCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto mertonLogRNCF(const T& u, const Number& lambda, const Number& muL, const Number& sigL, const Number& r,  const Number& sigma){$/;"	f	namespace:chfunctions
message	AutoDiff/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	BSImpliedVolatility/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	CharacteristicFunctions/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	CppNumericalSolvers/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	FangOost/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	FunctionalUtilities/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	GaussNewton/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	HullWhite/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	ODESolver/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	RungeKutta/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	Vasicek/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	cfdistutilities/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	cuckoo_search/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	levy-functions/src/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	nelder_mead/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	neuralNet/catch.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
muR	HullWhite/HullWhite.h	/^  auto muR(\/*the expected value of r_t under risk neutral measure: E[r_T|t]*\/$/;"	f	namespace:hullwhite
multiply	AutoDiff/AutoDiff.h	/^        auto multiply(const AutoDiff<W> &val) const{$/;"	f	class:AutoDiff
multiply	AutoDiff/AutoDiff.h	/^        auto multiply(const W& val) const{$/;"	f	class:AutoDiff
n	cuckoo_search/firefly.h	/^    constexpr int n=25;$/;"	m	namespace:firefly
name	AutoDiff/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	BSImpliedVolatility/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	CharacteristicFunctions/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	CppNumericalSolvers/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	FangOost/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	FunctionalUtilities/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	GaussNewton/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	HullWhite/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	ODESolver/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	RungeKutta/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	Vasicek/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	cfdistutilities/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	cuckoo_search/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	levy-functions/src/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	nelder_mead/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
name	neuralNet/catch.hpp	/^    const char* name;$/;"	m	struct:Catch::NameAndDesc
neldermead	CppNumericalSolvers/neldermead.h	/^namespace neldermead {$/;"	n
neldermead	nelder_mead/neldermead.h	/^namespace neldermead{$/;"	n
nestSize	FFTOptionPricing/generateCharts.cpp	/^const auto nestSize=25;$/;"	v
newton	GaussNewton/Newton.h	/^namespace newton{$/;"	n
nngraph	neuralNet/NeuralNetGraph.h	/^namespace nngraph{$/;"	n
numFromEnd	neuralNet/NeuralNetGraph.h	/^int numFromEnd(int totalNodes, int totalToThisPoint, int totalInCurrentIndex){$/;"	f
numSims	FFTOptionPricing/generateCharts.cpp	/^const auto numSims=1500;$/;"	v
odesolver	ODESolver/ODESolver.h	/^namespace odesolver {$/;"	n
oij	neuralNet/NeuralNetGraph.h	/^    double oij;$/;"	m	struct:Node
op	AutoDiff/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	BSImpliedVolatility/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	CharacteristicFunctions/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	CppNumericalSolvers/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	FangOost/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	FunctionalUtilities/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	GaussNewton/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	HullWhite/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	ODESolver/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	RungeKutta/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	Vasicek/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	cfdistutilities/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	cuckoo_search/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	levy-functions/src/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	nelder_mead/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
op	neuralNet/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
opCast	AutoDiff/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	AutoDiff/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	BSImpliedVolatility/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	BSImpliedVolatility/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	CharacteristicFunctions/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	CharacteristicFunctions/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	CppNumericalSolvers/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	CppNumericalSolvers/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	FangOost/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	FangOost/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	FunctionalUtilities/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	FunctionalUtilities/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	GaussNewton/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	GaussNewton/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	HullWhite/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	HullWhite/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	ODESolver/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	ODESolver/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	RungeKutta/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	RungeKutta/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	Vasicek/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	Vasicek/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	cfdistutilities/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	cfdistutilities/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	cuckoo_search/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	cuckoo_search/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	levy-functions/src/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	levy-functions/src/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	nelder_mead/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	nelder_mead/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
opCast	neuralNet/catch.hpp	/^    inline T& opCast(T const& t) { return const_cast<T&>(t); }$/;"	f	namespace:Catch::Internal
opCast	neuralNet/catch.hpp	/^    inline std::nullptr_t opCast(std::nullptr_t) { return nullptr; }$/;"	f	namespace:Catch::Internal
operator !	AutoDiff/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	AutoDiff/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	BSImpliedVolatility/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	BSImpliedVolatility/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	CharacteristicFunctions/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	CharacteristicFunctions/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	CppNumericalSolvers/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	CppNumericalSolvers/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	FangOost/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	FangOost/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	FunctionalUtilities/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	FunctionalUtilities/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	GaussNewton/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	GaussNewton/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	HullWhite/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	HullWhite/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	ODESolver/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	ODESolver/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	RungeKutta/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	RungeKutta/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	Vasicek/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	Vasicek/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	cfdistutilities/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	cfdistutilities/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	cuckoo_search/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	cuckoo_search/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	levy-functions/src/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	levy-functions/src/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	nelder_mead/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	nelder_mead/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !	neuralNet/catch.hpp	/^        bool operator !() const { return m_p == CATCH_NULL; }$/;"	f	class:Catch::Ptr
operator !	neuralNet/catch.hpp	/^    Generic::Not<ExpressionT> Matcher<ExpressionT>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator !=	AutoDiff/AutoDiff.h	/^bool operator!=(const AutoDiff<U> &left, const AutoDiff<W> &right){$/;"	f
operator !=	AutoDiff/AutoDiff.h	/^bool operator!=(const AutoDiff<U> &left, const W& right){$/;"	f
operator !=	AutoDiff/AutoDiff.h	/^bool operator!=(const U& left, const AutoDiff<W> &right){$/;"	f
operator &&	AutoDiff/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	AutoDiff/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	BSImpliedVolatility/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	BSImpliedVolatility/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	CharacteristicFunctions/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	CharacteristicFunctions/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	CppNumericalSolvers/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	CppNumericalSolvers/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	FangOost/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	FangOost/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	FunctionalUtilities/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	FunctionalUtilities/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	GaussNewton/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	GaussNewton/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	HullWhite/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	HullWhite/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	ODESolver/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	ODESolver/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	RungeKutta/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	RungeKutta/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	Vasicek/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	Vasicek/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	cfdistutilities/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	cfdistutilities/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	cuckoo_search/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	cuckoo_search/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	levy-functions/src/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	levy-functions/src/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	nelder_mead/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	nelder_mead/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator &&	neuralNet/catch.hpp	/^            AllOf operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
operator &&	neuralNet/catch.hpp	/^    Generic::AllOf<ExpressionT> Matcher<ExpressionT>::operator && ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator *	AutoDiff/AutoDiff.h	/^auto operator*(const AutoDiff<W> &left, const AutoDiff<Z> &right){$/;"	f
operator *	AutoDiff/AutoDiff.h	/^auto operator*(const AutoDiff<W> &left, const Z& right){$/;"	f
operator *	AutoDiff/AutoDiff.h	/^auto operator*(const W& left, const AutoDiff<Z> &right){$/;"	f
operator *	AutoDiff/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	BSImpliedVolatility/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	CharacteristicFunctions/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	CppNumericalSolvers/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	FangOost/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	FunctionalUtilities/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	GaussNewton/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	HullWhite/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	ODESolver/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	RungeKutta/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	Vasicek/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	cfdistutilities/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	cuckoo_search/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	levy-functions/src/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	nelder_mead/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator *	neuralNet/catch.hpp	/^        T& operator*() const { return *m_p; }$/;"	f	class:Catch::Ptr
operator +	AutoDiff/AutoDiff.h	/^auto operator+(const AutoDiff<W> &left, const AutoDiff<Z> &right){$/;"	f
operator +	AutoDiff/AutoDiff.h	/^auto operator+(const AutoDiff<W> &left, const Z& right){$/;"	f
operator +	AutoDiff/AutoDiff.h	/^auto operator+(const W& left, const AutoDiff<Z> &right){$/;"	f
operator +	AutoDiff/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	AutoDiff/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	BSImpliedVolatility/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	BSImpliedVolatility/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	CharacteristicFunctions/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	CharacteristicFunctions/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	CppNumericalSolvers/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	CppNumericalSolvers/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	FangOost/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	FangOost/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	FunctionalUtilities/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	FunctionalUtilities/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	GaussNewton/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	GaussNewton/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	HullWhite/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	HullWhite/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	ODESolver/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	ODESolver/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	RungeKutta/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	RungeKutta/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	Vasicek/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	Vasicek/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	cfdistutilities/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	cfdistutilities/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	cuckoo_search/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	cuckoo_search/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	levy-functions/src/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	levy-functions/src/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	nelder_mead/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	nelder_mead/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +	neuralNet/catch.hpp	/^        std::string operator+() {$/;"	f	struct:Catch::StreamEndStop
operator +	neuralNet/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch
operator +=	AutoDiff/AutoDiff.h	/^        void operator+=(const AutoDiff<W> &right){$/;"	f	class:AutoDiff
operator -	AutoDiff/AutoDiff.h	/^auto operator-(const AutoDiff<W> &left, const AutoDiff<Z> &right){$/;"	f
operator -	AutoDiff/AutoDiff.h	/^auto operator-(const AutoDiff<W> &left, const Z& right){$/;"	f
operator -	AutoDiff/AutoDiff.h	/^auto operator-(const AutoDiff<W> &right){$/;"	f
operator -	AutoDiff/AutoDiff.h	/^auto operator-(const W& left, const AutoDiff<Z> &right){$/;"	f
operator ->	AutoDiff/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	BSImpliedVolatility/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	CharacteristicFunctions/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	CppNumericalSolvers/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	FangOost/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	FunctionalUtilities/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	GaussNewton/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	HullWhite/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	ODESolver/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	RungeKutta/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	Vasicek/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	cfdistutilities/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	cuckoo_search/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	levy-functions/src/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	nelder_mead/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator ->	neuralNet/catch.hpp	/^        T* operator->() const { return m_p; }$/;"	f	class:Catch::Ptr
operator /	AutoDiff/AutoDiff.h	/^auto operator\/(const AutoDiff<W> &left, const AutoDiff<Z> &right){$/;"	f
operator /	AutoDiff/AutoDiff.h	/^auto operator\/(const AutoDiff<W> &left, const Z& right){$/;"	f
operator /	AutoDiff/AutoDiff.h	/^auto operator\/(const W& left, const AutoDiff<Z> &right){$/;"	f
operator <	AutoDiff/AutoDiff.h	/^bool operator<(const AutoDiff<U> &left, const AutoDiff<W> &right){$/;"	f
operator <	AutoDiff/AutoDiff.h	/^bool operator<(const AutoDiff<U> &left, const W& right){$/;"	f
operator <	AutoDiff/AutoDiff.h	/^bool operator<(const U& left, const AutoDiff<W> &right){$/;"	f
operator <<	AutoDiff/AutoDiff.h	/^        friend std::ostream &operator<<(std::ostream& out, const AutoDiff<T>& objToPrint){$/;"	f	class:AutoDiff
operator <<	AutoDiff/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	BSImpliedVolatility/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	CharacteristicFunctions/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	CppNumericalSolvers/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	FangOost/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	FunctionalUtilities/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	GaussNewton/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	HullWhite/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	ODESolver/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	RungeKutta/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	Vasicek/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	cfdistutilities/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	cuckoo_search/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	levy-functions/src/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	nelder_mead/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator <<	neuralNet/catch.hpp	/^        ResultBuilder& operator << ( T const& value ) {$/;"	f	class:Catch::ResultBuilder
operator =	AutoDiff/AutoDiff.h	/^        AutoDiff<T>& operator=(const AutoDiff<T>& right){$/;"	f	class:AutoDiff
operator =	AutoDiff/AutoDiff.h	/^        AutoDiff<T>& operator=(const T& x){$/;"	f	class:AutoDiff
operator =	AutoDiff/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	AutoDiff/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	AutoDiff/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	BSImpliedVolatility/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	BSImpliedVolatility/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	BSImpliedVolatility/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	CharacteristicFunctions/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	CharacteristicFunctions/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	CharacteristicFunctions/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	CppNumericalSolvers/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	CppNumericalSolvers/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	CppNumericalSolvers/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	FangOost/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	FangOost/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	FangOost/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	FunctionalUtilities/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	FunctionalUtilities/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	FunctionalUtilities/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	GaussNewton/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	GaussNewton/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	GaussNewton/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	HullWhite/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	HullWhite/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	HullWhite/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	ODESolver/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	ODESolver/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	ODESolver/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	RungeKutta/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	RungeKutta/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	RungeKutta/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	Vasicek/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	Vasicek/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	Vasicek/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	cfdistutilities/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	cfdistutilities/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	cfdistutilities/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	cuckoo_search/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	cuckoo_search/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	cuckoo_search/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	levy-functions/src/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	levy-functions/src/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	levy-functions/src/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	nelder_mead/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	nelder_mead/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	nelder_mead/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator =	neuralNet/catch.hpp	/^        CopyableStream& operator=( CopyableStream const& other ) {$/;"	f	struct:Catch::CopyableStream
operator =	neuralNet/catch.hpp	/^        Ptr& operator = ( Ptr const& other ){$/;"	f	class:Catch::Ptr
operator =	neuralNet/catch.hpp	/^        Ptr& operator = ( T* p ){$/;"	f	class:Catch::Ptr
operator ==	AutoDiff/AutoDiff.h	/^bool operator==(const AutoDiff<U> &left, const AutoDiff<W> &right){$/;"	f
operator ==	AutoDiff/AutoDiff.h	/^bool operator==(const AutoDiff<U> &left, const W& right){$/;"	f
operator ==	AutoDiff/AutoDiff.h	/^bool operator==(const U& left, const AutoDiff<W> &right){$/;"	f
operator >	AutoDiff/AutoDiff.h	/^bool operator>(const AutoDiff<U> &left, const AutoDiff<W> &right){$/;"	f
operator >	AutoDiff/AutoDiff.h	/^bool operator>(const AutoDiff<U> &left, const W& right){$/;"	f
operator >	AutoDiff/AutoDiff.h	/^bool operator>(const U& left, const AutoDiff<W> &right){$/;"	f
operator SafeBool::type	AutoDiff/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	BSImpliedVolatility/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	CharacteristicFunctions/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	CppNumericalSolvers/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	FangOost/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	FunctionalUtilities/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	GaussNewton/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	HullWhite/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	ODESolver/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	RungeKutta/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	Vasicek/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	cfdistutilities/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	cuckoo_search/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	levy-functions/src/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	nelder_mead/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator SafeBool::type	neuralNet/catch.hpp	/^        operator SafeBool::type() const { return SafeBool::makeSafe( m_p != CATCH_NULL ); }$/;"	f	class:Catch::Ptr
operator |	AutoDiff/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	BSImpliedVolatility/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	CharacteristicFunctions/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	CppNumericalSolvers/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	FangOost/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	FunctionalUtilities/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	GaussNewton/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	HullWhite/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	ODESolver/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	RungeKutta/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	Vasicek/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	cfdistutilities/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	cuckoo_search/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	levy-functions/src/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	nelder_mead/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	neuralNet/catch.hpp	/^    inline ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator ||	AutoDiff/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	AutoDiff/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	BSImpliedVolatility/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	BSImpliedVolatility/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	CharacteristicFunctions/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	CharacteristicFunctions/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	CppNumericalSolvers/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	CppNumericalSolvers/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	FangOost/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	FangOost/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	FunctionalUtilities/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	FunctionalUtilities/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	GaussNewton/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	GaussNewton/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	HullWhite/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	HullWhite/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	ODESolver/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	ODESolver/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	RungeKutta/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	RungeKutta/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	Vasicek/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	Vasicek/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	cfdistutilities/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	cfdistutilities/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	cuckoo_search/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	cuckoo_search/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	levy-functions/src/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	levy-functions/src/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	nelder_mead/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	nelder_mead/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
operator ||	neuralNet/catch.hpp	/^            AnyOf operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
operator ||	neuralNet/catch.hpp	/^    Generic::AnyOf<ExpressionT> Matcher<ExpressionT>::operator || ( Matcher<ExpressionT> const& other ) const {$/;"	f	class:Catch::Matchers::Impl::Matcher
optimize	CppNumericalSolvers/neldermead.h	/^    auto optimize(const ObjFun& objFun, const std::vector<T>& x){$/;"	f	namespace:neldermead
optimize	cuckoo_search/cuckoo.h	/^    auto optimize(const ObjFn& objFn, const Array& ul, int n, int totalMC, double tol, int seed){$/;"	f	namespace:cuckoo
optimize	cuckoo_search/firefly.h	/^    auto optimize($/;"	f	namespace:firefly
optimize	nelder_mead/neldermead.h	/^    std::tuple<std::vector<D>, D> optimize(const OP& f,                   \/\/target function$/;"	f	namespace:neldermead
optionDeltaTransform	FFTOptionPricing/OptionPricing.h	/^    auto optionDeltaTransform($/;"	f	namespace:optionprice
optionGammaTransform	FFTOptionPricing/OptionPricing.h	/^    auto optionGammaTransform($/;"	f	namespace:optionprice
optionPriceTransform	FFTOptionPricing/OptionPricing.h	/^    auto optionPriceTransform($/;"	f	namespace:optionprice
optionThetaTransform	FFTOptionPricing/OptionPricing.h	/^    auto optionThetaTransform($/;"	f	namespace:optionprice
optioncal	FFTOptionPricing/OptionCalibration.h	/^namespace optioncal{$/;"	n
optionprice	FFTOptionPricing/OptionPricing.h	/^namespace optionprice{$/;"	n
optparms	cuckoo_search/utils.h	/^    constexpr int optparms=0;$/;"	m	namespace:swarm_utils
optparms	nelder_mead/neldermead.h	/^    constexpr int optparms=0;$/;"	m	namespace:neldermead
oss	AutoDiff/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	BSImpliedVolatility/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	CharacteristicFunctions/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	CppNumericalSolvers/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	FangOost/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	FunctionalUtilities/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	GaussNewton/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	HullWhite/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	ODESolver/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	RungeKutta/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	Vasicek/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	cfdistutilities/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	cuckoo_search/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	levy-functions/src/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	nelder_mead/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
oss	neuralNet/catch.hpp	/^        std::ostringstream oss;$/;"	m	struct:Catch::CopyableStream
pack_params	GaussNewton/Newton.h	/^  auto pack_params(std::vector<T>&& val){$/;"	f	namespace:newton
pack_params	GaussNewton/Newton.h	/^  auto pack_params(std::vector<T>&& val, const T& current, const Ts&... others){$/;"	f	namespace:newton
parse_char	levy-functions/src/parse_json.h	/^rapidjson::Document parse_char(char* json){$/;"	f
performOptionalSelector	AutoDiff/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	BSImpliedVolatility/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	CharacteristicFunctions/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	CppNumericalSolvers/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	FangOost/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	FunctionalUtilities/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	GaussNewton/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	HullWhite/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	ODESolver/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	RungeKutta/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	Vasicek/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	cfdistutilities/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	cuckoo_search/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	levy-functions/src/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	nelder_mead/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
performOptionalSelector	neuralNet/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f
phiK	FFTOptionPricing/OptionPricing.h	/^    auto phiK(const A& a, const B& b, const C& c, const D& d, const U& u, const Index& k){$/;"	f	namespace:optionprice
phiT	HullWhite/HullWhite.h	/^  auto phiT($/;"	f	namespace:hullwhite
pluralise	AutoDiff/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	BSImpliedVolatility/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	CharacteristicFunctions/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	CppNumericalSolvers/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	FangOost/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	FunctionalUtilities/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	GaussNewton/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	HullWhite/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	ODESolver/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	RungeKutta/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	Vasicek/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	cfdistutilities/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	cuckoo_search/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	levy-functions/src/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	nelder_mead/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
pluralise	neuralNet/catch.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
powTwo	cfdistutilities/CFDistUtilities.h	/^    auto powTwo(const Number& x){$/;"	f	namespace:cfdistutilities
prec1	HullWhite/HullWhite.h	/^constexpr double prec1=.0000001;$/;"	v
prec2	HullWhite/HullWhite.h	/^constexpr double prec2=.0000001;$/;"	v
previousInputIndex	GaussNewton/Newton.h	/^  constexpr int previousInputIndex=1;$/;"	m	namespace:newton
printIteration	GaussNewton/Newton.h	/^  auto printIteration(const Index& index){$/;"	f	namespace:newton
printJson	opsRisk/main.cpp	/^void printJson(const Container& myContainer, const Range& mn, const Range& dx){$/;"	f
printResults	FFTOptionPricing/generateCharts.cpp	/^void printResults($/;"	f
printResults	GaussNewton/Newton.h	/^  auto printResults(const OptObj& optObj){$/;"	f	namespace:newton
r_init	HullWhite/HullWhite.h	/^constexpr double r_init=.03;$/;"	v
rastigrinScale	cuckoo_search/test.cpp	/^constexpr double rastigrinScale=10;$/;"	v
rawMemoryToString	AutoDiff/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	BSImpliedVolatility/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	CharacteristicFunctions/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	CppNumericalSolvers/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	FangOost/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	FunctionalUtilities/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	GaussNewton/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	HullWhite/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	ODESolver/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	RungeKutta/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	Vasicek/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	cfdistutilities/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	cuckoo_search/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	levy-functions/src/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	nelder_mead/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	neuralNet/catch.hpp	/^    inline std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rd	neuralNet/NeuralNetGraph.h	/^std::random_device rd;$/;"	v
recipricol	AutoDiff/AutoDiff.h	/^        AutoDiff<T> recipricol() const{$/;"	f	class:AutoDiff
reconstructedExpression	AutoDiff/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	BSImpliedVolatility/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	CharacteristicFunctions/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	CppNumericalSolvers/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	FangOost/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	FunctionalUtilities/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	GaussNewton/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	HullWhite/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	ODESolver/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	RungeKutta/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	Vasicek/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	cfdistutilities/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	cuckoo_search/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	levy-functions/src/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	nelder_mead/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	neuralNet/catch.hpp	/^        std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
recurse_move	FunctionalUtilities/FunctionalUtilities.h	/^    auto recurse_move(const incr& n, init&& initValue, fnToApply&& fn){$/;"	f	namespace:futilities
recurse_move	FunctionalUtilities/FunctionalUtilities.h	/^    auto recurse_move(const incr& n, init&& initValue, fnToApply&& fn, keepGoing&& kpg){$/;"	f	namespace:futilities
reduce	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce(Array&& array, Function&& fn){$/;"	f	namespace:futilities
reduce	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce(Array&& array, Function&& fn, const OptionalFirstItem& item){$/;"	f	namespace:futilities
reduce_copy	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce_copy(const Array& array, Function&& fn){$/;"	f	namespace:futilities
reduce_copy	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce_copy(const Array& array, Function&& fn, const OptionalFirstItem& item){$/;"	f	namespace:futilities
reduce_reverse	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce_reverse(Array&& array, Function&& fn){$/;"	f	namespace:futilities
reduce_reverse	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce_reverse(Array&& array, Function&& fn, const OptionalFirstItem& item){$/;"	f	namespace:futilities
reduce_reverse_copy	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce_reverse_copy(const Array& array, Function&& fn){$/;"	f	namespace:futilities
reduce_reverse_copy	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce_reverse_copy(const Array& array, Function&& fn, const OptionalFirstItem& item){$/;"	f	namespace:futilities
reduce_to_single	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce_to_single(const Array& array, Function&& fn){$/;"	f	namespace:futilities
reduce_to_single	FunctionalUtilities/FunctionalUtilities.h	/^    auto reduce_to_single(const Array& array, Function&& fn,  OptionalFirstItem&& item){$/;"	f	namespace:futilities
release	AutoDiff/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	BSImpliedVolatility/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	CharacteristicFunctions/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	CppNumericalSolvers/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	FangOost/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	FunctionalUtilities/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	GaussNewton/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	HullWhite/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	ODESolver/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	RungeKutta/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	Vasicek/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	cfdistutilities/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	cuckoo_search/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	levy-functions/src/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	nelder_mead/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
release	neuralNet/catch.hpp	/^        virtual void release() const {$/;"	f	struct:Catch::SharedImpl
removeFirstAndLastElement	levy-functions/src/calibrator.cpp	/^auto removeFirstAndLastElement(Array&& arr){$/;"	f
reset	AutoDiff/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	BSImpliedVolatility/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	CharacteristicFunctions/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	CppNumericalSolvers/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	FangOost/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	FunctionalUtilities/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	GaussNewton/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	HullWhite/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	ODESolver/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	RungeKutta/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	Vasicek/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	cfdistutilities/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	cuckoo_search/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	levy-functions/src/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	nelder_mead/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
reset	neuralNet/catch.hpp	/^        void reset() {$/;"	f	class:Catch::Ptr
resultDisposition	AutoDiff/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	BSImpliedVolatility/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	CharacteristicFunctions/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	CppNumericalSolvers/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	FangOost/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	FunctionalUtilities/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	GaussNewton/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	HullWhite/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	ODESolver/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	RungeKutta/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	Vasicek/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	cfdistutilities/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	cuckoo_search/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	levy-functions/src/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	nelder_mead/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	neuralNet/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultType	AutoDiff/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	BSImpliedVolatility/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	CharacteristicFunctions/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	CppNumericalSolvers/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	FangOost/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	FunctionalUtilities/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	GaussNewton/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	HullWhite/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	ODESolver/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	RungeKutta/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	Vasicek/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	cfdistutilities/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	cuckoo_search/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	levy-functions/src/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	nelder_mead/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
resultType	neuralNet/catch.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
rhs	AutoDiff/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	BSImpliedVolatility/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	CharacteristicFunctions/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	CppNumericalSolvers/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	FangOost/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	FunctionalUtilities/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	GaussNewton/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	HullWhite/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	ODESolver/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	RungeKutta/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	Vasicek/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	cfdistutilities/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	cuckoo_search/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	levy-functions/src/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	nelder_mead/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rhs	neuralNet/catch.hpp	/^            std::string lhs, rhs, op;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
rungekutta	RungeKutta/RungeKutta.h	/^namespace rungekutta { \/\/generic class, can take complex numbers etc$/;"	n
s	AutoDiff/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	BSImpliedVolatility/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	CharacteristicFunctions/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	CppNumericalSolvers/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	FangOost/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	FunctionalUtilities/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	GaussNewton/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	HullWhite/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	ODESolver/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	RungeKutta/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	Vasicek/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	cfdistutilities/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	cuckoo_search/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	levy-functions/src/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	nelder_mead/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
s	neuralNet/catch.hpp	/^        static std::ostream &s;$/;"	m	struct:Catch::Detail::IsStreamInsertable
setDual	AutoDiff/AutoDiff.h	/^        void setDual(const T& val){$/;"	f	class:AutoDiff
setItemAt	CppNumericalSolvers/neldermead.h	/^    void setItemAt(int row, int col, int rowLength, const T& item, std::vector<T>&& vM){$/;"	f	namespace:neldermead
setItemAt	CppNumericalSolvers/neldermeadsolver.h	/^  auto setItemAt(int row, int col, int numRows, const T& item, std::vector<T>&& vM){$/;"	f	namespace:cppoptlib
setOptimizationObject	GaussNewton/Newton.h	/^  auto setOptimizationObject(OptObj&& optObj, const T& functionOutput, const T& previousInput, const T& currentInput){$/;"	f	namespace:newton
setStandard	AutoDiff/AutoDiff.h	/^        void setStandard(const T& val){$/;"	f	class:AutoDiff
setWeights	neuralNet/NeuralNetGraph.h	/^    void setWeights(int numNodes){$/;"	f	struct:Node
shouldContinueOnFailure	AutoDiff/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	BSImpliedVolatility/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	CharacteristicFunctions/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	CppNumericalSolvers/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	FangOost/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	FunctionalUtilities/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	GaussNewton/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	HullWhite/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	ODESolver/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	RungeKutta/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	Vasicek/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	cfdistutilities/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	cuckoo_search/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	levy-functions/src/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	nelder_mead/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	neuralNet/catch.hpp	/^    inline bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	AutoDiff/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	BSImpliedVolatility/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	CharacteristicFunctions/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	CppNumericalSolvers/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	FangOost/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	FunctionalUtilities/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	GaussNewton/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	HullWhite/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	ODESolver/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	RungeKutta/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	Vasicek/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	cfdistutilities/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	cuckoo_search/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	levy-functions/src/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	nelder_mead/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	neuralNet/catch.hpp	/^    inline bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
sin	AutoDiff/AutoDiff.h	/^auto sin(const AutoDiff<W> &val){$/;"	f
sizer	AutoDiff/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	AutoDiff/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	BSImpliedVolatility/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	BSImpliedVolatility/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	CharacteristicFunctions/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	CharacteristicFunctions/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	CppNumericalSolvers/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	CppNumericalSolvers/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	FangOost/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	FangOost/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	FunctionalUtilities/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	FunctionalUtilities/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	GaussNewton/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	GaussNewton/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	HullWhite/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	HullWhite/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	ODESolver/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	ODESolver/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	RungeKutta/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	RungeKutta/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	Vasicek/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	Vasicek/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	cfdistutilities/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	cfdistutilities/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	cuckoo_search/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	cuckoo_search/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	levy-functions/src/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	levy-functions/src/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	nelder_mead/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	nelder_mead/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
sizer	neuralNet/catch.hpp	/^    struct FalseType { char sizer[2]; };$/;"	m	struct:Catch::Detail::FalseType
sizer	neuralNet/catch.hpp	/^    struct TrueType { char sizer[1]; };$/;"	m	struct:Catch::Detail::TrueType
solveODE	ODESolver/ODESolver.h	/^    auto solveODE($/;"	f	namespace:odesolver
solveODE	ODESolver/ODESolver.h	/^auto solveODE($/;"	f
solveODE_diff	ODESolver/ODESolver.h	/^    auto solveODE_diff($/;"	f	namespace:odesolver
sortNest	cuckoo_search/cuckoo.h	/^    void sortNest(Nest& nestRef){$/;"	f	namespace:cuckoo
sortNest	cuckoo_search/firefly.h	/^    void sortNest(FireFlies& fireflyRef){$/;"	f	namespace:firefly
spline	FFTOptionPricing/monotone_spline.h	/^namespace spline{$/;"	n
splineChoice	levy-functions/src/calibrator.cpp	/^constexpr int splineChoice=0;$/;"	v
sqrt	AutoDiff/AutoDiff.h	/^auto sqrt(const AutoDiff<W> &val){$/;"	f
stableCF	CharacteristicFunctions/CharacteristicFunctions.h	/^    auto stableCF(const std::complex<T>& u, const Number& alpha, const Number& mu, const Number& beta, const Number& c){$/;"	f	namespace:chfunctions
standard	AutoDiff/AutoDiff.h	/^        T standard;$/;"	m	class:AutoDiff
subtract	AutoDiff/AutoDiff.h	/^        auto subtract(const AutoDiff<W> &val) const{$/;"	f	class:AutoDiff
subtract	AutoDiff/AutoDiff.h	/^        auto subtract(const W& val) const{$/;"	f	class:AutoDiff
sum	FunctionalUtilities/FunctionalUtilities.h	/^    auto sum(const Array& array, Function&& fn){$/;"	f	namespace:futilities
sum_subset	FunctionalUtilities/FunctionalUtilities.h	/^    auto sum_subset(const Array& array, int beginFrom, int endFrom, Function&& fn){$/;"	f	namespace:futilities
swap	AutoDiff/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	BSImpliedVolatility/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	CharacteristicFunctions/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	CppNumericalSolvers/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	FangOost/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	FunctionalUtilities/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	GaussNewton/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	HullWhite/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	ODESolver/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	RungeKutta/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	Vasicek/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	cfdistutilities/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	cuckoo_search/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	levy-functions/src/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	nelder_mead/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swap	neuralNet/catch.hpp	/^        void swap( Ptr& other ) { std::swap( m_p, other.m_p ); }$/;"	f	class:Catch::Ptr
swarm_utils	cuckoo_search/utils.h	/^namespace swarm_utils{$/;"	n
t	AutoDiff/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	BSImpliedVolatility/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	CharacteristicFunctions/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	CppNumericalSolvers/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	FangOost/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	FunctionalUtilities/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	GaussNewton/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	HullWhite/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	ODESolver/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	RungeKutta/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	Vasicek/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	cfdistutilities/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	cuckoo_search/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	levy-functions/src/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	nelder_mead/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
t	neuralNet/catch.hpp	/^        static T  const&t;$/;"	m	struct:Catch::Detail::IsStreamInsertable
testFalse	AutoDiff/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	BSImpliedVolatility/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	CharacteristicFunctions/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	CppNumericalSolvers/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	FangOost/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	FunctionalUtilities/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	GaussNewton/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	HullWhite/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	ODESolver/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	RungeKutta/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	Vasicek/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	cfdistutilities/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	cuckoo_search/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	levy-functions/src/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	nelder_mead/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
testFalse	neuralNet/catch.hpp	/^            bool testFalse;$/;"	m	struct:Catch::ResultBuilder::ExprComponents
thomasAlgorithm	ODESolver/ODESolver.h	/^    auto thomasAlgorithm(lowerArray&& lower,mainArray&& main, upperArray&& upper, solveArray&& solve){$/;"	f	namespace:odesolver
thomasAlgorithm_diff	ODESolver/ODESolver.h	/^    auto thomasAlgorithm_diff(const lowerArray& lower, const mainArray& main, const upperArray& upper, const solveArray& solve){$/;"	f	namespace:odesolver
toString	AutoDiff/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	AutoDiff/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	AutoDiff/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	AutoDiff/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	AutoDiff/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	AutoDiff/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	AutoDiff/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	BSImpliedVolatility/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	BSImpliedVolatility/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	BSImpliedVolatility/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	BSImpliedVolatility/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	BSImpliedVolatility/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	BSImpliedVolatility/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	BSImpliedVolatility/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	CharacteristicFunctions/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	CharacteristicFunctions/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	CharacteristicFunctions/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	CharacteristicFunctions/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	CharacteristicFunctions/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	CharacteristicFunctions/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	CharacteristicFunctions/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	CppNumericalSolvers/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	CppNumericalSolvers/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	CppNumericalSolvers/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	CppNumericalSolvers/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	CppNumericalSolvers/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	CppNumericalSolvers/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	CppNumericalSolvers/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	FangOost/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	FangOost/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	FangOost/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	FangOost/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	FangOost/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	FangOost/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	FangOost/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	FunctionalUtilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	FunctionalUtilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	FunctionalUtilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	FunctionalUtilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	FunctionalUtilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	FunctionalUtilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	FunctionalUtilities/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	GaussNewton/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	GaussNewton/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	GaussNewton/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	GaussNewton/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	GaussNewton/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	GaussNewton/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	GaussNewton/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	HullWhite/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	HullWhite/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	HullWhite/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	HullWhite/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	HullWhite/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	HullWhite/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	HullWhite/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	ODESolver/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	ODESolver/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	ODESolver/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	ODESolver/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	ODESolver/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	ODESolver/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	ODESolver/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	RungeKutta/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	RungeKutta/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	RungeKutta/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	RungeKutta/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	RungeKutta/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	RungeKutta/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	RungeKutta/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	Vasicek/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	Vasicek/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	Vasicek/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	Vasicek/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	Vasicek/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	Vasicek/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	Vasicek/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	cfdistutilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	cfdistutilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	cfdistutilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	cfdistutilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	cfdistutilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	cfdistutilities/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	cfdistutilities/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	cuckoo_search/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	cuckoo_search/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	cuckoo_search/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	cuckoo_search/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	cuckoo_search/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	cuckoo_search/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	cuckoo_search/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	levy-functions/src/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	levy-functions/src/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	levy-functions/src/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	levy-functions/src/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	levy-functions/src/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	levy-functions/src/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	levy-functions/src/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	nelder_mead/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	nelder_mead/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	nelder_mead/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	nelder_mead/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	nelder_mead/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	nelder_mead/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	nelder_mead/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toString	neuralNet/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AllOf
toString	neuralNet/catch.hpp	/^            virtual std::string toString() const {$/;"	f	class:Catch::Matchers::Impl::Generic::AnyOf
toString	neuralNet/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Contains
toString	neuralNet/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::EndsWith
toString	neuralNet/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::Equals
toString	neuralNet/catch.hpp	/^            virtual std::string toString() const {$/;"	f	struct:Catch::Matchers::Impl::StdString::StartsWith
toString	neuralNet/catch.hpp	/^std::string toString( std::vector<T,Allocator> const& v ) {$/;"	f	namespace:Catch
toStringSuffix	AutoDiff/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	BSImpliedVolatility/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	CharacteristicFunctions/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	CppNumericalSolvers/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	FangOost/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	FunctionalUtilities/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	GaussNewton/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	HullWhite/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	ODESolver/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	RungeKutta/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	Vasicek/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	cfdistutilities/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	cuckoo_search/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	levy-functions/src/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	nelder_mead/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
toStringSuffix	neuralNet/catch.hpp	/^            std::string toStringSuffix() const$/;"	f	struct:Catch::Matchers::Impl::StdString::CasedString
tol	FFTOptionPricing/generateCharts.cpp	/^const double tol=.000001;$/;"	v
totalOptimizationSize	GaussNewton/Newton.h	/^  constexpr int totalOptimizationSize=3;$/;"	m	namespace:newton
transformPrice	FFTOptionPricing/OptionCalibration.h	/^    auto transformPrice(const T& p, const T& v){$/;"	f	namespace:optioncal
transformPrices	FFTOptionPricing/OptionCalibration.h	/^    auto transformPrices(const std::vector<V>& arr, const Stock& asset, const V& minV, const V& maxV){$/;"	f	namespace:optioncal
transformPrices	FFTOptionPricing/OptionCalibration.h	/^    auto transformPrices(const std::vector<V>& arr, const Stock& asset, const V& minV, const V& maxV, FN&& transform){$/;"	f	namespace:optioncal
trueValue	AutoDiff/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	BSImpliedVolatility/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	CharacteristicFunctions/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	CppNumericalSolvers/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	FangOost/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	FunctionalUtilities/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	GaussNewton/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	HullWhite/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	ODESolver/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	RungeKutta/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	Vasicek/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	cfdistutilities/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	cuckoo_search/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	levy-functions/src/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	nelder_mead/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
trueValue	neuralNet/catch.hpp	/^        void trueValue() const {}$/;"	f	class:Catch::SafeBool
updateIndex	levy-functions/src/parse_json.h	/^int updateIndex(const JsonParm& parms, const std::string& key, int index, std::unordered_map<std::string, int>* mapKeyToIndex){$/;"	f
upper	cuckoo_search/utils.h	/^        T upper;$/;"	m	struct:swarm_utils::upper_lower
upper_lower	cuckoo_search/utils.h	/^        upper_lower(T&& lower_, T&& upper_){$/;"	f	struct:swarm_utils::upper_lower
upper_lower	cuckoo_search/utils.h	/^    struct upper_lower{$/;"	s	namespace:swarm_utils
value	AutoDiff/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon1
value	BSImpliedVolatility/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon2
value	CharacteristicFunctions/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon3
value	CppNumericalSolvers/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon4
value	FangOost/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon5
value	FunctionalUtilities/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon6
value	GaussNewton/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon7
value	HullWhite/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon8
value	ODESolver/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon9
value	RungeKutta/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon10
value	Vasicek/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon11
value	cfdistutilities/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon12
value	cuckoo_search/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon13
value	levy-functions/src/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon14
value	nelder_mead/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon15
value	neuralNet/catch.hpp	/^        enum { value = sizeof( testStreamable(s << t) ) == sizeof( TrueType ) };$/;"	e	enum:Catch::Detail::IsStreamInsertable::__anon16
varianceR	HullWhite/HullWhite.h	/^  auto varianceR(\/*the variance of r_t under risk neutral measure *\/$/;"	f	namespace:hullwhite
vasicek	Vasicek/Vasicek.h	/^namespace vasicek{   $/;"	n
w	neuralNet/NeuralNetGraph.h	/^    double w; \/\/stores the weight$/;"	m	struct:weights
weights	neuralNet/NeuralNetGraph.h	/^    weights(){$/;"	f	struct:weights
weights	neuralNet/NeuralNetGraph.h	/^struct weights{$/;"	s
zeros	GaussNewton/Newton.h	/^  auto zeros(OBJFUNC&& objective, DERIV&& derivative, const Guess& guess, const Guess& precision1, const Guess& precision2, const Index& maxNum){ \/\/({2.0, guess+1.0, guess})$/;"	f	namespace:newton
zeros	GaussNewton/Newton.h	/^  auto zeros(OBJFUNC&& objective, const Guess& guess, const Guess& precision1, const Guess& precision2, const Index& maxNum){ $/;"	f	namespace:newton
~Matcher	AutoDiff/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	BSImpliedVolatility/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	CharacteristicFunctions/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	CppNumericalSolvers/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	FangOost/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	FunctionalUtilities/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	GaussNewton/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	HullWhite/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	ODESolver/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	RungeKutta/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	Vasicek/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	cfdistutilities/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	cuckoo_search/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	levy-functions/src/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	nelder_mead/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~Matcher	neuralNet/catch.hpp	/^        virtual ~Matcher() {}$/;"	f	struct:Catch::Matchers::Impl::Matcher
~MethodTestCase	AutoDiff/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	BSImpliedVolatility/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	CharacteristicFunctions/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	CppNumericalSolvers/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	FangOost/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	FunctionalUtilities/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	GaussNewton/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	HullWhite/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	ODESolver/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	RungeKutta/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	Vasicek/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	cfdistutilities/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	cuckoo_search/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	levy-functions/src/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	nelder_mead/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~MethodTestCase	neuralNet/catch.hpp	/^    virtual ~MethodTestCase() {}$/;"	f	class:Catch::MethodTestCase
~Ptr	AutoDiff/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	BSImpliedVolatility/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	CharacteristicFunctions/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	CppNumericalSolvers/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	FangOost/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	FunctionalUtilities/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	GaussNewton/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	HullWhite/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	ODESolver/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	RungeKutta/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	Vasicek/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	cfdistutilities/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	cuckoo_search/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	levy-functions/src/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	nelder_mead/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
~Ptr	neuralNet/catch.hpp	/^        ~Ptr(){$/;"	f	class:Catch::Ptr
